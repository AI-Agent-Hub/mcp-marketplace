{
  "tools": [
    {
      "name": "create_or_update_file",
      "description": "Create or update a single file in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "path": {
            "type": "string",
            "description": "Path where to create/update the file"
          },
          "content": {
            "type": "string",
            "description": "Content of the file"
          },
          "message": {
            "type": "string",
            "description": "Commit message"
          },
          "branch": {
            "type": "string",
            "description": "Branch to create/update the file in"
          },
          "sha": {
            "type": "string",
            "description": "SHA of the file being replaced (required when updating existing files)"
          }
        },
        "required": [
          "owner",
          "repo",
          "path",
          "content",
          "message",
          "branch"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "search_repositories",
      "description": "Search for GitHub repositories",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query (see GitHub search syntax)"
          },
          "page": {
            "type": "number",
            "description": "Page number for pagination (default: 1)"
          },
          "perPage": {
            "type": "number",
            "description": "Number of results per page (default: 30, max: 100)"
          }
        },
        "required": [
          "query"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "create_repository",
      "description": "Create a new GitHub repository in your account",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Repository name"
          },
          "description": {
            "type": "string",
            "description": "Repository description"
          },
          "private": {
            "type": "boolean",
            "description": "Whether the repository should be private"
          },
          "autoInit": {
            "type": "boolean",
            "description": "Initialize with README.md"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "get_file_contents",
      "description": "Get the contents of a file or directory from a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "path": {
            "type": "string",
            "description": "Path to the file or directory"
          },
          "branch": {
            "type": "string",
            "description": "Branch to get contents from"
          }
        },
        "required": [
          "owner",
          "repo",
          "path"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "push_files",
      "description": "Push multiple files to a GitHub repository in a single commit",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "branch": {
            "type": "string",
            "description": "Branch to push to (e.g., 'main' or 'master')"
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                }
              },
              "required": [
                "path",
                "content"
              ],
              "additionalProperties": false
            },
            "description": "Array of files to push"
          },
          "message": {
            "type": "string",
            "description": "Commit message"
          }
        },
        "required": [
          "owner",
          "repo",
          "branch",
          "files",
          "message"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "create_issue",
      "description": "Create a new issue in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "repo": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "milestone": {
            "type": "number"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "owner",
          "repo",
          "title"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "create_pull_request",
      "description": "Create a new pull request in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "title": {
            "type": "string",
            "description": "Pull request title"
          },
          "body": {
            "type": "string",
            "description": "Pull request body/description"
          },
          "head": {
            "type": "string",
            "description": "The name of the branch where your changes are implemented"
          },
          "base": {
            "type": "string",
            "description": "The name of the branch you want the changes pulled into"
          },
          "draft": {
            "type": "boolean",
            "description": "Whether to create the pull request as a draft"
          },
          "maintainer_can_modify": {
            "type": "boolean",
            "description": "Whether maintainers can modify the pull request"
          }
        },
        "required": [
          "owner",
          "repo",
          "title",
          "head",
          "base"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "fork_repository",
      "description": "Fork a GitHub repository to your account or specified organization",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "organization": {
            "type": "string",
            "description": "Optional: organization to fork to (defaults to your personal account)"
          }
        },
        "required": [
          "owner",
          "repo"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "create_branch",
      "description": "Create a new branch in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "branch": {
            "type": "string",
            "description": "Name for the new branch"
          },
          "from_branch": {
            "type": "string",
            "description": "Optional: source branch to create from (defaults to the repository's default branch)"
          }
        },
        "required": [
          "owner",
          "repo",
          "branch"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "list_commits",
      "description": "Get list of commits of a branch in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "repo": {
            "type": "string"
          },
          "sha": {
            "type": "string"
          },
          "page": {
            "type": "number"
          },
          "perPage": {
            "type": "number"
          }
        },
        "required": [
          "owner",
          "repo"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "list_issues",
      "description": "List issues in a GitHub repository with filtering options",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "repo": {
            "type": "string"
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "page": {
            "type": "number"
          },
          "per_page": {
            "type": "number"
          },
          "since": {
            "type": "string"
          },
          "sort": {
            "type": "string",
            "enum": [
              "created",
              "updated",
              "comments"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "open",
              "closed",
              "all"
            ]
          }
        },
        "required": [
          "owner",
          "repo"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "update_issue",
      "description": "Update an existing issue in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "repo": {
            "type": "string"
          },
          "issue_number": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "milestone": {
            "type": "number"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "open",
              "closed"
            ]
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "add_issue_comment",
      "description": "Add a comment to an existing issue",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "repo": {
            "type": "string"
          },
          "issue_number": {
            "type": "number"
          },
          "body": {
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number",
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "search_code",
      "description": "Search for code across GitHub repositories",
      "inputSchema": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string"
          },
          "order": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "page": {
            "type": "number",
            "minimum": 1
          },
          "per_page": {
            "type": "number",
            "minimum": 1,
            "maximum": 100
          }
        },
        "required": [
          "q"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "search_issues",
      "description": "Search for issues and pull requests across GitHub repositories",
      "inputSchema": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string"
          },
          "order": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "page": {
            "type": "number",
            "minimum": 1
          },
          "per_page": {
            "type": "number",
            "minimum": 1,
            "maximum": 100
          },
          "sort": {
            "type": "string",
            "enum": [
              "comments",
              "reactions",
              "reactions-+1",
              "reactions--1",
              "reactions-smile",
              "reactions-thinking_face",
              "reactions-heart",
              "reactions-tada",
              "interactions",
              "created",
              "updated"
            ]
          }
        },
        "required": [
          "q"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "search_users",
      "description": "Search for users on GitHub",
      "inputSchema": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string"
          },
          "order": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "page": {
            "type": "number",
            "minimum": 1
          },
          "per_page": {
            "type": "number",
            "minimum": 1,
            "maximum": 100
          },
          "sort": {
            "type": "string",
            "enum": [
              "followers",
              "repositories",
              "joined"
            ]
          }
        },
        "required": [
          "q"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "get_issue",
      "description": "Get details of a specific issue in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "repo": {
            "type": "string"
          },
          "issue_number": {
            "type": "number"
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "get_pull_request",
      "description": "Get details of a specific pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "pull_number": {
            "type": "number",
            "description": "Pull request number"
          }
        },
        "required": [
          "owner",
          "repo",
          "pull_number"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "list_pull_requests",
      "description": "List and filter repository pull requests",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "state": {
            "type": "string",
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "description": "State of the pull requests to return"
          },
          "head": {
            "type": "string",
            "description": "Filter by head user or head organization and branch name"
          },
          "base": {
            "type": "string",
            "description": "Filter by base branch name"
          },
          "sort": {
            "type": "string",
            "enum": [
              "created",
              "updated",
              "popularity",
              "long-running"
            ],
            "description": "What to sort results by"
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "The direction of the sort"
          },
          "per_page": {
            "type": "number",
            "description": "Results per page (max 100)"
          },
          "page": {
            "type": "number",
            "description": "Page number of the results"
          }
        },
        "required": [
          "owner",
          "repo"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "create_pull_request_review",
      "description": "Create a review on a pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "pull_number": {
            "type": "number",
            "description": "Pull request number"
          },
          "commit_id": {
            "type": "string",
            "description": "The SHA of the commit that needs a review"
          },
          "body": {
            "type": "string",
            "description": "The body text of the review"
          },
          "event": {
            "type": "string",
            "enum": [
              "APPROVE",
              "REQUEST_CHANGES",
              "COMMENT"
            ],
            "description": "The review action to perform"
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The relative path to the file being commented on"
                },
                "position": {
                  "type": "number",
                  "description": "The position in the diff where you want to add a review comment"
                },
                "body": {
                  "type": "string",
                  "description": "Text of the review comment"
                }
              },
              "required": [
                "path",
                "position",
                "body"
              ],
              "additionalProperties": false
            },
            "description": "Comments to post as part of the review"
          }
        },
        "required": [
          "owner",
          "repo",
          "pull_number",
          "body",
          "event"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "merge_pull_request",
      "description": "Merge a pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "pull_number": {
            "type": "number",
            "description": "Pull request number"
          },
          "commit_title": {
            "type": "string",
            "description": "Title for the automatic commit message"
          },
          "commit_message": {
            "type": "string",
            "description": "Extra detail to append to automatic commit message"
          },
          "merge_method": {
            "type": "string",
            "enum": [
              "merge",
              "squash",
              "rebase"
            ],
            "description": "Merge method to use"
          }
        },
        "required": [
          "owner",
          "repo",
          "pull_number"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "get_pull_request_files",
      "description": "Get the list of files changed in a pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "pull_number": {
            "type": "number",
            "description": "Pull request number"
          }
        },
        "required": [
          "owner",
          "repo",
          "pull_number"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "get_pull_request_status",
      "description": "Get the combined status of all status checks for a pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "pull_number": {
            "type": "number",
            "description": "Pull request number"
          }
        },
        "required": [
          "owner",
          "repo",
          "pull_number"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "update_pull_request_branch",
      "description": "Update a pull request branch with the latest changes from the base branch",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "pull_number": {
            "type": "number",
            "description": "Pull request number"
          },
          "expected_head_sha": {
            "type": "string",
            "description": "The expected SHA of the pull request's HEAD ref"
          }
        },
        "required": [
          "owner",
          "repo",
          "pull_number"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "get_pull_request_comments",
      "description": "Get the review comments on a pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "pull_number": {
            "type": "number",
            "description": "Pull request number"
          }
        },
        "required": [
          "owner",
          "repo",
          "pull_number"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "get_pull_request_reviews",
      "description": "Get the reviews on a pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "pull_number": {
            "type": "number",
            "description": "Pull request number"
          }
        },
        "required": [
          "owner",
          "repo",
          "pull_number"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "create_project",
      "description": "Create a new project in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "name": {
            "type": "string",
            "description": "Name of the project"
          },
          "body": {
            "type": "string",
            "description": "Description of the project"
          }
        },
        "required": [
          "owner",
          "repo",
          "name"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "get_project",
      "description": "Get details about a specific project",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "project_number": {
            "type": "number",
            "description": "The project number"
          }
        },
        "required": [
          "owner",
          "repo",
          "project_number"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "update_project",
      "description": "Update an existing project's details",
      "inputSchema": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "number",
            "description": "The unique identifier of the project"
          },
          "name": {
            "type": "string",
            "description": "New name of the project"
          },
          "body": {
            "type": "string",
            "description": "New description of the project"
          },
          "state": {
            "type": "string",
            "enum": [
              "open",
              "closed"
            ],
            "description": "State of the project"
          }
        },
        "required": [
          "project_id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "list_projects",
      "description": "List all projects in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "state": {
            "type": "string",
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "description": "Filter projects by state"
          },
          "page": {
            "type": "number",
            "description": "Page number for pagination (starts at 1)"
          },
          "per_page": {
            "type": "number",
            "description": "Number of results per page (max 100)"
          }
        },
        "required": [
          "owner",
          "repo"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "create_project_column",
      "description": "Create a new column in a project",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "project_number": {
            "type": "number",
            "description": "The project number"
          },
          "name": {
            "type": "string",
            "description": "Name of the column"
          }
        },
        "required": [
          "owner",
          "repo",
          "project_number",
          "name"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "list_project_columns",
      "description": "List all columns in a project",
      "inputSchema": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "number",
            "description": "The unique identifier of the project"
          },
          "page": {
            "type": "number",
            "description": "Page number for pagination (starts at 1)"
          },
          "per_page": {
            "type": "number",
            "description": "Number of results per page (max 100)"
          }
        },
        "required": [
          "project_id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "update_project_column",
      "description": "Update an existing project column",
      "inputSchema": {
        "type": "object",
        "properties": {
          "column_id": {
            "type": "number",
            "description": "The unique identifier of the column"
          },
          "name": {
            "type": "string",
            "description": "New name of the column"
          }
        },
        "required": [
          "column_id",
          "name"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "delete_project_column",
      "description": "Delete a project column",
      "inputSchema": {
        "type": "object",
        "properties": {
          "column_id": {
            "type": "number",
            "description": "The unique identifier of the column"
          }
        },
        "required": [
          "column_id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "add_card_to_column",
      "description": "Add a new card to a project column",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "column_id": {
            "type": "string",
            "description": "The ID of the column to add card to"
          },
          "content_type": {
            "type": "string",
            "enum": [
              "Issue",
              "PullRequest",
              "Note"
            ],
            "description": "Type of content for the card"
          },
          "content_id": {
            "type": "number",
            "description": "ID of the issue or pull request (required if content_type is Issue or PullRequest)"
          },
          "note": {
            "type": "string",
            "description": "The note content for the card (required if content_type is Note)"
          }
        },
        "required": [
          "owner",
          "repo",
          "column_id",
          "content_type"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "list_column_cards",
      "description": "List all cards in a project column",
      "inputSchema": {
        "type": "object",
        "properties": {
          "column_id": {
            "type": "number",
            "description": "The unique identifier of the column"
          },
          "archived_state": {
            "type": "string",
            "enum": [
              "all",
              "archived",
              "not_archived"
            ],
            "description": "Filter by card archived state"
          },
          "page": {
            "type": "number",
            "description": "Page number for pagination (starts at 1)"
          },
          "per_page": {
            "type": "number",
            "description": "Number of results per page (max 100)"
          }
        },
        "required": [
          "column_id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "move_card",
      "description": "Move a card to a different position or column",
      "inputSchema": {
        "type": "object",
        "properties": {
          "card_id": {
            "type": "number",
            "description": "The unique identifier of the card"
          },
          "position": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "top",
                  "bottom"
                ]
              },
              {
                "type": "string",
                "pattern": "^after:\\d+$"
              }
            ],
            "description": "The position of the card (top, bottom, or after:<card_id>)"
          },
          "column_id": {
            "type": "number",
            "description": "The column ID to move the card to"
          }
        },
        "required": [
          "card_id",
          "position"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "delete_card",
      "description": "Delete a card from a project",
      "inputSchema": {
        "type": "object",
        "properties": {
          "card_id": {
            "type": "number",
            "description": "The unique identifier of the card"
          }
        },
        "required": [
          "card_id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "list_organization_projects",
      "description": "List all projects in a GitHub organization (at organization level, not repository level)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Organization name"
          },
          "state": {
            "type": "string",
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "description": "Filter projects by state"
          },
          "page": {
            "type": "number",
            "description": "Page number for pagination"
          },
          "per_page": {
            "type": "number",
            "description": "Number of results per page (max 100)"
          }
        },
        "required": [
          "org"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "list_organization_projects_v2",
      "description": "List projects V2 in a GitHub organization using GraphQL API",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Organization name"
          },
          "first": {
            "type": "number",
            "description": "Number of projects to fetch (max 100)"
          },
          "after": {
            "type": "string",
            "description": "Cursor for pagination"
          },
          "orderBy": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "enum": [
                  "CREATED_AT",
                  "UPDATED_AT"
                ]
              },
              "direction": {
                "type": "string",
                "enum": [
                  "ASC",
                  "DESC"
                ]
              }
            },
            "required": [
              "field",
              "direction"
            ],
            "additionalProperties": false,
            "description": "How to order the projects"
          }
        },
        "required": [
          "org"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "get_project_v2",
      "description": "Get details of a GitHub project V2 using GraphQL API",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The node ID of the project"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "create_project_v2",
      "description": "Create a new GitHub project V2 using GraphQL API",
      "inputSchema": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "description": "The node ID of the organization or user"
          },
          "title": {
            "type": "string",
            "description": "Title of the project"
          },
          "description": {
            "type": "string",
            "description": "Description of the project"
          }
        },
        "required": [
          "ownerId",
          "title"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "update_project_v2",
      "description": "Update a GitHub project V2 using GraphQL API",
      "inputSchema": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "description": "The node ID of the project"
          },
          "title": {
            "type": "string",
            "description": "New title for the project"
          },
          "description": {
            "type": "string",
            "description": "New description for the project"
          },
          "closed": {
            "type": "boolean",
            "description": "Whether to close the project"
          }
        },
        "required": [
          "projectId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "add_item_to_project_v2",
      "description": "Add an issue or pull request to a GitHub project V2 using GraphQL API",
      "inputSchema": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "description": "The node ID of the project"
          },
          "contentId": {
            "type": "string",
            "description": "The node ID of the issue or pull request to add"
          }
        },
        "required": [
          "projectId",
          "contentId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "list_project_v2_items",
      "description": "List items in a GitHub project V2 using GraphQL API",
      "inputSchema": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "description": "The node ID of the project"
          },
          "first": {
            "type": "number",
            "description": "Number of items to fetch (max 100)"
          },
          "after": {
            "type": "string",
            "description": "Cursor for pagination"
          }
        },
        "required": [
          "projectId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "update_project_v2_item_field",
      "description": "Update a field value for an item in a GitHub project V2 using GraphQL API",
      "inputSchema": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "description": "The node ID of the project"
          },
          "itemId": {
            "type": "string",
            "description": "The node ID of the item"
          },
          "fieldId": {
            "type": "string",
            "description": "The node ID of the field"
          },
          "value": {
            "description": "The new value for the field"
          }
        },
        "required": [
          "projectId",
          "itemId",
          "fieldId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    }
  ]
}
