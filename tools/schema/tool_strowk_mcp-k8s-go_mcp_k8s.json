Failed to connect to MCP server: spawn mcp-k8s-go ENOENT
Failed to connect to MCP server: spawn mcp-k8s-go ENOENT

Failed with exit code: 1
fied namespace",
      "inputSchema": {
        "type": "object",
        "properties": {
          "context": {
            "description": "Name of the Kubernetes context to use",
            "type": "string"
          },
          "namespace": {
            "description": "Name of the namespace where the pod is located",
            "type": "string"
          },
          "pod": {
            "description": "Name of the pod to get logs from",
            "type": "string"
          },
          "previousContainer": {
            "description": "Return previous terminated container logs, defaults to false.",
            "type": "boolean"
          },
          "sinceDuration": {
            "description": "Only return logs newer than a relative duration like 5s, 2m, or 3h. Only one of sinceTime or sinceDuration may be set.",
            "type": "string"
          },
          "sinceTime": {
            "description": "Only return logs after a specific date (RFC3339). Only one of sinceTime or sinceDuration may be set.",
            "type": "string"
          }
        },
        "required": [
          "context",
          "namespace",
          "pod"
        ]
      }
    },
    {
      "name": "get-k8s-resource",
      "description": "Get details of any Kubernetes resource like pod, node or service - completely as JSON or rendered using template",
      "inputSchema": {
        "type": "object",
        "properties": {
          "context": {
            "description": "Name of the Kubernetes context to use, defaults to current context",
            "type": "string"
          },
          "go_template": {
            "description": "Go template to render the output, if not specified, the complete JSON object will be returned",
            "type": "string"
          },
          "group": {
            "description": "API Group of the resource to get",
            "type": "string"
          },
          "kind": {
            "description": "Kind of resource to get",
            "type": "string"
          },
          "name": {
            "description": "Name of the resource to get",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace to get resource from, skip for cluster resources",
            "type": "string"
          },
          "version": {
            "description": "API Version of the resource to get",
            "type": "string"
          }
        },
        "required": [
          "kind",
          "name"
        ]
      }
    },
    {
      "name": "k8s-pod-exec",
      "description": "Execute command in Kubernetes pod",
      "inputSchema": {
        "type": "object",
        "properties": {
          "command": {
            "description": "Command to be executed",
            "type": "string"
          },
          "context": {
            "description": "Kubernetes context name, defaults to current context",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace where pod is located",
            "type": "string"
          },
          "pod": {
            "description": "Name of the pod to execute command in",
            "type": "string"
          },
          "stdin": {
            "description": "Standard input to the command, defaults to empty string",
            "type": "string"
          }
        },
        "required": [
          "namespace",
          "pod",
          "command"
        ]
      }
    },
    {
      "name": "list-k8s-contexts",
      "description": "List Kubernetes contexts from configuration files such as kubeconfig",
      "inputSchema": {
        "type": "object"
      }
    },
    {
      "name": "list-k8s-events",
      "description": "List Kubernetes events using specific context in a specified namespace",
      "inputSchema": {
        "type": "object",
        "properties": {
          "context": {
            "description": "Name of the Kubernetes context to use",
            "type": "string"
          },
          "limit": {
            "description": "Maximum number of events to list",
            "type": "number"
          },
          "namespace": {
            "description": "Name of the namespace to list events from",
            "type": "string"
          }
        },
        "required": [
          "context",
          "namespace"
        ]
      }
    },
    {
      "name": "list-k8s-namespaces",
      "description": "List Kubernetes namespaces using specific context",
      "inputSchema": {
        "type": "object",
        "properties": {
          "context": {
            "description": "Name of the Kubernetes context to use, defaults to current context",
            "type": "string"
          }
        }
      }
    },
    {
      "name": "list-k8s-nodes",
      "description": "List Kubernetes nodes using specific context",
      "inputSchema": {
        "type": "object",
        "properties": {
          "context": {
            "description": "Name of the Kubernetes context to use, defaults to current context",
            "type": "string"
          }
        }
      }
    },
    {
      "name": "list-k8s-resources",
      "description": "List arbitrary Kubernetes resources",
      "inputSchema": {
        "type": "object",
        "properties": {
          "context": {
            "description": "Name of the Kubernetes context to use, defaults to current context",
            "type": "string"
          },
          "group": {
            "description": "API Group of resources to list",
            "type": "string"
          },
          "kind": {
            "description": "Kind of resources to list",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace to list resources from, defaults to all namespaces",
            "type": "string"
          },
          "version": {
            "description": "API Version of resources to list",
            "type": "string"
          }
        },
        "required": [
          "kind"
        ]
      }
    }
  ]
}
