{
  "tools": [
    {
      "name": "login",
      "inputSchema": {
        "type": "object",
        "properties": {
          "force": {
            "type": "boolean",
            "default": false,
            "description": "Force a new login even if already logged in"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "logout",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "verify-login",
      "inputSchema": {
        "type": "object"
      }
    },
    {
      "name": "delete-onedrive-file",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "If-Match": {
            "type": "string",
            "description": "ETag"
          },
          "driveId": {
            "type": "string",
            "description": "Path parameter: driveId"
          },
          "driveItemId": {
            "type": "string",
            "description": "Path parameter: driveItemId"
          }
        },
        "required": [
          "driveId",
          "driveItemId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "delete-onedrive-file",
        "readOnlyHint": false
      }
    },
    {
      "name": "list-folder-files",
      "description": "Return a collection of DriveItems in the children relationship of a DriveItem. DriveItems with a non-null folder or package facet can have one or more child DriveItems.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "driveId": {
            "type": "string",
            "description": "Path parameter: driveId"
          },
          "driveItemId": {
            "type": "string",
            "description": "Path parameter: driveItemId"
          }
        },
        "required": [
          "driveId",
          "driveItemId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-folder-files",
        "readOnlyHint": true
      }
    },
    {
      "name": "download-onedrive-file-content",
      "description": "The content stream, if the item represents a file.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__format": {
            "type": "string",
            "description": "Format of the content"
          },
          "driveId": {
            "type": "string",
            "description": "Path parameter: driveId"
          },
          "driveItemId": {
            "type": "string",
            "description": "Path parameter: driveItemId"
          },
          "driveItemId1": {
            "type": "string",
            "description": "Path parameter: driveItemId1"
          }
        },
        "required": [
          "driveId",
          "driveItemId",
          "driveItemId1"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "download-onedrive-file-content",
        "readOnlyHint": true
      }
    },
    {
      "name": "list-excel-worksheets",
      "description": "Represents a collection of worksheets associated with the workbook. Read-only.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "driveId": {
            "type": "string",
            "description": "Path parameter: driveId"
          },
          "driveItemId": {
            "type": "string",
            "description": "Path parameter: driveItemId"
          }
        },
        "required": [
          "driveId",
          "driveItemId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-excel-worksheets",
        "readOnlyHint": true
      }
    },
    {
      "name": "create-excel-chart",
      "description": "Creates a new chart.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "sourceData": {},
              "seriesBy": {
                "type": "string"
              }
            },
            "additionalProperties": true
          },
          "driveId": {
            "type": "string",
            "description": "Path parameter: driveId"
          },
          "driveItemId": {
            "type": "string",
            "description": "Path parameter: driveItemId"
          },
          "workbookWorksheetId": {
            "type": "string",
            "description": "Path parameter: workbookWorksheetId"
          }
        },
        "required": [
          "body",
          "driveId",
          "driveItemId",
          "workbookWorksheetId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "create-excel-chart",
        "readOnlyHint": false
      }
    },
    {
      "name": "format-excel-range",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique identifier for an entity. Read-only."
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "columnWidth": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "string",
                        "enum": [
                          "-INF",
                          "INF",
                          "NaN"
                        ]
                      }
                    ],
                    "description": "The width of all columns within the range. If the column widths aren't uniform, null will be returned."
                  },
                  "horizontalAlignment": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The horizontal alignment for the specified object. Possible values are: General, Left, Center, Right, Fill, Justify, CenterAcrossSelection, Distributed."
                  },
                  "rowHeight": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "$ref": "#/properties/body/allOf/1/properties/columnWidth/anyOf/2"
                      }
                    ],
                    "description": "The height of all rows in the range. If the row heights aren't uniform null will be returned."
                  },
                  "verticalAlignment": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The vertical alignment for the specified object. Possible values are: Top, Center, Bottom, Justify, Distributed."
                  },
                  "wrapText": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Indicates whether Excel wraps the text in the object. A null value indicates that the entire range doesn't have a uniform wrap setting."
                  },
                  "borders": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "color": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The HTML color code that represents the color of the border line. Can either be of the form #RRGGBB, for example 'FFA500', or a named HTML color, for example 'orange'."
                            },
                            "sideIndex": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Indicates the specific side of the border. The possible values are: EdgeTop, EdgeBottom, EdgeLeft, EdgeRight, InsideVertical, InsideHorizontal, DiagonalDown, DiagonalUp. Read-only."
                            },
                            "style": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Indicates the line style for the border. The possible values are: None, Continuous, Dash, DashDot, DashDotDot, Dot, Double, SlantDashDot."
                            },
                            "weight": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The weight of the border around a range. The possible values are: Hairline, Thin, Medium, Thick."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "Collection of border objects that apply to the overall range selected Read-only."
                  },
                  "fill": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/properties/body/allOf/0"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "color": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "HTML color code representing the color of the border line. Can either be of the form #RRGGBB, for example 'FFA500', or be a named HTML color, for example 'orange'."
                              }
                            },
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Returns the fill object defined on the overall range. Read-only."
                  },
                  "font": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/properties/body/allOf/0"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "bold": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Inidicates whether the font is bold."
                              },
                              "color": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The HTML color code representation of the text color. For example, #FF0000 represents the color red."
                              },
                              "italic": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Inidicates whether the font is italic."
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The font name. For example, 'Calibri'."
                              },
                              "size": {
                                "anyOf": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "$ref": "#/properties/body/allOf/1/properties/columnWidth/anyOf/2"
                                  }
                                ],
                                "description": "The font size."
                              },
                              "underline": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The type of underlining applied to the font. The possible values are: None, Single, Double, SingleAccountant, DoubleAccountant."
                              }
                            },
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Returns the font object defined on the overall range selected Read-only."
                  },
                  "protection": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/properties/body/allOf/0"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "formulaHidden": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Indicates whether Excel hides the formula for the cells in the range. A null value indicates that the entire range doesn't have uniform formula hidden setting."
                              },
                              "locked": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Indicates whether Excel locks the cells in the object. A null value indicates that the entire range doesn't have uniform lock setting."
                              }
                            },
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Returns the format protection object for a range. Read-only."
                  }
                },
                "additionalProperties": true
              }
            ]
          },
          "driveId": {
            "type": "string",
            "description": "Path parameter: driveId"
          },
          "driveItemId": {
            "type": "string",
            "description": "Path parameter: driveItemId"
          },
          "workbookWorksheetId": {
            "type": "string",
            "description": "Path parameter: workbookWorksheetId"
          }
        },
        "required": [
          "body",
          "driveId",
          "driveItemId",
          "workbookWorksheetId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "format-excel-range",
        "readOnlyHint": false
      }
    },
    {
      "name": "sort-excel-range",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique identifier for an entity. Read-only."
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              }
            ]
          },
          "driveId": {
            "type": "string",
            "description": "Path parameter: driveId"
          },
          "driveItemId": {
            "type": "string",
            "description": "Path parameter: driveItemId"
          },
          "workbookWorksheetId": {
            "type": "string",
            "description": "Path parameter: workbookWorksheetId"
          }
        },
        "required": [
          "body",
          "driveId",
          "driveItemId",
          "workbookWorksheetId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "sort-excel-range",
        "readOnlyHint": false
      }
    },
    {
      "name": "get-excel-range",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "driveId": {
            "type": "string",
            "description": "Path parameter: driveId"
          },
          "driveItemId": {
            "type": "string",
            "description": "Path parameter: driveItemId"
          },
          "workbookWorksheetId": {
            "type": "string",
            "description": "Path parameter: workbookWorksheetId"
          },
          "address": {
            "type": "string",
            "description": "Path parameter: address"
          }
        },
        "required": [
          "driveId",
          "driveItemId",
          "workbookWorksheetId",
          "address"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "get-excel-range",
        "readOnlyHint": true
      }
    },
    {
      "name": "get-drive-root-item",
      "description": "The root folder of the drive. Read-only.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "driveId": {
            "type": "string",
            "description": "Path parameter: driveId"
          }
        },
        "required": [
          "driveId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "get-drive-root-item",
        "readOnlyHint": true
      }
    },
    {
      "name": "get-current-user",
      "description": "Returns the user or organizational contact assigned as the user&#x27;s manager. Optionally, you can expand the manager&#x27;s chain up to the root node.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "ConsistencyLevel": {
            "type": "string",
            "description": "Indicates the requested consistency level. Documentation URL: https://docs.microsoft.com/graph/aad-advanced-queries"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "get-current-user",
        "readOnlyHint": true
      }
    },
    {
      "name": "list-calendars",
      "description": "Get all the user&#x27;s calendars (/calendars navigation property), get the calendars from the default calendar group or from a specific calendar group.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-calendars",
        "readOnlyHint": true
      }
    },
    {
      "name": "get-calendar-view",
      "description": "Get the occurrences, exceptions, and single instances of events in a calendar view defined by a time range, from the user&#x27;s default calendar,\nor from some other calendar of the user.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "startDateTime": {
            "type": "string",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00"
          },
          "endDateTime": {
            "type": "string",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00"
          },
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "startDateTime",
          "endDateTime"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "get-calendar-view",
        "readOnlyHint": true
      }
    },
    {
      "name": "list-outlook-contacts",
      "description": "Get a contact collection from the default contacts folder of the signed-in user. There are two scenarios where an app can get contacts in another user&#x27;s contact folder:",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-outlook-contacts",
        "readOnlyHint": true
      }
    },
    {
      "name": "create-outlook-contact",
      "description": "Add a contact to the root Contacts folder or to the contacts endpoint of another contact folder.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique identifier for an entity. Read-only."
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "The categories associated with the item"
                  },
                  "changeKey": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only."
                  },
                  "createdDateTime": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  },
                  "lastModifiedDateTime": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "assistantName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The name of the contact's assistant."
                  },
                  "birthday": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  },
                  "businessAddress": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "city": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The city."
                          },
                          "countryOrRegion": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The country or region. It's a free-format string value, for example, 'United States'."
                          },
                          "postalCode": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The postal code."
                          },
                          "state": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The state."
                          },
                          "street": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The street."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The contact's business address."
                  },
                  "businessHomePage": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The business home page of the contact."
                  },
                  "businessPhones": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "The contact's business phone numbers."
                  },
                  "children": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "The names of the contact's children."
                  },
                  "companyName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The name of the contact's company."
                  },
                  "department": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's department."
                  },
                  "displayName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's display name. You can specify the display name in a create or update operation. Note that later updates to other properties may cause an automatically generated value to overwrite the displayName value you have specified. To preserve a pre-existing value, always include it as displayName in an update operation."
                  },
                  "emailAddresses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "The email address of the person or entity."
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "The display name of the person or entity."
                        }
                      },
                      "additionalProperties": true
                    },
                    "description": "The contact's email addresses."
                  },
                  "fileAs": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The name the contact is filed under."
                  },
                  "generation": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's suffix."
                  },
                  "givenName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's given name."
                  },
                  "homeAddress": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/businessAddress/anyOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The contact's home address."
                  },
                  "homePhones": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "The contact's home phone numbers."
                  },
                  "imAddresses": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "The contact's instant messaging (IM) addresses."
                  },
                  "initials": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's initials."
                  },
                  "jobTitle": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact’s job title."
                  },
                  "manager": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The name of the contact's manager."
                  },
                  "middleName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's middle name."
                  },
                  "mobilePhone": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's mobile phone number."
                  },
                  "nickName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's nickname."
                  },
                  "officeLocation": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The location of the contact's office."
                  },
                  "otherAddress": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/businessAddress/anyOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Other addresses for the contact."
                  },
                  "parentFolderId": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The ID of the contact's parent folder."
                  },
                  "personalNotes": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The user's notes about the contact."
                  },
                  "profession": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's profession."
                  },
                  "spouseName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The name of the contact's spouse/partner."
                  },
                  "surname": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's surname."
                  },
                  "title": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's title."
                  },
                  "yomiCompanyName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The phonetic Japanese company name of the contact."
                  },
                  "yomiGivenName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The phonetic Japanese given name (first name) of the contact."
                  },
                  "yomiSurname": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The phonetic Japanese surname (last name)  of the contact."
                  },
                  "extensions": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "The collection of open extensions defined for the contact. Read-only. Nullable."
                  },
                  "multiValueExtendedProperties": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "array",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "description": "A collection of property values."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "The collection of multi-value extended properties defined for the contact. Read-only. Nullable."
                  },
                  "photo": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/properties/body/allOf/0/allOf/0"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "height": {
                                "anyOf": [
                                  {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The height of the photo. Read-only."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "The height of the photo. Read-only."
                              },
                              "width": {
                                "anyOf": [
                                  {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The width of the photo. Read-only."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "The width of the photo. Read-only."
                              }
                            },
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Optional contact picture. You can get or set a photo for a contact."
                  },
                  "singleValueExtendedProperties": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "A property value."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "The collection of single-value extended properties defined for the contact. Read-only. Nullable."
                  }
                },
                "additionalProperties": true
              }
            ]
          }
        },
        "required": [
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "create-outlook-contact",
        "readOnlyHint": false
      }
    },
    {
      "name": "get-outlook-contact",
      "description": "Retrieve the properties and relationships of a contact object. There are two scenarios where an app can get a contact in another user&#x27;s contact folder:",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "contactId": {
            "type": "string",
            "description": "Path parameter: contactId"
          }
        },
        "required": [
          "contactId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "get-outlook-contact",
        "readOnlyHint": true
      }
    },
    {
      "name": "update-outlook-contact",
      "description": "Update the properties of a contact object.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique identifier for an entity. Read-only."
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "The categories associated with the item"
                  },
                  "changeKey": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only."
                  },
                  "createdDateTime": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  },
                  "lastModifiedDateTime": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "assistantName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The name of the contact's assistant."
                  },
                  "birthday": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  },
                  "businessAddress": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "city": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The city."
                          },
                          "countryOrRegion": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The country or region. It's a free-format string value, for example, 'United States'."
                          },
                          "postalCode": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The postal code."
                          },
                          "state": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The state."
                          },
                          "street": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The street."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The contact's business address."
                  },
                  "businessHomePage": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The business home page of the contact."
                  },
                  "businessPhones": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "The contact's business phone numbers."
                  },
                  "children": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "The names of the contact's children."
                  },
                  "companyName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The name of the contact's company."
                  },
                  "department": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's department."
                  },
                  "displayName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's display name. You can specify the display name in a create or update operation. Note that later updates to other properties may cause an automatically generated value to overwrite the displayName value you have specified. To preserve a pre-existing value, always include it as displayName in an update operation."
                  },
                  "emailAddresses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "The email address of the person or entity."
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "The display name of the person or entity."
                        }
                      },
                      "additionalProperties": true
                    },
                    "description": "The contact's email addresses."
                  },
                  "fileAs": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The name the contact is filed under."
                  },
                  "generation": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's suffix."
                  },
                  "givenName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's given name."
                  },
                  "homeAddress": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/businessAddress/anyOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The contact's home address."
                  },
                  "homePhones": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "The contact's home phone numbers."
                  },
                  "imAddresses": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "The contact's instant messaging (IM) addresses."
                  },
                  "initials": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's initials."
                  },
                  "jobTitle": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact’s job title."
                  },
                  "manager": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The name of the contact's manager."
                  },
                  "middleName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's middle name."
                  },
                  "mobilePhone": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's mobile phone number."
                  },
                  "nickName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's nickname."
                  },
                  "officeLocation": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The location of the contact's office."
                  },
                  "otherAddress": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/businessAddress/anyOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Other addresses for the contact."
                  },
                  "parentFolderId": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The ID of the contact's parent folder."
                  },
                  "personalNotes": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The user's notes about the contact."
                  },
                  "profession": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's profession."
                  },
                  "spouseName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The name of the contact's spouse/partner."
                  },
                  "surname": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's surname."
                  },
                  "title": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The contact's title."
                  },
                  "yomiCompanyName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The phonetic Japanese company name of the contact."
                  },
                  "yomiGivenName": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The phonetic Japanese given name (first name) of the contact."
                  },
                  "yomiSurname": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The phonetic Japanese surname (last name)  of the contact."
                  },
                  "extensions": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "The collection of open extensions defined for the contact. Read-only. Nullable."
                  },
                  "multiValueExtendedProperties": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "array",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "description": "A collection of property values."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "The collection of multi-value extended properties defined for the contact. Read-only. Nullable."
                  },
                  "photo": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/properties/body/allOf/0/allOf/0"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "height": {
                                "anyOf": [
                                  {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The height of the photo. Read-only."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "The height of the photo. Read-only."
                              },
                              "width": {
                                "anyOf": [
                                  {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The width of the photo. Read-only."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "The width of the photo. Read-only."
                              }
                            },
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Optional contact picture. You can get or set a photo for a contact."
                  },
                  "singleValueExtendedProperties": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "A property value."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "The collection of single-value extended properties defined for the contact. Read-only. Nullable."
                  }
                },
                "additionalProperties": true
              }
            ]
          },
          "contactId": {
            "type": "string",
            "description": "Path parameter: contactId"
          }
        },
        "required": [
          "body",
          "contactId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "update-outlook-contact",
        "readOnlyHint": false
      }
    },
    {
      "name": "delete-outlook-contact",
      "description": "Delete a contact.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "If-Match": {
            "type": "string",
            "description": "ETag"
          },
          "contactId": {
            "type": "string",
            "description": "Path parameter: contactId"
          }
        },
        "required": [
          "contactId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "delete-outlook-contact",
        "readOnlyHint": false
      }
    },
    {
      "name": "list-drives",
      "description": "Retrieve the list of Drive resources available for a target User, Group, or Site.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-drives",
        "readOnlyHint": true
      }
    },
    {
      "name": "list-calendar-events",
      "description": "Get a list of event objects in the user&#x27;s mailbox. The list contains single\ninstance meetings and series masters. To get expanded event instances, you can get the calendar view, or\nget the instances of an event. Currently, this operation returns event bodies in only HTML format. There are two scenarios where an app can get events in another user&#x27;s calendar:",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-calendar-events",
        "readOnlyHint": true
      }
    },
    {
      "name": "create-calendar-event",
      "description": "Create one or more single-value extended properties in a new or existing instance of a resource. The following user resources are supported: The following group resources: See Extended properties overview for more information about when to use\nopen extensions or extended properties, and how to specify extended properties.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique identifier for an entity. Read-only."
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "The categories associated with the item"
                  },
                  "changeKey": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only."
                  },
                  "createdDateTime": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  },
                  "lastModifiedDateTime": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "allowNewTimeProposals": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "true if the meeting organizer allows invitees to propose a new time when responding; otherwise, false. Optional. The default is true."
                  },
                  "attendees": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "emailAddress": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The email address of the person or entity."
                                    },
                                    "name": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The display name of the person or entity."
                                    }
                                  },
                                  "additionalProperties": true
                                },
                                {
                                  "type": "object",
                                  "properties": {},
                                  "additionalProperties": true
                                }
                              ],
                              "description": "The recipient's email address."
                            }
                          },
                          "additionalProperties": true
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "required",
                                    "optional",
                                    "resource"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {},
                                  "additionalProperties": true
                                }
                              ],
                              "description": "The type of attendee. The possible values are: required, optional, resource. Currently if the attendee is a person, findMeetingTimes always considers the person is of the Required type."
                            }
                          },
                          "additionalProperties": true
                        },
                        {
                          "type": "object",
                          "properties": {
                            "proposedNewTime": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "end": {
                                      "type": "object",
                                      "properties": {
                                        "dateTime": {
                                          "type": "string",
                                          "description": "A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000)."
                                        },
                                        "timeZone": {
                                          "type": [
                                            "string",
                                            "null"
                                          ],
                                          "description": "Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values."
                                        }
                                      },
                                      "additionalProperties": true
                                    },
                                    "start": {
                                      "$ref": "#/properties/body/allOf/1/properties/attendees/items/allOf/1/properties/proposedNewTime/anyOf/0/properties/end"
                                    }
                                  },
                                  "additionalProperties": true
                                },
                                {
                                  "type": "object",
                                  "properties": {},
                                  "additionalProperties": true
                                }
                              ],
                              "description": "An alternate date/time proposed by the attendee for a meeting request to start and end. If the attendee hasn't proposed another time, then this property isn't included in a response of a GET event."
                            },
                            "status": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "response": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "none",
                                            "organizer",
                                            "tentativelyAccepted",
                                            "accepted",
                                            "declined",
                                            "notResponded"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {},
                                          "additionalProperties": true
                                        }
                                      ],
                                      "description": "The response type. Possible values are: none, organizer, tentativelyAccepted, accepted, declined, notResponded.To differentiate between none and notResponded:  none – from organizer's perspective. This value is used when the status of an attendee/participant is reported to the organizer of a meeting.  notResponded – from attendee's perspective. Indicates the attendee has not responded to the meeting request.  Clients can treat notResponded == none.  As an example, if attendee Alex hasn't responded to a meeting request, getting Alex' response status for that event in Alex' calendar returns notResponded. Getting Alex' response from the calendar of any other attendee or the organizer's returns none. Getting the organizer's response for the event in anybody's calendar also returns none."
                                    },
                                    "time": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                          "format": "date-time",
                                          "description": "The date and time when the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "The date and time when the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                                    }
                                  },
                                  "additionalProperties": true
                                },
                                {
                                  "type": "object",
                                  "properties": {},
                                  "additionalProperties": true
                                }
                              ],
                              "description": "The attendee's response (none, accepted, declined, etc.) for the event and date-time that the response was sent."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "The collection of attendees for the event."
                  },
                  "body": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The content of the item."
                          },
                          "contentType": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "text",
                                  "html"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The type of the content. Possible values are text and html."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The body of the message associated with the event. It can be in HTML or text format."
                  },
                  "bodyPreview": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The preview of the message associated with the event. It's in text format."
                  },
                  "cancelledOccurrences": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Contains occurrenceId property values of canceled instances in a recurring series, if the event is the series master. Instances in a recurring series that are canceled are called canceled occurences.Returned only on $select in a Get operation which specifies the ID (seriesMasterId property value) of a series master event."
                  },
                  "end": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/attendees/items/allOf/1/properties/proposedNewTime/anyOf/0/properties/end"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The date, time, and time zone that the event ends. By default, the end time is in UTC."
                  },
                  "hasAttachments": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Set to true if the event has attachments."
                  },
                  "hideAttendees": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. The default is false."
                  },
                  "iCalUId": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "A unique identifier for an event across calendars. This ID is different for each occurrence in a recurring series. Read-only."
                  },
                  "importance": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "low",
                          "normal",
                          "high"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The importance of the event. The possible values are: low, normal, high."
                  },
                  "isAllDay": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Set to true if the event lasts all day. If true, regardless of whether it's a single-day or multi-day event, start, and endtime must be set to midnight and be in the same time zone."
                  },
                  "isCancelled": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Set to true if the event has been canceled."
                  },
                  "isDraft": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Set to true if the user has updated the meeting in Outlook but hasn't sent the updates to attendees. Set to false if all changes are sent, or if the event is an appointment without any attendees."
                  },
                  "isOnlineMeeting": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "True if this event has online meeting information (that is, onlineMeeting points to an onlineMeetingInfo resource), false otherwise. Default is false (onlineMeeting is null). Optional.  After you set isOnlineMeeting to true, Microsoft Graph initializes onlineMeeting. Subsequently, Outlook ignores any further changes to isOnlineMeeting, and the meeting remains available online."
                  },
                  "isOrganizer": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Set to true if the calendar owner (specified by the owner property of the calendar) is the organizer of the event (specified by the organizer property of the event). It also applies if a delegate organized the event on behalf of the owner."
                  },
                  "isReminderOn": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Set to true if an alert is set to remind the user of the event."
                  },
                  "location": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "address": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "city": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The city."
                                  },
                                  "countryOrRegion": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The country or region. It's a free-format string value, for example, 'United States'."
                                  },
                                  "postalCode": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The postal code."
                                  },
                                  "state": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The state."
                                  },
                                  "street": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The street."
                                  }
                                },
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The street address of the location."
                          },
                          "coordinates": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "accuracy": {
                                    "anyOf": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "-INF",
                                          "INF",
                                          "NaN"
                                        ]
                                      }
                                    ],
                                    "description": "The accuracy of the latitude and longitude. As an example, the accuracy can be measured in meters, such as the latitude and longitude are accurate to within 50 meters."
                                  },
                                  "altitude": {
                                    "anyOf": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "$ref": "#/properties/body/allOf/1/properties/location/anyOf/0/properties/coordinates/anyOf/0/properties/accuracy/anyOf/2"
                                      }
                                    ],
                                    "description": "The altitude of the location."
                                  },
                                  "altitudeAccuracy": {
                                    "anyOf": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "$ref": "#/properties/body/allOf/1/properties/location/anyOf/0/properties/coordinates/anyOf/0/properties/accuracy/anyOf/2"
                                      }
                                    ],
                                    "description": "The accuracy of the altitude."
                                  },
                                  "latitude": {
                                    "anyOf": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "$ref": "#/properties/body/allOf/1/properties/location/anyOf/0/properties/coordinates/anyOf/0/properties/accuracy/anyOf/2"
                                      }
                                    ],
                                    "description": "The latitude of the location."
                                  },
                                  "longitude": {
                                    "anyOf": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "$ref": "#/properties/body/allOf/1/properties/location/anyOf/0/properties/coordinates/anyOf/0/properties/accuracy/anyOf/2"
                                      }
                                    ],
                                    "description": "The longitude of the location."
                                  }
                                },
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The geographic coordinates and elevation of the location."
                          },
                          "displayName": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The name associated with the location."
                          },
                          "locationEmailAddress": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "Optional email address of the location."
                          },
                          "locationType": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "default",
                                  "conferenceRoom",
                                  "homeAddress",
                                  "businessAddress",
                                  "geoCoordinates",
                                  "streetAddress",
                                  "hotel",
                                  "restaurant",
                                  "localBusiness",
                                  "postalAddress"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The type of location. The possible values are: default, conferenceRoom, homeAddress, businessAddress,geoCoordinates, streetAddress, hotel, restaurant, localBusiness, postalAddress. Read-only."
                          },
                          "locationUri": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "Optional URI representing the location."
                          },
                          "uniqueId": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "For internal use only."
                          },
                          "uniqueIdType": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "locationStore",
                                  "directory",
                                  "private",
                                  "bing"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "For internal use only."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The location of the event."
                  },
                  "locations": {
                    "type": "array",
                    "items": {
                      "$ref": "#/properties/body/allOf/1/properties/location/anyOf/0"
                    },
                    "description": "The locations where the event is held or attended from. The location and locations properties always correspond with each other. If you update the location property, any prior locations in the locations collection are removed and replaced by the new location value."
                  },
                  "onlineMeeting": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "conferenceId": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The ID of the conference."
                          },
                          "joinUrl": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The external link that launches the online meeting. This is a URL that clients launch into a browser and will redirect the user to join the meeting."
                          },
                          "phones": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "language": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "number": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "description": "The phone number."
                                },
                                "region": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "type": {
                                  "anyOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "home",
                                        "business",
                                        "mobile",
                                        "other",
                                        "assistant",
                                        "homeFax",
                                        "businessFax",
                                        "otherFax",
                                        "pager",
                                        "radio"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {},
                                      "additionalProperties": true
                                    }
                                  ],
                                  "description": "The type of phone number. The possible values are: home, business, mobile, other, assistant, homeFax, businessFax, otherFax, pager, radio."
                                }
                              },
                              "additionalProperties": true
                            },
                            "description": "All of the phone numbers associated with this conference."
                          },
                          "quickDial": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The preformatted quick dial for this call."
                          },
                          "tollFreeNumbers": {
                            "type": "array",
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "description": "The toll free numbers that can be used to join the conference."
                          },
                          "tollNumber": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The toll number that can be used to join the conference."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Details for an attendee to join the meeting online. The default is null. Read-only. After you set the isOnlineMeeting and onlineMeetingProvider properties to enable a meeting online, Microsoft Graph initializes onlineMeeting. When set, the meeting remains available online, and you can't change the isOnlineMeeting, onlineMeetingProvider, and onlneMeeting properties again."
                  },
                  "onlineMeetingProvider": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "unknown",
                          "skypeForBusiness",
                          "skypeForConsumer",
                          "teamsForBusiness"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Represents the online meeting service provider. By default, onlineMeetingProvider is unknown. The possible values are unknown, teamsForBusiness, skypeForBusiness, and skypeForConsumer. Optional.  After you set onlineMeetingProvider, Microsoft Graph initializes onlineMeeting. Subsequently, you can't change onlineMeetingProvider again, and the meeting remains available online."
                  },
                  "onlineMeetingUrl": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "A URL for an online meeting. The property is set only when an organizer specifies in Outlook that an event is an online meeting such as Skype. Read-only.To access the URL to join an online meeting, use joinUrl which is exposed via the onlineMeeting property of the event. The onlineMeetingUrl property will be deprecated in the future."
                  },
                  "organizer": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/attendees/items/allOf/0/allOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The organizer of the event."
                  },
                  "originalEndTimeZone": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The end time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook."
                  },
                  "originalStart": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "Represents the start time of an event when it's initially created as an occurrence or exception in a recurring series. This property is not returned for events that are single instances. Its date and time information is expressed in ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Represents the start time of an event when it's initially created as an occurrence or exception in a recurring series. This property is not returned for events that are single instances. Its date and time information is expressed in ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  },
                  "originalStartTimeZone": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The start time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook."
                  },
                  "recurrence": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dayOfMonth": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly."
                                  },
                                  "daysOfWeek": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "sunday",
                                            "monday",
                                            "tuesday",
                                            "wednesday",
                                            "thursday",
                                            "friday",
                                            "saturday"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {},
                                          "additionalProperties": true
                                        }
                                      ]
                                    },
                                    "description": "A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly."
                                  },
                                  "firstDayOfWeek": {
                                    "anyOf": [
                                      {
                                        "$ref": "#/properties/body/allOf/1/properties/recurrence/anyOf/0/properties/pattern/anyOf/0/properties/daysOfWeek/items/anyOf/0"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "The first day of the week. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. Default is sunday. Required if type is weekly."
                                  },
                                  "index": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "first",
                                          "second",
                                          "third",
                                          "fourth",
                                          "last"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "Specifies on which instance of the allowed days specified in daysOfWeek the event occurs, counted from the first instance in the month. The possible values are: first, second, third, fourth, last. Default is first. Optional and used if type is relativeMonthly or relativeYearly."
                                  },
                                  "interval": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required."
                                  },
                                  "month": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The month in which the event occurs.  This is a number from 1 to 12."
                                  },
                                  "type": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "daily",
                                          "weekly",
                                          "absoluteMonthly",
                                          "relativeMonthly",
                                          "absoluteYearly",
                                          "relativeYearly"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "The recurrence pattern type: daily, weekly, absoluteMonthly, relativeMonthly, absoluteYearly, relativeYearly. Required. For more information, see values of type property."
                                  }
                                },
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The frequency of an event.  For access reviews: Do not specify this property for a one-time access review.  Only interval, dayOfMonth, and type (weekly, absoluteMonthly) properties of recurrencePattern are supported."
                          },
                          "range": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "endDate": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                                        "description": "The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate."
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate."
                                  },
                                  "numberOfOccurrences": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The number of times to repeat the event. Required and must be positive if type is numbered."
                                  },
                                  "recurrenceTimeZone": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used."
                                  },
                                  "startDate": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                                        "description": "The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required."
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required."
                                  },
                                  "type": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "endDate",
                                          "noEnd",
                                          "numbered"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "The recurrence range. The possible values are: endDate, noEnd, numbered. Required."
                                  }
                                },
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The duration of an event."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The recurrence pattern for the event."
                  },
                  "reminderMinutesBeforeStart": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "description": "The number of minutes before the event start time that the reminder alert occurs."
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The number of minutes before the event start time that the reminder alert occurs."
                  },
                  "responseRequested": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Default is true, which represents the organizer would like an invitee to send a response to the event."
                  },
                  "responseStatus": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/attendees/items/allOf/1/properties/status/anyOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Indicates the type of response sent in response to an event message."
                  },
                  "sensitivity": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "normal",
                          "personal",
                          "private",
                          "confidential"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Possible values are: normal, personal, private, and confidential."
                  },
                  "seriesMasterId": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The ID for the recurring series master item, if this event is part of a recurring series."
                  },
                  "showAs": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "unknown",
                          "free",
                          "tentative",
                          "busy",
                          "oof",
                          "workingElsewhere"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The status to show. Possible values are: free, tentative, busy, oof, workingElsewhere, unknown."
                  },
                  "start": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/attendees/items/allOf/1/properties/proposedNewTime/anyOf/0/properties/end"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The start date, time, and time zone of the event. By default, the start time is in UTC."
                  },
                  "subject": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The text of the event's subject line."
                  },
                  "transactionId": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "A custom identifier specified by a client app for the server to avoid redundant POST operations in case of client retries to create the same event. It's useful when low network connectivity causes the client to time out before receiving a response from the server for the client's prior create-event request. After you set transactionId when creating an event, you can't change transactionId in a subsequent update. This property is only returned in a response payload if an app has set it. Optional."
                  },
                  "type": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "singleInstance",
                          "occurrence",
                          "exception",
                          "seriesMaster"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The event type. Possible values are: singleInstance, occurrence, exception, seriesMaster. Read-only"
                  },
                  "webLink": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The URL to open the event in Outlook on the web.Outlook on the web opens the event in the browser if you are signed in to your mailbox. Otherwise, Outlook on the web prompts you to sign in.This URL can't be accessed from within an iFrame."
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "contentType": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The MIME type."
                            },
                            "isInline": {
                              "type": "boolean",
                              "description": "true if the attachment is an inline attachment; otherwise, false."
                            },
                            "lastModifiedDateTime": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                  "format": "date-time",
                                  "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                            },
                            "name": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The attachment's file name."
                            },
                            "size": {
                              "type": "number",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "description": "The length of the attachment in bytes."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable."
                  },
                  "calendar": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/properties/body/allOf/0/allOf/0"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "allowedOnlineMeetingProviders": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "$ref": "#/properties/body/allOf/1/properties/onlineMeetingProvider/anyOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {},
                                      "additionalProperties": true
                                    }
                                  ]
                                },
                                "description": "Represent the online meeting service providers that can be used to create online meetings in this calendar. Possible values are: unknown, skypeForBusiness, skypeForConsumer, teamsForBusiness."
                              },
                              "canEdit": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "true if the user can write to the calendar, false otherwise. This property is true for the user who created the calendar. This property is also true for a user who shared a calendar and granted write access."
                              },
                              "canShare": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "true if the user has permission to share the calendar, false otherwise. Only the user who created the calendar can share it."
                              },
                              "canViewPrivateItems": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "If true, the user can read calendar items that have been marked private, false otherwise."
                              },
                              "changeKey": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "Identifies the version of the calendar object. Every time the calendar is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only."
                              },
                              "color": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "auto",
                                      "lightBlue",
                                      "lightGreen",
                                      "lightOrange",
                                      "lightGray",
                                      "lightYellow",
                                      "lightTeal",
                                      "lightPink",
                                      "lightBrown",
                                      "lightRed",
                                      "maxColor"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "Specifies the color theme to distinguish the calendar from other calendars in a UI. The property values are: auto, lightBlue, lightGreen, lightOrange, lightGray, lightYellow, lightTeal, lightPink, lightBrown, lightRed, maxColor."
                              },
                              "defaultOnlineMeetingProvider": {
                                "anyOf": [
                                  {
                                    "$ref": "#/properties/body/allOf/1/properties/onlineMeetingProvider/anyOf/0"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "The default online meeting provider for meetings sent from this calendar. Possible values are: unknown, skypeForBusiness, skypeForConsumer, teamsForBusiness."
                              },
                              "hexColor": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The calendar color, expressed in a hex color code of three hexadecimal values, each ranging from 00 to FF and representing the red, green, or blue components of the color in the RGB color space. If the user has never explicitly set a color for the calendar, this property is empty. Read-only."
                              },
                              "isDefaultCalendar": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "true if this is the default calendar where new events are created by default, false otherwise."
                              },
                              "isRemovable": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Indicates whether this user calendar can be deleted from the user mailbox."
                              },
                              "isTallyingResponses": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Indicates whether this user calendar supports tracking of meeting responses. Only meeting invites sent from users' primary calendars support tracking of meeting responses."
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The calendar name."
                              },
                              "owner": {
                                "anyOf": [
                                  {
                                    "$ref": "#/properties/body/allOf/1/properties/attendees/items/allOf/0/allOf/0/properties/emailAddress/anyOf/0"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "If set, this represents the user who created or added the calendar. For a calendar that the user created or added, the owner property is set to the user. For a calendar shared with the user, the owner property is set to the person who shared that calendar with the user."
                              },
                              "calendarPermissions": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "$ref": "#/properties/body/allOf/0/allOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "allowedRoles": {
                                          "type": "array",
                                          "items": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "none",
                                                  "freeBusyRead",
                                                  "limitedRead",
                                                  "read",
                                                  "write",
                                                  "delegateWithoutPrivateEventAccess",
                                                  "delegateWithPrivateEventAccess",
                                                  "custom"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {},
                                                "additionalProperties": true
                                              }
                                            ]
                                          },
                                          "description": "List of allowed sharing or delegating permission levels for the calendar. Possible values are: none, freeBusyRead, limitedRead, read, write, delegateWithoutPrivateEventAccess, delegateWithPrivateEventAccess, custom."
                                        },
                                        "emailAddress": {
                                          "anyOf": [
                                            {
                                              "$ref": "#/properties/body/allOf/1/properties/attendees/items/allOf/0/allOf/0/properties/emailAddress/anyOf/0"
                                            },
                                            {
                                              "type": "object",
                                              "properties": {},
                                              "additionalProperties": true
                                            }
                                          ],
                                          "description": "Represents a share recipient or delegate who has access to the calendar. For the 'My Organization' share recipient, the address property is null. Read-only."
                                        },
                                        "isInsideOrganization": {
                                          "type": [
                                            "boolean",
                                            "null"
                                          ],
                                          "description": "True if the user in context (recipient or delegate) is inside the same organization as the calendar owner."
                                        },
                                        "isRemovable": {
                                          "type": [
                                            "boolean",
                                            "null"
                                          ],
                                          "description": "True if the user can be removed from the list of recipients or delegates for the specified calendar, false otherwise. The 'My organization' user determines the permissions other people within your organization have to the given calendar. You can't remove 'My organization' as a share recipient to a calendar."
                                        },
                                        "role": {
                                          "anyOf": [
                                            {
                                              "$ref": "#/properties/body/allOf/1/properties/calendar/anyOf/0/allOf/1/properties/calendarPermissions/items/allOf/1/properties/allowedRoles/items/anyOf/0"
                                            },
                                            {
                                              "type": "object",
                                              "properties": {},
                                              "additionalProperties": true
                                            }
                                          ],
                                          "description": "Current permission level of the calendar share recipient or delegate."
                                        }
                                      },
                                      "additionalProperties": true
                                    }
                                  ]
                                },
                                "description": "The permissions of the users with whom the calendar is shared."
                              },
                              "calendarView": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/properties/body"
                                },
                                "description": "The calendar view for the calendar. Navigation property. Read-only."
                              },
                              "events": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/properties/body"
                                },
                                "description": "The events in the calendar. Navigation property. Read-only."
                              },
                              "multiValueExtendedProperties": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "$ref": "#/properties/body/allOf/0/allOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "array",
                                          "items": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "description": "A collection of property values."
                                        }
                                      },
                                      "additionalProperties": true
                                    }
                                  ]
                                },
                                "description": "The collection of multi-value extended properties defined for the calendar. Read-only. Nullable."
                              },
                              "singleValueExtendedProperties": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "$ref": "#/properties/body/allOf/0/allOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": [
                                            "string",
                                            "null"
                                          ],
                                          "description": "A property value."
                                        }
                                      },
                                      "additionalProperties": true
                                    }
                                  ]
                                },
                                "description": "The collection of single-value extended properties defined for the calendar. Read-only. Nullable."
                              }
                            },
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The calendar that contains the event. Navigation property. Read-only."
                  },
                  "exceptionOccurrences": {
                    "type": "array",
                    "items": {
                      "$ref": "#/properties/body"
                    },
                    "description": "Contains the id property values of the event instances that are exceptions in a recurring series.Exceptions can differ from other occurrences in a recurring series, such as the subject, start or end times, or attendees. Exceptions don't include canceled occurrences.Returned only on $select and $expand in a GET operation that specifies the ID (seriesMasterId property value) of a series master event."
                  },
                  "extensions": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "The collection of open extensions defined for the event. Nullable."
                  },
                  "instances": {
                    "type": "array",
                    "items": {
                      "$ref": "#/properties/body"
                    },
                    "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences canceled from the series. Navigation property. Read-only. Nullable."
                  },
                  "multiValueExtendedProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/properties/body/allOf/1/properties/calendar/anyOf/0/allOf/1/properties/multiValueExtendedProperties/items"
                    },
                    "description": "The collection of multi-value extended properties defined for the event. Read-only. Nullable."
                  },
                  "singleValueExtendedProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/properties/body/allOf/1/properties/calendar/anyOf/0/allOf/1/properties/singleValueExtendedProperties/items"
                    },
                    "description": "The collection of single-value extended properties defined for the event. Read-only. Nullable."
                  }
                },
                "additionalProperties": true
              }
            ]
          }
        },
        "required": [
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "create-calendar-event",
        "readOnlyHint": false
      }
    },
    {
      "name": "get-calendar-event",
      "description": "Get the properties and relationships of the specified event object. Currently, this operation returns event bodies in only HTML format. There are two scenarios where an app can get an event in another user&#x27;s calendar: Since the event resource supports extensions, you can also use the GET operation to get custom properties and extension data in an event instance.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "eventId": {
            "type": "string",
            "description": "Path parameter: eventId"
          }
        },
        "required": [
          "eventId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "get-calendar-event",
        "readOnlyHint": true
      }
    },
    {
      "name": "update-calendar-event",
      "description": "Update the properties of the event object.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique identifier for an entity. Read-only."
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "The categories associated with the item"
                  },
                  "changeKey": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only."
                  },
                  "createdDateTime": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  },
                  "lastModifiedDateTime": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "allowNewTimeProposals": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "true if the meeting organizer allows invitees to propose a new time when responding; otherwise, false. Optional. The default is true."
                  },
                  "attendees": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "emailAddress": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The email address of the person or entity."
                                    },
                                    "name": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The display name of the person or entity."
                                    }
                                  },
                                  "additionalProperties": true
                                },
                                {
                                  "type": "object",
                                  "properties": {},
                                  "additionalProperties": true
                                }
                              ],
                              "description": "The recipient's email address."
                            }
                          },
                          "additionalProperties": true
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "required",
                                    "optional",
                                    "resource"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {},
                                  "additionalProperties": true
                                }
                              ],
                              "description": "The type of attendee. The possible values are: required, optional, resource. Currently if the attendee is a person, findMeetingTimes always considers the person is of the Required type."
                            }
                          },
                          "additionalProperties": true
                        },
                        {
                          "type": "object",
                          "properties": {
                            "proposedNewTime": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "end": {
                                      "type": "object",
                                      "properties": {
                                        "dateTime": {
                                          "type": "string",
                                          "description": "A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000)."
                                        },
                                        "timeZone": {
                                          "type": [
                                            "string",
                                            "null"
                                          ],
                                          "description": "Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values."
                                        }
                                      },
                                      "additionalProperties": true
                                    },
                                    "start": {
                                      "$ref": "#/properties/body/allOf/1/properties/attendees/items/allOf/1/properties/proposedNewTime/anyOf/0/properties/end"
                                    }
                                  },
                                  "additionalProperties": true
                                },
                                {
                                  "type": "object",
                                  "properties": {},
                                  "additionalProperties": true
                                }
                              ],
                              "description": "An alternate date/time proposed by the attendee for a meeting request to start and end. If the attendee hasn't proposed another time, then this property isn't included in a response of a GET event."
                            },
                            "status": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "response": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "none",
                                            "organizer",
                                            "tentativelyAccepted",
                                            "accepted",
                                            "declined",
                                            "notResponded"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {},
                                          "additionalProperties": true
                                        }
                                      ],
                                      "description": "The response type. Possible values are: none, organizer, tentativelyAccepted, accepted, declined, notResponded.To differentiate between none and notResponded:  none – from organizer's perspective. This value is used when the status of an attendee/participant is reported to the organizer of a meeting.  notResponded – from attendee's perspective. Indicates the attendee has not responded to the meeting request.  Clients can treat notResponded == none.  As an example, if attendee Alex hasn't responded to a meeting request, getting Alex' response status for that event in Alex' calendar returns notResponded. Getting Alex' response from the calendar of any other attendee or the organizer's returns none. Getting the organizer's response for the event in anybody's calendar also returns none."
                                    },
                                    "time": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                          "format": "date-time",
                                          "description": "The date and time when the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "description": "The date and time when the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                                    }
                                  },
                                  "additionalProperties": true
                                },
                                {
                                  "type": "object",
                                  "properties": {},
                                  "additionalProperties": true
                                }
                              ],
                              "description": "The attendee's response (none, accepted, declined, etc.) for the event and date-time that the response was sent."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "The collection of attendees for the event."
                  },
                  "body": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The content of the item."
                          },
                          "contentType": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "text",
                                  "html"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The type of the content. Possible values are text and html."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The body of the message associated with the event. It can be in HTML or text format."
                  },
                  "bodyPreview": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The preview of the message associated with the event. It's in text format."
                  },
                  "cancelledOccurrences": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Contains occurrenceId property values of canceled instances in a recurring series, if the event is the series master. Instances in a recurring series that are canceled are called canceled occurences.Returned only on $select in a Get operation which specifies the ID (seriesMasterId property value) of a series master event."
                  },
                  "end": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/attendees/items/allOf/1/properties/proposedNewTime/anyOf/0/properties/end"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The date, time, and time zone that the event ends. By default, the end time is in UTC."
                  },
                  "hasAttachments": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Set to true if the event has attachments."
                  },
                  "hideAttendees": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. The default is false."
                  },
                  "iCalUId": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "A unique identifier for an event across calendars. This ID is different for each occurrence in a recurring series. Read-only."
                  },
                  "importance": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "low",
                          "normal",
                          "high"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The importance of the event. The possible values are: low, normal, high."
                  },
                  "isAllDay": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Set to true if the event lasts all day. If true, regardless of whether it's a single-day or multi-day event, start, and endtime must be set to midnight and be in the same time zone."
                  },
                  "isCancelled": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Set to true if the event has been canceled."
                  },
                  "isDraft": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Set to true if the user has updated the meeting in Outlook but hasn't sent the updates to attendees. Set to false if all changes are sent, or if the event is an appointment without any attendees."
                  },
                  "isOnlineMeeting": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "True if this event has online meeting information (that is, onlineMeeting points to an onlineMeetingInfo resource), false otherwise. Default is false (onlineMeeting is null). Optional.  After you set isOnlineMeeting to true, Microsoft Graph initializes onlineMeeting. Subsequently, Outlook ignores any further changes to isOnlineMeeting, and the meeting remains available online."
                  },
                  "isOrganizer": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Set to true if the calendar owner (specified by the owner property of the calendar) is the organizer of the event (specified by the organizer property of the event). It also applies if a delegate organized the event on behalf of the owner."
                  },
                  "isReminderOn": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Set to true if an alert is set to remind the user of the event."
                  },
                  "location": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "address": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "city": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The city."
                                  },
                                  "countryOrRegion": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The country or region. It's a free-format string value, for example, 'United States'."
                                  },
                                  "postalCode": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The postal code."
                                  },
                                  "state": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The state."
                                  },
                                  "street": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The street."
                                  }
                                },
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The street address of the location."
                          },
                          "coordinates": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "accuracy": {
                                    "anyOf": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "-INF",
                                          "INF",
                                          "NaN"
                                        ]
                                      }
                                    ],
                                    "description": "The accuracy of the latitude and longitude. As an example, the accuracy can be measured in meters, such as the latitude and longitude are accurate to within 50 meters."
                                  },
                                  "altitude": {
                                    "anyOf": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "$ref": "#/properties/body/allOf/1/properties/location/anyOf/0/properties/coordinates/anyOf/0/properties/accuracy/anyOf/2"
                                      }
                                    ],
                                    "description": "The altitude of the location."
                                  },
                                  "altitudeAccuracy": {
                                    "anyOf": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "$ref": "#/properties/body/allOf/1/properties/location/anyOf/0/properties/coordinates/anyOf/0/properties/accuracy/anyOf/2"
                                      }
                                    ],
                                    "description": "The accuracy of the altitude."
                                  },
                                  "latitude": {
                                    "anyOf": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "$ref": "#/properties/body/allOf/1/properties/location/anyOf/0/properties/coordinates/anyOf/0/properties/accuracy/anyOf/2"
                                      }
                                    ],
                                    "description": "The latitude of the location."
                                  },
                                  "longitude": {
                                    "anyOf": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "$ref": "#/properties/body/allOf/1/properties/location/anyOf/0/properties/coordinates/anyOf/0/properties/accuracy/anyOf/2"
                                      }
                                    ],
                                    "description": "The longitude of the location."
                                  }
                                },
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The geographic coordinates and elevation of the location."
                          },
                          "displayName": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The name associated with the location."
                          },
                          "locationEmailAddress": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "Optional email address of the location."
                          },
                          "locationType": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "default",
                                  "conferenceRoom",
                                  "homeAddress",
                                  "businessAddress",
                                  "geoCoordinates",
                                  "streetAddress",
                                  "hotel",
                                  "restaurant",
                                  "localBusiness",
                                  "postalAddress"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The type of location. The possible values are: default, conferenceRoom, homeAddress, businessAddress,geoCoordinates, streetAddress, hotel, restaurant, localBusiness, postalAddress. Read-only."
                          },
                          "locationUri": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "Optional URI representing the location."
                          },
                          "uniqueId": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "For internal use only."
                          },
                          "uniqueIdType": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "locationStore",
                                  "directory",
                                  "private",
                                  "bing"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "For internal use only."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The location of the event."
                  },
                  "locations": {
                    "type": "array",
                    "items": {
                      "$ref": "#/properties/body/allOf/1/properties/location/anyOf/0"
                    },
                    "description": "The locations where the event is held or attended from. The location and locations properties always correspond with each other. If you update the location property, any prior locations in the locations collection are removed and replaced by the new location value."
                  },
                  "onlineMeeting": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "conferenceId": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The ID of the conference."
                          },
                          "joinUrl": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The external link that launches the online meeting. This is a URL that clients launch into a browser and will redirect the user to join the meeting."
                          },
                          "phones": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "language": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "number": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "description": "The phone number."
                                },
                                "region": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "type": {
                                  "anyOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "home",
                                        "business",
                                        "mobile",
                                        "other",
                                        "assistant",
                                        "homeFax",
                                        "businessFax",
                                        "otherFax",
                                        "pager",
                                        "radio"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {},
                                      "additionalProperties": true
                                    }
                                  ],
                                  "description": "The type of phone number. The possible values are: home, business, mobile, other, assistant, homeFax, businessFax, otherFax, pager, radio."
                                }
                              },
                              "additionalProperties": true
                            },
                            "description": "All of the phone numbers associated with this conference."
                          },
                          "quickDial": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The preformatted quick dial for this call."
                          },
                          "tollFreeNumbers": {
                            "type": "array",
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "description": "The toll free numbers that can be used to join the conference."
                          },
                          "tollNumber": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The toll number that can be used to join the conference."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Details for an attendee to join the meeting online. The default is null. Read-only. After you set the isOnlineMeeting and onlineMeetingProvider properties to enable a meeting online, Microsoft Graph initializes onlineMeeting. When set, the meeting remains available online, and you can't change the isOnlineMeeting, onlineMeetingProvider, and onlneMeeting properties again."
                  },
                  "onlineMeetingProvider": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "unknown",
                          "skypeForBusiness",
                          "skypeForConsumer",
                          "teamsForBusiness"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Represents the online meeting service provider. By default, onlineMeetingProvider is unknown. The possible values are unknown, teamsForBusiness, skypeForBusiness, and skypeForConsumer. Optional.  After you set onlineMeetingProvider, Microsoft Graph initializes onlineMeeting. Subsequently, you can't change onlineMeetingProvider again, and the meeting remains available online."
                  },
                  "onlineMeetingUrl": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "A URL for an online meeting. The property is set only when an organizer specifies in Outlook that an event is an online meeting such as Skype. Read-only.To access the URL to join an online meeting, use joinUrl which is exposed via the onlineMeeting property of the event. The onlineMeetingUrl property will be deprecated in the future."
                  },
                  "organizer": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/attendees/items/allOf/0/allOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The organizer of the event."
                  },
                  "originalEndTimeZone": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The end time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook."
                  },
                  "originalStart": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "Represents the start time of an event when it's initially created as an occurrence or exception in a recurring series. This property is not returned for events that are single instances. Its date and time information is expressed in ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Represents the start time of an event when it's initially created as an occurrence or exception in a recurring series. This property is not returned for events that are single instances. Its date and time information is expressed in ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  },
                  "originalStartTimeZone": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The start time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook."
                  },
                  "recurrence": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dayOfMonth": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly."
                                  },
                                  "daysOfWeek": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "sunday",
                                            "monday",
                                            "tuesday",
                                            "wednesday",
                                            "thursday",
                                            "friday",
                                            "saturday"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {},
                                          "additionalProperties": true
                                        }
                                      ]
                                    },
                                    "description": "A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly."
                                  },
                                  "firstDayOfWeek": {
                                    "anyOf": [
                                      {
                                        "$ref": "#/properties/body/allOf/1/properties/recurrence/anyOf/0/properties/pattern/anyOf/0/properties/daysOfWeek/items/anyOf/0"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "The first day of the week. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. Default is sunday. Required if type is weekly."
                                  },
                                  "index": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "first",
                                          "second",
                                          "third",
                                          "fourth",
                                          "last"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "Specifies on which instance of the allowed days specified in daysOfWeek the event occurs, counted from the first instance in the month. The possible values are: first, second, third, fourth, last. Default is first. Optional and used if type is relativeMonthly or relativeYearly."
                                  },
                                  "interval": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required."
                                  },
                                  "month": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The month in which the event occurs.  This is a number from 1 to 12."
                                  },
                                  "type": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "daily",
                                          "weekly",
                                          "absoluteMonthly",
                                          "relativeMonthly",
                                          "absoluteYearly",
                                          "relativeYearly"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "The recurrence pattern type: daily, weekly, absoluteMonthly, relativeMonthly, absoluteYearly, relativeYearly. Required. For more information, see values of type property."
                                  }
                                },
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The frequency of an event.  For access reviews: Do not specify this property for a one-time access review.  Only interval, dayOfMonth, and type (weekly, absoluteMonthly) properties of recurrencePattern are supported."
                          },
                          "range": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "endDate": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                                        "description": "The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate."
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate."
                                  },
                                  "numberOfOccurrences": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The number of times to repeat the event. Required and must be positive if type is numbered."
                                  },
                                  "recurrenceTimeZone": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used."
                                  },
                                  "startDate": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                                        "description": "The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required."
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required."
                                  },
                                  "type": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "endDate",
                                          "noEnd",
                                          "numbered"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "The recurrence range. The possible values are: endDate, noEnd, numbered. Required."
                                  }
                                },
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The duration of an event."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The recurrence pattern for the event."
                  },
                  "reminderMinutesBeforeStart": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "description": "The number of minutes before the event start time that the reminder alert occurs."
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The number of minutes before the event start time that the reminder alert occurs."
                  },
                  "responseRequested": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Default is true, which represents the organizer would like an invitee to send a response to the event."
                  },
                  "responseStatus": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/attendees/items/allOf/1/properties/status/anyOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Indicates the type of response sent in response to an event message."
                  },
                  "sensitivity": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "normal",
                          "personal",
                          "private",
                          "confidential"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Possible values are: normal, personal, private, and confidential."
                  },
                  "seriesMasterId": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The ID for the recurring series master item, if this event is part of a recurring series."
                  },
                  "showAs": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "unknown",
                          "free",
                          "tentative",
                          "busy",
                          "oof",
                          "workingElsewhere"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The status to show. Possible values are: free, tentative, busy, oof, workingElsewhere, unknown."
                  },
                  "start": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/attendees/items/allOf/1/properties/proposedNewTime/anyOf/0/properties/end"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The start date, time, and time zone of the event. By default, the start time is in UTC."
                  },
                  "subject": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The text of the event's subject line."
                  },
                  "transactionId": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "A custom identifier specified by a client app for the server to avoid redundant POST operations in case of client retries to create the same event. It's useful when low network connectivity causes the client to time out before receiving a response from the server for the client's prior create-event request. After you set transactionId when creating an event, you can't change transactionId in a subsequent update. This property is only returned in a response payload if an app has set it. Optional."
                  },
                  "type": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "singleInstance",
                          "occurrence",
                          "exception",
                          "seriesMaster"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The event type. Possible values are: singleInstance, occurrence, exception, seriesMaster. Read-only"
                  },
                  "webLink": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The URL to open the event in Outlook on the web.Outlook on the web opens the event in the browser if you are signed in to your mailbox. Otherwise, Outlook on the web prompts you to sign in.This URL can't be accessed from within an iFrame."
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "contentType": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The MIME type."
                            },
                            "isInline": {
                              "type": "boolean",
                              "description": "true if the attachment is an inline attachment; otherwise, false."
                            },
                            "lastModifiedDateTime": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                  "format": "date-time",
                                  "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                            },
                            "name": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The attachment's file name."
                            },
                            "size": {
                              "type": "number",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "description": "The length of the attachment in bytes."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable."
                  },
                  "calendar": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/properties/body/allOf/0/allOf/0"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "allowedOnlineMeetingProviders": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "$ref": "#/properties/body/allOf/1/properties/onlineMeetingProvider/anyOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {},
                                      "additionalProperties": true
                                    }
                                  ]
                                },
                                "description": "Represent the online meeting service providers that can be used to create online meetings in this calendar. Possible values are: unknown, skypeForBusiness, skypeForConsumer, teamsForBusiness."
                              },
                              "canEdit": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "true if the user can write to the calendar, false otherwise. This property is true for the user who created the calendar. This property is also true for a user who shared a calendar and granted write access."
                              },
                              "canShare": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "true if the user has permission to share the calendar, false otherwise. Only the user who created the calendar can share it."
                              },
                              "canViewPrivateItems": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "If true, the user can read calendar items that have been marked private, false otherwise."
                              },
                              "changeKey": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "Identifies the version of the calendar object. Every time the calendar is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only."
                              },
                              "color": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "auto",
                                      "lightBlue",
                                      "lightGreen",
                                      "lightOrange",
                                      "lightGray",
                                      "lightYellow",
                                      "lightTeal",
                                      "lightPink",
                                      "lightBrown",
                                      "lightRed",
                                      "maxColor"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "Specifies the color theme to distinguish the calendar from other calendars in a UI. The property values are: auto, lightBlue, lightGreen, lightOrange, lightGray, lightYellow, lightTeal, lightPink, lightBrown, lightRed, maxColor."
                              },
                              "defaultOnlineMeetingProvider": {
                                "anyOf": [
                                  {
                                    "$ref": "#/properties/body/allOf/1/properties/onlineMeetingProvider/anyOf/0"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "The default online meeting provider for meetings sent from this calendar. Possible values are: unknown, skypeForBusiness, skypeForConsumer, teamsForBusiness."
                              },
                              "hexColor": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The calendar color, expressed in a hex color code of three hexadecimal values, each ranging from 00 to FF and representing the red, green, or blue components of the color in the RGB color space. If the user has never explicitly set a color for the calendar, this property is empty. Read-only."
                              },
                              "isDefaultCalendar": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "true if this is the default calendar where new events are created by default, false otherwise."
                              },
                              "isRemovable": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Indicates whether this user calendar can be deleted from the user mailbox."
                              },
                              "isTallyingResponses": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Indicates whether this user calendar supports tracking of meeting responses. Only meeting invites sent from users' primary calendars support tracking of meeting responses."
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The calendar name."
                              },
                              "owner": {
                                "anyOf": [
                                  {
                                    "$ref": "#/properties/body/allOf/1/properties/attendees/items/allOf/0/allOf/0/properties/emailAddress/anyOf/0"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "If set, this represents the user who created or added the calendar. For a calendar that the user created or added, the owner property is set to the user. For a calendar shared with the user, the owner property is set to the person who shared that calendar with the user."
                              },
                              "calendarPermissions": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "$ref": "#/properties/body/allOf/0/allOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "allowedRoles": {
                                          "type": "array",
                                          "items": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "none",
                                                  "freeBusyRead",
                                                  "limitedRead",
                                                  "read",
                                                  "write",
                                                  "delegateWithoutPrivateEventAccess",
                                                  "delegateWithPrivateEventAccess",
                                                  "custom"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {},
                                                "additionalProperties": true
                                              }
                                            ]
                                          },
                                          "description": "List of allowed sharing or delegating permission levels for the calendar. Possible values are: none, freeBusyRead, limitedRead, read, write, delegateWithoutPrivateEventAccess, delegateWithPrivateEventAccess, custom."
                                        },
                                        "emailAddress": {
                                          "anyOf": [
                                            {
                                              "$ref": "#/properties/body/allOf/1/properties/attendees/items/allOf/0/allOf/0/properties/emailAddress/anyOf/0"
                                            },
                                            {
                                              "type": "object",
                                              "properties": {},
                                              "additionalProperties": true
                                            }
                                          ],
                                          "description": "Represents a share recipient or delegate who has access to the calendar. For the 'My Organization' share recipient, the address property is null. Read-only."
                                        },
                                        "isInsideOrganization": {
                                          "type": [
                                            "boolean",
                                            "null"
                                          ],
                                          "description": "True if the user in context (recipient or delegate) is inside the same organization as the calendar owner."
                                        },
                                        "isRemovable": {
                                          "type": [
                                            "boolean",
                                            "null"
                                          ],
                                          "description": "True if the user can be removed from the list of recipients or delegates for the specified calendar, false otherwise. The 'My organization' user determines the permissions other people within your organization have to the given calendar. You can't remove 'My organization' as a share recipient to a calendar."
                                        },
                                        "role": {
                                          "anyOf": [
                                            {
                                              "$ref": "#/properties/body/allOf/1/properties/calendar/anyOf/0/allOf/1/properties/calendarPermissions/items/allOf/1/properties/allowedRoles/items/anyOf/0"
                                            },
                                            {
                                              "type": "object",
                                              "properties": {},
                                              "additionalProperties": true
                                            }
                                          ],
                                          "description": "Current permission level of the calendar share recipient or delegate."
                                        }
                                      },
                                      "additionalProperties": true
                                    }
                                  ]
                                },
                                "description": "The permissions of the users with whom the calendar is shared."
                              },
                              "calendarView": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/properties/body"
                                },
                                "description": "The calendar view for the calendar. Navigation property. Read-only."
                              },
                              "events": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/properties/body"
                                },
                                "description": "The events in the calendar. Navigation property. Read-only."
                              },
                              "multiValueExtendedProperties": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "$ref": "#/properties/body/allOf/0/allOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "array",
                                          "items": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "description": "A collection of property values."
                                        }
                                      },
                                      "additionalProperties": true
                                    }
                                  ]
                                },
                                "description": "The collection of multi-value extended properties defined for the calendar. Read-only. Nullable."
                              },
                              "singleValueExtendedProperties": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "$ref": "#/properties/body/allOf/0/allOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": [
                                            "string",
                                            "null"
                                          ],
                                          "description": "A property value."
                                        }
                                      },
                                      "additionalProperties": true
                                    }
                                  ]
                                },
                                "description": "The collection of single-value extended properties defined for the calendar. Read-only. Nullable."
                              }
                            },
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The calendar that contains the event. Navigation property. Read-only."
                  },
                  "exceptionOccurrences": {
                    "type": "array",
                    "items": {
                      "$ref": "#/properties/body"
                    },
                    "description": "Contains the id property values of the event instances that are exceptions in a recurring series.Exceptions can differ from other occurrences in a recurring series, such as the subject, start or end times, or attendees. Exceptions don't include canceled occurrences.Returned only on $select and $expand in a GET operation that specifies the ID (seriesMasterId property value) of a series master event."
                  },
                  "extensions": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "The collection of open extensions defined for the event. Nullable."
                  },
                  "instances": {
                    "type": "array",
                    "items": {
                      "$ref": "#/properties/body"
                    },
                    "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences canceled from the series. Navigation property. Read-only. Nullable."
                  },
                  "multiValueExtendedProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/properties/body/allOf/1/properties/calendar/anyOf/0/allOf/1/properties/multiValueExtendedProperties/items"
                    },
                    "description": "The collection of multi-value extended properties defined for the event. Read-only. Nullable."
                  },
                  "singleValueExtendedProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/properties/body/allOf/1/properties/calendar/anyOf/0/allOf/1/properties/singleValueExtendedProperties/items"
                    },
                    "description": "The collection of single-value extended properties defined for the event. Read-only. Nullable."
                  }
                },
                "additionalProperties": true
              }
            ]
          },
          "eventId": {
            "type": "string",
            "description": "Path parameter: eventId"
          }
        },
        "required": [
          "body",
          "eventId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "update-calendar-event",
        "readOnlyHint": false
      }
    },
    {
      "name": "delete-calendar-event",
      "description": "Removes the specified event from the containing calendar.  If the event is a meeting, deleting the event on the organizer&#x27;s calendar sends a cancellation message to the meeting attendees.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "If-Match": {
            "type": "string",
            "description": "ETag"
          },
          "eventId": {
            "type": "string",
            "description": "Path parameter: eventId"
          }
        },
        "required": [
          "eventId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "delete-calendar-event",
        "readOnlyHint": false
      }
    },
    {
      "name": "list-mail-folders",
      "description": "Get the mail folder collection directly under the root folder of the signed-in user. The returned collection includes any mail search folders directly under the root. By default, this operation does not return hidden folders. Use a query parameter includeHiddenFolders to include them in the response. This operation does not return all mail folders in a mailbox, only the child folders of the root folder. To return all mail folders in a mailbox, each child folder must be traversed separately.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "includeHiddenFolders": {
            "type": "string",
            "description": "Include Hidden Folders"
          },
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-mail-folders",
        "readOnlyHint": true
      }
    },
    {
      "name": "list-mail-folder-messages",
      "description": "Get all the messages in the specified user&#x27;s mailbox, or those messages in a specified folder in the mailbox.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "mailFolderId": {
            "type": "string",
            "description": "Path parameter: mailFolderId"
          }
        },
        "required": [
          "mailFolderId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-mail-folder-messages",
        "readOnlyHint": true
      }
    },
    {
      "name": "list-mail-messages",
      "description": "Get the messages in the signed-in user&#x27;s mailbox (including the Deleted Items and Clutter folders). Depending on the page size and mailbox data, getting messages from a mailbox can incur multiple requests. The default page size is 10 messages. Use $top to customize the page size, within the range of 1 and 1000. To improve the operation response time, use $select to specify the exact properties you need; see example 1 below. Fine-tune the values for $select and $top, especially when you must use a larger page size, as returning a page with hundreds of messages each with a full response payload may trigger the gateway timeout (HTTP 504). To get the next page of messages, simply apply the entire URL returned in @odata.nextLink to the next get-messages request. This URL includes any query parameters you may have specified in the initial request. Do not try to extract the $skip value from the @odata.nextLink URL to manipulate responses. This API uses the $skip value to keep count of all the items it has gone through in the user&#x27;s mailbox to return a page of message-type items. It&#x27;s therefore possible that even in the initial response, the $skip value is larger than the page size. For more information, see Paging Microsoft Graph data in your app. Currently, this operation returns message bodies in only HTML format. There are two scenarios where an app can get messages in another user&#x27;s mail folder:",
      "inputSchema": {
        "type": "object",
        "properties": {
          "includeHiddenMessages": {
            "type": "string",
            "description": "Include Hidden Messages"
          },
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-mail-messages",
        "readOnlyHint": true
      }
    },
    {
      "name": "get-mail-message",
      "description": "You can get a single resource instance expanded with a specific extended property, or a collection of resource instances\nthat include extended properties matching a filter. Using the query parameter $expand allows you to get the specified resource instance expanded with a specific extended\nproperty. Use a $filter and eq operator on the id property to specify the extended property. This is currently the only way to get the singleValueLegacyExtendedProperty object that represents an extended property. To get resource instances that have certain extended properties, use the $filter query parameter and apply an eq operator\non the id property. In addition, for numeric extended properties, apply one of the following operators on the value property:\neq, ne,ge, gt, le, or lt. For string-typed extended properties, apply a contains, startswith, eq, or ne operator on value. The filter is applied to all instances of the resource in the signed-in user&#x27;s mailbox. Filtering the string name (Name) in the id of an extended property is case-sensitive. Filtering the value property of an extended\nproperty is case-insensitive. The following user resources are supported: As well as the following group resources: See Extended properties overview for more information about when to use\nopen extensions or extended properties, and how to specify extended properties.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "messageId": {
            "type": "string",
            "description": "Path parameter: messageId"
          }
        },
        "required": [
          "messageId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "get-mail-message",
        "readOnlyHint": true
      }
    },
    {
      "name": "delete-mail-message",
      "description": "Delete a message in the specified user&#x27;s mailbox, or delete a relationship of the message.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "If-Match": {
            "type": "string",
            "description": "ETag"
          },
          "messageId": {
            "type": "string",
            "description": "Path parameter: messageId"
          }
        },
        "required": [
          "messageId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "delete-mail-message",
        "readOnlyHint": false
      }
    },
    {
      "name": "list-onenote-notebooks",
      "description": "Retrieve a list of notebook objects.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-onenote-notebooks",
        "readOnlyHint": true
      }
    },
    {
      "name": "list-onenote-notebook-sections",
      "description": "Retrieve a list of onenoteSection objects from the specified notebook.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "notebookId": {
            "type": "string",
            "description": "Path parameter: notebookId"
          }
        },
        "required": [
          "notebookId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-onenote-notebook-sections",
        "readOnlyHint": true
      }
    },
    {
      "name": "list-onenote-section-pages",
      "description": "The collection of pages in the section.  Read-only. Nullable.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "notebookId": {
            "type": "string",
            "description": "Path parameter: notebookId"
          },
          "onenoteSectionId": {
            "type": "string",
            "description": "Path parameter: onenoteSectionId"
          }
        },
        "required": [
          "notebookId",
          "onenoteSectionId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-onenote-section-pages",
        "readOnlyHint": true
      }
    },
    {
      "name": "create-onenote-page",
      "description": "Create a new OneNote page in the default section of the default notebook. To create a page in a different section in the default notebook, you can use the sectionName query parameter.  Example: ../onenote/pages?sectionName&#x3D;My%20section The POST /onenote/pages operation is used only to create pages in the current user&#x27;s default notebook. If you&#x27;re targeting other notebooks, you can create pages in a specified section.  ",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique identifier for an entity. Read-only."
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "self": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The endpoint where you can get details about the page. Read-only."
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "createdDateTime": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only."
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only."
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "content": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The page's HTML content."
                  },
                  "contentUrl": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The URL for the page's HTML content.  Read-only."
                  },
                  "createdByAppId": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The unique identifier of the application that created the page. Read-only."
                  },
                  "lastModifiedDateTime": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "The date and time when the page was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only."
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The date and time when the page was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only."
                  },
                  "level": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "description": "The indentation level of the page. Read-only."
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The indentation level of the page. Read-only."
                  },
                  "links": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "oneNoteClientUrl": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The URL of the link."
                                  }
                                },
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "Opens the page in the OneNote native client if it's installed."
                          },
                          "oneNoteWebUrl": {
                            "anyOf": [
                              {
                                "$ref": "#/properties/body/allOf/1/properties/links/anyOf/0/properties/oneNoteClientUrl/anyOf/0"
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "Opens the page in OneNote on the web."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Links for opening the page. The oneNoteClientURL link opens the page in the OneNote native client if it 's installed. The oneNoteWebUrl link opens the page in OneNote on the web. Read-only."
                  },
                  "order": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "description": "The order of the page within its parent section. Read-only."
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The order of the page within its parent section. Read-only."
                  },
                  "title": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The title of the page."
                  },
                  "userTags": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "parentNotebook": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/properties/body/allOf/0"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "application": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "displayName": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "The display name of the identity.For drive items, the display name might not always be available or up to date. For example, if a user changes their display name the API might show the new value in a future response, but the items associated with the user don't show up as changed when using delta."
                                              },
                                              "id": {
                                                "type": [
                                                  "string",
                                                  "null"
                                                ],
                                                "description": "Unique identifier for the identity or actor. For example, in the access reviews decisions API, this property might record the id of the principal, that is, the group, user, or application that's subject to review."
                                              }
                                            },
                                            "additionalProperties": true
                                          },
                                          {
                                            "type": "object",
                                            "properties": {},
                                            "additionalProperties": true
                                          }
                                        ],
                                        "description": "Optional. The application associated with this action."
                                      },
                                      "device": {
                                        "anyOf": [
                                          {
                                            "$ref": "#/properties/body/allOf/1/properties/parentNotebook/anyOf/0/allOf/0/allOf/1/properties/createdBy/anyOf/0/properties/application/anyOf/0"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {},
                                            "additionalProperties": true
                                          }
                                        ],
                                        "description": "Optional. The device associated with this action."
                                      },
                                      "user": {
                                        "anyOf": [
                                          {
                                            "$ref": "#/properties/body/allOf/1/properties/parentNotebook/anyOf/0/allOf/0/allOf/1/properties/createdBy/anyOf/0/properties/application/anyOf/0"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {},
                                            "additionalProperties": true
                                          }
                                        ],
                                        "description": "Optional. The user associated with this action."
                                      }
                                    },
                                    "additionalProperties": true
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "Identity of the user, device, and application that created the item. Read-only."
                              },
                              "displayName": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The name of the notebook."
                              },
                              "lastModifiedBy": {
                                "anyOf": [
                                  {
                                    "$ref": "#/properties/body/allOf/1/properties/parentNotebook/anyOf/0/allOf/0/allOf/1/properties/createdBy/anyOf/0"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "Identity of the user, device, and application that created the item. Read-only."
                              },
                              "lastModifiedDateTime": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                    "format": "date-time",
                                    "description": "The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "description": "The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only."
                              }
                            },
                            "additionalProperties": true
                          },
                          {
                            "type": "object",
                            "properties": {
                              "isDefault": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Indicates whether this is the user's default notebook. Read-only."
                              },
                              "isShared": {
                                "type": [
                                  "boolean",
                                  "null"
                                ],
                                "description": "Indicates whether the notebook is shared. If true, the contents of the notebook can be seen by people other than the owner. Read-only."
                              },
                              "links": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "oneNoteClientUrl": {
                                        "anyOf": [
                                          {
                                            "$ref": "#/properties/body/allOf/1/properties/links/anyOf/0/properties/oneNoteClientUrl/anyOf/0"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {},
                                            "additionalProperties": true
                                          }
                                        ],
                                        "description": "Opens the notebook in the OneNote native client if it's installed."
                                      },
                                      "oneNoteWebUrl": {
                                        "anyOf": [
                                          {
                                            "$ref": "#/properties/body/allOf/1/properties/links/anyOf/0/properties/oneNoteClientUrl/anyOf/0"
                                          },
                                          {
                                            "type": "object",
                                            "properties": {},
                                            "additionalProperties": true
                                          }
                                        ],
                                        "description": "Opens the notebook in OneNote on the web."
                                      }
                                    },
                                    "additionalProperties": true
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "Links for opening the notebook. The oneNoteClientURL link opens the notebook in the OneNote native client if it's installed. The oneNoteWebURL link opens the notebook in OneNote on the web."
                              },
                              "sectionGroupsUrl": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The URL for the sectionGroups navigation property, which returns all the section groups in the notebook. Read-only."
                              },
                              "sectionsUrl": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The URL for the sections navigation property, which returns all the sections in the notebook. Read-only."
                              },
                              "userRole": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "None",
                                      "Owner",
                                      "Contributor",
                                      "Reader"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "Possible values are: Owner, Contributor, Reader, None. Owner represents owner-level access to the notebook. Contributor represents read/write access to the notebook. Reader represents read-only access to the notebook. Read-only."
                              },
                              "sectionGroups": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "$ref": "#/properties/body/allOf/1/properties/parentNotebook/anyOf/0/allOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "sectionGroupsUrl": {
                                          "type": [
                                            "string",
                                            "null"
                                          ],
                                          "description": "The URL for the sectionGroups navigation property, which returns all the section groups in the section group. Read-only."
                                        },
                                        "sectionsUrl": {
                                          "type": [
                                            "string",
                                            "null"
                                          ],
                                          "description": "The URL for the sections navigation property, which returns all the sections in the section group. Read-only."
                                        },
                                        "parentNotebook": {
                                          "anyOf": [
                                            {
                                              "$ref": "#/properties/body/allOf/1/properties/parentNotebook/anyOf/0"
                                            },
                                            {
                                              "type": "object",
                                              "properties": {},
                                              "additionalProperties": true
                                            }
                                          ],
                                          "description": "The notebook that contains the section group. Read-only."
                                        },
                                        "parentSectionGroup": {
                                          "anyOf": [
                                            {
                                              "$ref": "#/properties/body/allOf/1/properties/parentNotebook/anyOf/0/allOf/1/properties/sectionGroups/items"
                                            },
                                            {
                                              "type": "object",
                                              "properties": {},
                                              "additionalProperties": true
                                            }
                                          ],
                                          "description": "The section group that contains the section group. Read-only."
                                        },
                                        "sectionGroups": {
                                          "type": "array",
                                          "items": {
                                            "$ref": "#/properties/body/allOf/1/properties/parentNotebook/anyOf/0/allOf/1/properties/sectionGroups/items"
                                          },
                                          "description": "The section groups in the section. Read-only. Nullable."
                                        },
                                        "sections": {
                                          "type": "array",
                                          "items": {
                                            "allOf": [
                                              {
                                                "$ref": "#/properties/body/allOf/1/properties/parentNotebook/anyOf/0/allOf/0"
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "isDefault": {
                                                    "type": [
                                                      "boolean",
                                                      "null"
                                                    ],
                                                    "description": "Indicates whether this is the user's default section. Read-only."
                                                  },
                                                  "links": {
                                                    "anyOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "oneNoteClientUrl": {
                                                            "anyOf": [
                                                              {
                                                                "$ref": "#/properties/body/allOf/1/properties/links/anyOf/0/properties/oneNoteClientUrl/anyOf/0"
                                                              },
                                                              {
                                                                "type": "object",
                                                                "properties": {},
                                                                "additionalProperties": true
                                                              }
                                                            ],
                                                            "description": "Opens the section in the OneNote native client if it's installed."
                                                          },
                                                          "oneNoteWebUrl": {
                                                            "anyOf": [
                                                              {
                                                                "$ref": "#/properties/body/allOf/1/properties/links/anyOf/0/properties/oneNoteClientUrl/anyOf/0"
                                                              },
                                                              {
                                                                "type": "object",
                                                                "properties": {},
                                                                "additionalProperties": true
                                                              }
                                                            ],
                                                            "description": "Opens the section in OneNote on the web."
                                                          }
                                                        },
                                                        "additionalProperties": true
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {},
                                                        "additionalProperties": true
                                                      }
                                                    ],
                                                    "description": "Links for opening the section. The oneNoteClientURL link opens the section in the OneNote native client if it's installed. The oneNoteWebURL link opens the section in OneNote on the web."
                                                  },
                                                  "pagesUrl": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ],
                                                    "description": "The pages endpoint where you can get details for all the pages in the section. Read-only."
                                                  },
                                                  "pages": {
                                                    "type": "array",
                                                    "items": {
                                                      "$ref": "#/properties/body"
                                                    },
                                                    "description": "The collection of pages in the section.  Read-only. Nullable."
                                                  },
                                                  "parentNotebook": {
                                                    "anyOf": [
                                                      {
                                                        "$ref": "#/properties/body/allOf/1/properties/parentNotebook/anyOf/0"
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {},
                                                        "additionalProperties": true
                                                      }
                                                    ],
                                                    "description": "The notebook that contains the section.  Read-only."
                                                  },
                                                  "parentSectionGroup": {
                                                    "anyOf": [
                                                      {
                                                        "$ref": "#/properties/body/allOf/1/properties/parentNotebook/anyOf/0/allOf/1/properties/sectionGroups/items"
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {},
                                                        "additionalProperties": true
                                                      }
                                                    ],
                                                    "description": "The section group that contains the section.  Read-only."
                                                  }
                                                },
                                                "additionalProperties": true
                                              }
                                            ]
                                          },
                                          "description": "The sections in the section group. Read-only. Nullable."
                                        }
                                      },
                                      "additionalProperties": true
                                    }
                                  ]
                                },
                                "description": "The section groups in the notebook. Read-only. Nullable."
                              },
                              "sections": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/properties/body/allOf/1/properties/parentNotebook/anyOf/0/allOf/1/properties/sectionGroups/items/allOf/1/properties/sections/items"
                                },
                                "description": "The sections in the notebook. Read-only. Nullable."
                              }
                            },
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The notebook that contains the page.  Read-only."
                  },
                  "parentSection": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/parentNotebook/anyOf/0/allOf/1/properties/sectionGroups/items/allOf/1/properties/sections/items"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The section that contains the page. Read-only."
                  }
                },
                "additionalProperties": true
              }
            ]
          }
        },
        "required": [
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "create-onenote-page",
        "readOnlyHint": false
      }
    },
    {
      "name": "get-onenote-page-content",
      "description": "The page&#x27;s HTML content.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "onenotePageId": {
            "type": "string",
            "description": "Path parameter: onenotePageId"
          }
        },
        "required": [
          "onenotePageId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "get-onenote-page-content",
        "readOnlyHint": true
      }
    },
    {
      "name": "list-planner-tasks",
      "description": "Retrieve a list of plannertask objects assigned to a User.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-planner-tasks",
        "readOnlyHint": true
      }
    },
    {
      "name": "send-mail",
      "description": "Send the message specified in the request body using either JSON or MIME format. When using JSON format, you can include a file attachment in the same sendMail action call. When using MIME format: This method saves the message in the Sent Items folder. Alternatively, create a draft message to send later. To learn more about the steps involved in the backend before a mail is delivered to recipients, see here.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "properties": {
              "Message": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique identifier for an entity. Read-only."
                      }
                    },
                    "additionalProperties": true
                  },
                  {
                    "type": "object",
                    "properties": {
                      "categories": {
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "description": "The categories associated with the item"
                      },
                      "changeKey": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only."
                      },
                      "createdDateTime": {
                        "anyOf": [
                          {
                            "type": "string",
                            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                            "format": "date-time",
                            "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      "lastModifiedDateTime": {
                        "anyOf": [
                          {
                            "type": "string",
                            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                            "format": "date-time",
                            "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      }
                    },
                    "additionalProperties": true
                  },
                  {
                    "type": "object",
                    "properties": {
                      "bccRecipients": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "emailAddress": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "address": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The email address of the person or entity."
                                    },
                                    "name": {
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "description": "The display name of the person or entity."
                                    }
                                  },
                                  "additionalProperties": true
                                },
                                {
                                  "type": "object",
                                  "properties": {},
                                  "additionalProperties": true
                                }
                              ],
                              "description": "The recipient's email address."
                            }
                          },
                          "additionalProperties": true
                        },
                        "description": "The Bcc: recipients for the message."
                      },
                      "body": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The content of the item."
                              },
                              "contentType": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "text",
                                      "html"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "The type of the content. Possible values are text and html."
                              }
                            },
                            "additionalProperties": true
                          },
                          {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": true
                          }
                        ],
                        "description": "The body of the message. It can be in HTML or text format. Find out about safe HTML in a message body."
                      },
                      "bodyPreview": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "The first 255 characters of the message body. It is in text format."
                      },
                      "ccRecipients": {
                        "type": "array",
                        "items": {
                          "$ref": "#/properties/body/properties/Message/allOf/1/properties/bccRecipients/items"
                        },
                        "description": "The Cc: recipients for the message."
                      },
                      "conversationId": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "The ID of the conversation the email belongs to."
                      },
                      "conversationIndex": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "Indicates the position of the message within the conversation."
                      },
                      "flag": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "completedDateTime": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "dateTime": {
                                        "type": "string",
                                        "description": "A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000)."
                                      },
                                      "timeZone": {
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "description": "Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values."
                                      }
                                    },
                                    "additionalProperties": true
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "The date and time that the follow-up was finished."
                              },
                              "dueDateTime": {
                                "anyOf": [
                                  {
                                    "$ref": "#/properties/body/properties/Message/allOf/1/properties/flag/anyOf/0/properties/completedDateTime/anyOf/0"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "The date and time that the follow-up is to be finished. Note: To set the due date, you must also specify the startDateTime; otherwise, you get a 400 Bad Request response."
                              },
                              "flagStatus": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "notFlagged",
                                      "complete",
                                      "flagged"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "The status for follow-up for an item. Possible values are notFlagged, complete, and flagged."
                              },
                              "startDateTime": {
                                "anyOf": [
                                  {
                                    "$ref": "#/properties/body/properties/Message/allOf/1/properties/flag/anyOf/0/properties/completedDateTime/anyOf/0"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "The date and time that the follow-up is to begin."
                              }
                            },
                            "additionalProperties": true
                          },
                          {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": true
                          }
                        ],
                        "description": "Indicates the status, start date, due date, or completion date for the message."
                      },
                      "from": {
                        "anyOf": [
                          {
                            "$ref": "#/properties/body/properties/Message/allOf/1/properties/bccRecipients/items"
                          },
                          {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": true
                          }
                        ],
                        "description": "The owner of the mailbox from which the message is sent. In most cases, this value is the same as the sender property, except for sharing or delegation scenarios. The value must correspond to the actual mailbox used. Find out more about setting the from and sender properties of a message."
                      },
                      "hasAttachments": {
                        "type": [
                          "boolean",
                          "null"
                        ],
                        "description": "Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>."
                      },
                      "importance": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "low",
                              "normal",
                              "high"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": true
                          }
                        ],
                        "description": "The importance of the message. The possible values are: low, normal, and high."
                      },
                      "inferenceClassification": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "focused",
                              "other"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": true
                          }
                        ],
                        "description": "The classification of the message for the user, based on inferred relevance or importance, or on an explicit override. The possible values are: focused or other."
                      },
                      "internetMessageHeaders": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Represents the key in a key-value pair."
                            },
                            "value": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The value in a key-value pair."
                            }
                          },
                          "additionalProperties": true
                        },
                        "description": "A collection of message headers defined by RFC5322. The set includes message headers indicating the network path taken by a message from the sender to the recipient. It can also contain custom message headers that hold app data for the message.  Returned only on applying a $select query option. Read-only."
                      },
                      "internetMessageId": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "The message ID in the format specified by RFC2822."
                      },
                      "isDeliveryReceiptRequested": {
                        "type": [
                          "boolean",
                          "null"
                        ],
                        "description": "Indicates whether a read receipt is requested for the message."
                      },
                      "isDraft": {
                        "type": [
                          "boolean",
                          "null"
                        ],
                        "description": "Indicates whether the message is a draft. A message is a draft if it hasn't been sent yet."
                      },
                      "isRead": {
                        "type": [
                          "boolean",
                          "null"
                        ],
                        "description": "Indicates whether the message has been read."
                      },
                      "isReadReceiptRequested": {
                        "type": [
                          "boolean",
                          "null"
                        ],
                        "description": "Indicates whether a read receipt is requested for the message."
                      },
                      "parentFolderId": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "The unique identifier for the message's parent mailFolder."
                      },
                      "receivedDateTime": {
                        "anyOf": [
                          {
                            "type": "string",
                            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                            "format": "date-time",
                            "description": "The date and time the message was received.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "description": "The date and time the message was received.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                      },
                      "replyTo": {
                        "type": "array",
                        "items": {
                          "$ref": "#/properties/body/properties/Message/allOf/1/properties/bccRecipients/items"
                        },
                        "description": "The email addresses to use when replying."
                      },
                      "sender": {
                        "anyOf": [
                          {
                            "$ref": "#/properties/body/properties/Message/allOf/1/properties/bccRecipients/items"
                          },
                          {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": true
                          }
                        ],
                        "description": "The account that is used to generate the message. In most cases, this value is the same as the from property. You can set this property to a different value when sending a message from a shared mailbox, for a shared calendar, or as a delegate. In any case, the value must correspond to the actual mailbox used. Find out more about setting the from and sender properties of a message."
                      },
                      "sentDateTime": {
                        "anyOf": [
                          {
                            "type": "string",
                            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                            "format": "date-time",
                            "description": "The date and time the message was sent.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "description": "The date and time the message was sent.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                      },
                      "subject": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "The subject of the message."
                      },
                      "toRecipients": {
                        "type": "array",
                        "items": {
                          "$ref": "#/properties/body/properties/Message/allOf/1/properties/bccRecipients/items"
                        },
                        "description": "The To: recipients for the message."
                      },
                      "uniqueBody": {
                        "anyOf": [
                          {
                            "$ref": "#/properties/body/properties/Message/allOf/1/properties/body/anyOf/0"
                          },
                          {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": true
                          }
                        ],
                        "description": "The part of the body of the message that is unique to the current message. uniqueBody is not returned by default but can be retrieved for a given message by use of the ?$select=uniqueBody query. It can be in HTML or text format."
                      },
                      "webLink": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "The URL to open the message in Outlook on the web.You can append an ispopout argument to the end of the URL to change how the message is displayed. If ispopout is not present or if it is set to 1, then the message is shown in a popout window. If ispopout is set to 0, the browser shows the message in the Outlook on the web review pane.The message opens in the browser if you are signed in to your mailbox via Outlook on the web. You are prompted to sign in if you are not already signed in with the browser.This URL cannot be accessed from within an iFrame."
                      },
                      "attachments": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "$ref": "#/properties/body/properties/Message/allOf/0/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "contentType": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "description": "The MIME type."
                                },
                                "isInline": {
                                  "type": "boolean",
                                  "description": "true if the attachment is an inline attachment; otherwise, false."
                                },
                                "lastModifiedDateTime": {
                                  "anyOf": [
                                    {
                                      "type": "string",
                                      "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                      "format": "date-time",
                                      "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ],
                                  "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                                },
                                "name": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "description": "The attachment's file name."
                                },
                                "size": {
                                  "type": "number",
                                  "minimum": -2147483648,
                                  "maximum": 2147483647,
                                  "description": "The length of the attachment in bytes."
                                }
                              },
                              "additionalProperties": true
                            }
                          ]
                        },
                        "description": "The fileAttachment and itemAttachment attachments for the message."
                      },
                      "extensions": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "$ref": "#/properties/body/properties/Message/allOf/0/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {},
                              "additionalProperties": true
                            }
                          ]
                        },
                        "description": "The collection of open extensions defined for the message. Nullable."
                      },
                      "multiValueExtendedProperties": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "$ref": "#/properties/body/properties/Message/allOf/0/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "array",
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "description": "A collection of property values."
                                }
                              },
                              "additionalProperties": true
                            }
                          ]
                        },
                        "description": "The collection of multi-value extended properties defined for the message. Nullable."
                      },
                      "singleValueExtendedProperties": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "$ref": "#/properties/body/properties/Message/allOf/0/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "description": "A property value."
                                }
                              },
                              "additionalProperties": true
                            }
                          ]
                        },
                        "description": "The collection of single-value extended properties defined for the message. Nullable."
                      }
                    },
                    "additionalProperties": true
                  }
                ]
              },
              "SaveToSentItems": {
                "type": [
                  "boolean",
                  "null"
                ],
                "default": false
              }
            },
            "additionalProperties": true
          }
        },
        "required": [
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "send-mail",
        "readOnlyHint": false
      }
    },
    {
      "name": "list-todo-task-lists",
      "description": "Get a list of the todoTaskList objects and their properties.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-todo-task-lists",
        "readOnlyHint": true
      }
    },
    {
      "name": "list-todo-tasks",
      "description": "Get the todoTask resources from the tasks navigation property of a specified todoTaskList.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "todoTaskListId": {
            "type": "string",
            "description": "Path parameter: todoTaskListId"
          }
        },
        "required": [
          "todoTaskListId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-todo-tasks",
        "readOnlyHint": true
      }
    },
    {
      "name": "create-todo-task",
      "description": "Create a new task object in a specified todoTaskList.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique identifier for an entity. Read-only."
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "body": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The content of the item."
                          },
                          "contentType": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "text",
                                  "html"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The type of the content. Possible values are text and html."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The task body that typically contains information about the task."
                  },
                  "bodyLastModifiedDateTime": {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                    "format": "date-time",
                    "description": "The date and time when the task body was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'."
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "The categories associated with the task. Each category corresponds to the displayName property of an outlookCategory that the user has defined."
                  },
                  "completedDateTime": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dateTime": {
                            "type": "string",
                            "description": "A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000)."
                          },
                          "timeZone": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The date and time in the specified time zone that the task was finished."
                  },
                  "createdDateTime": {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                    "format": "date-time",
                    "description": "The date and time when the task was created. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'."
                  },
                  "dueDateTime": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/completedDateTime/anyOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The date and time in the specified time zone that the task is to be finished."
                  },
                  "hasAttachments": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Indicates whether the task has attachments."
                  },
                  "importance": {
                    "type": "string",
                    "enum": [
                      "low",
                      "normal",
                      "high"
                    ]
                  },
                  "isReminderOn": {
                    "type": "boolean",
                    "description": "Set to true if an alert is set to remind the user of the task."
                  },
                  "lastModifiedDateTime": {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                    "format": "date-time",
                    "description": "The date and time when the task was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'."
                  },
                  "recurrence": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dayOfMonth": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly."
                                  },
                                  "daysOfWeek": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "sunday",
                                            "monday",
                                            "tuesday",
                                            "wednesday",
                                            "thursday",
                                            "friday",
                                            "saturday"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {},
                                          "additionalProperties": true
                                        }
                                      ]
                                    },
                                    "description": "A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly."
                                  },
                                  "firstDayOfWeek": {
                                    "anyOf": [
                                      {
                                        "$ref": "#/properties/body/allOf/1/properties/recurrence/anyOf/0/properties/pattern/anyOf/0/properties/daysOfWeek/items/anyOf/0"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "The first day of the week. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. Default is sunday. Required if type is weekly."
                                  },
                                  "index": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "first",
                                          "second",
                                          "third",
                                          "fourth",
                                          "last"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "Specifies on which instance of the allowed days specified in daysOfWeek the event occurs, counted from the first instance in the month. The possible values are: first, second, third, fourth, last. Default is first. Optional and used if type is relativeMonthly or relativeYearly."
                                  },
                                  "interval": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required."
                                  },
                                  "month": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The month in which the event occurs.  This is a number from 1 to 12."
                                  },
                                  "type": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "daily",
                                          "weekly",
                                          "absoluteMonthly",
                                          "relativeMonthly",
                                          "absoluteYearly",
                                          "relativeYearly"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "The recurrence pattern type: daily, weekly, absoluteMonthly, relativeMonthly, absoluteYearly, relativeYearly. Required. For more information, see values of type property."
                                  }
                                },
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The frequency of an event.  For access reviews: Do not specify this property for a one-time access review.  Only interval, dayOfMonth, and type (weekly, absoluteMonthly) properties of recurrencePattern are supported."
                          },
                          "range": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "endDate": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                                        "description": "The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate."
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate."
                                  },
                                  "numberOfOccurrences": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The number of times to repeat the event. Required and must be positive if type is numbered."
                                  },
                                  "recurrenceTimeZone": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used."
                                  },
                                  "startDate": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                                        "description": "The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required."
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required."
                                  },
                                  "type": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "endDate",
                                          "noEnd",
                                          "numbered"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "The recurrence range. The possible values are: endDate, noEnd, numbered. Required."
                                  }
                                },
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The duration of an event."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The recurrence pattern for the task."
                  },
                  "reminderDateTime": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/completedDateTime/anyOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The date and time in the specified time zone for a reminder alert of the task to occur."
                  },
                  "startDateTime": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/completedDateTime/anyOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The date and time in the specified time zone at which the task is scheduled to start."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "notStarted",
                      "inProgress",
                      "completed",
                      "waitingOnOthers",
                      "deferred"
                    ]
                  },
                  "title": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "A brief description of the task."
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "contentType": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The MIME type."
                            },
                            "lastModifiedDateTime": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                  "format": "date-time",
                                  "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                            },
                            "name": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The display name of the attachment. This doesn't need to be the actual file name."
                            },
                            "size": {
                              "type": "number",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "description": "The length of the attachment in bytes."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "A collection of file attachments for the task."
                  },
                  "attachmentSessions": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "content": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The content streams that are uploaded."
                            },
                            "expirationDateTime": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                  "format": "date-time",
                                  "description": "The date and time in UTC when the upload session will expire. The complete file must be uploaded before this expiration time is reached."
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "The date and time in UTC when the upload session will expire. The complete file must be uploaded before this expiration time is reached."
                            },
                            "nextExpectedRanges": {
                              "type": "array",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "description": "Indicates a single value {start} that represents the location in the file where the next upload should begin."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    }
                  },
                  "checklistItems": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "checkedDateTime": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                  "format": "date-time",
                                  "description": "The date and time when the checklistItem was finished."
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "The date and time when the checklistItem was finished."
                            },
                            "createdDateTime": {
                              "type": "string",
                              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                              "format": "date-time",
                              "description": "The date and time when the checklistItem was created."
                            },
                            "displayName": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Indicates the title of the checklistItem."
                            },
                            "isChecked": {
                              "type": [
                                "boolean",
                                "null"
                              ],
                              "description": "State that indicates whether the item is checked off or not."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "A collection of checklistItems linked to a task."
                  },
                  "extensions": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "The collection of open extensions defined for the task. Nullable."
                  },
                  "linkedResources": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "applicationName": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The app name of the source that sends the linkedResource."
                            },
                            "displayName": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The title of the linkedResource."
                            },
                            "externalId": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "ID of the object that is associated with this task on the third-party/partner system."
                            },
                            "webUrl": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Deep link to the linkedResource."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "A collection of resources linked to the task."
                  }
                },
                "additionalProperties": true
              }
            ]
          },
          "todoTaskListId": {
            "type": "string",
            "description": "Path parameter: todoTaskListId"
          }
        },
        "required": [
          "body",
          "todoTaskListId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "create-todo-task",
        "readOnlyHint": false
      }
    },
    {
      "name": "get-todo-task",
      "description": "Read the properties and relationships of a todoTask object.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "todoTaskListId": {
            "type": "string",
            "description": "Path parameter: todoTaskListId"
          },
          "todoTaskId": {
            "type": "string",
            "description": "Path parameter: todoTaskId"
          }
        },
        "required": [
          "todoTaskListId",
          "todoTaskId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "get-todo-task",
        "readOnlyHint": true
      }
    },
    {
      "name": "update-todo-task",
      "description": "Update the properties of a todoTask object.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique identifier for an entity. Read-only."
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "body": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The content of the item."
                          },
                          "contentType": {
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "text",
                                  "html"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The type of the content. Possible values are text and html."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The task body that typically contains information about the task."
                  },
                  "bodyLastModifiedDateTime": {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                    "format": "date-time",
                    "description": "The date and time when the task body was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'."
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "The categories associated with the task. Each category corresponds to the displayName property of an outlookCategory that the user has defined."
                  },
                  "completedDateTime": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dateTime": {
                            "type": "string",
                            "description": "A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000)."
                          },
                          "timeZone": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The date and time in the specified time zone that the task was finished."
                  },
                  "createdDateTime": {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                    "format": "date-time",
                    "description": "The date and time when the task was created. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'."
                  },
                  "dueDateTime": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/completedDateTime/anyOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The date and time in the specified time zone that the task is to be finished."
                  },
                  "hasAttachments": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Indicates whether the task has attachments."
                  },
                  "importance": {
                    "type": "string",
                    "enum": [
                      "low",
                      "normal",
                      "high"
                    ]
                  },
                  "isReminderOn": {
                    "type": "boolean",
                    "description": "Set to true if an alert is set to remind the user of the task."
                  },
                  "lastModifiedDateTime": {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                    "format": "date-time",
                    "description": "The date and time when the task was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'."
                  },
                  "recurrence": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dayOfMonth": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly."
                                  },
                                  "daysOfWeek": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "sunday",
                                            "monday",
                                            "tuesday",
                                            "wednesday",
                                            "thursday",
                                            "friday",
                                            "saturday"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {},
                                          "additionalProperties": true
                                        }
                                      ]
                                    },
                                    "description": "A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly."
                                  },
                                  "firstDayOfWeek": {
                                    "anyOf": [
                                      {
                                        "$ref": "#/properties/body/allOf/1/properties/recurrence/anyOf/0/properties/pattern/anyOf/0/properties/daysOfWeek/items/anyOf/0"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "The first day of the week. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. Default is sunday. Required if type is weekly."
                                  },
                                  "index": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "first",
                                          "second",
                                          "third",
                                          "fourth",
                                          "last"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "Specifies on which instance of the allowed days specified in daysOfWeek the event occurs, counted from the first instance in the month. The possible values are: first, second, third, fourth, last. Default is first. Optional and used if type is relativeMonthly or relativeYearly."
                                  },
                                  "interval": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required."
                                  },
                                  "month": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The month in which the event occurs.  This is a number from 1 to 12."
                                  },
                                  "type": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "daily",
                                          "weekly",
                                          "absoluteMonthly",
                                          "relativeMonthly",
                                          "absoluteYearly",
                                          "relativeYearly"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "The recurrence pattern type: daily, weekly, absoluteMonthly, relativeMonthly, absoluteYearly, relativeYearly. Required. For more information, see values of type property."
                                  }
                                },
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The frequency of an event.  For access reviews: Do not specify this property for a one-time access review.  Only interval, dayOfMonth, and type (weekly, absoluteMonthly) properties of recurrencePattern are supported."
                          },
                          "range": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "endDate": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                                        "description": "The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate."
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate."
                                  },
                                  "numberOfOccurrences": {
                                    "type": "number",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "description": "The number of times to repeat the event. Required and must be positive if type is numbered."
                                  },
                                  "recurrenceTimeZone": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used."
                                  },
                                  "startDate": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                                        "description": "The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required."
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required."
                                  },
                                  "type": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "endDate",
                                          "noEnd",
                                          "numbered"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": true
                                      }
                                    ],
                                    "description": "The recurrence range. The possible values are: endDate, noEnd, numbered. Required."
                                  }
                                },
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "The duration of an event."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The recurrence pattern for the task."
                  },
                  "reminderDateTime": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/completedDateTime/anyOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The date and time in the specified time zone for a reminder alert of the task to occur."
                  },
                  "startDateTime": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/completedDateTime/anyOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The date and time in the specified time zone at which the task is scheduled to start."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "notStarted",
                      "inProgress",
                      "completed",
                      "waitingOnOthers",
                      "deferred"
                    ]
                  },
                  "title": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "A brief description of the task."
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "contentType": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The MIME type."
                            },
                            "lastModifiedDateTime": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                  "format": "date-time",
                                  "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                            },
                            "name": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The display name of the attachment. This doesn't need to be the actual file name."
                            },
                            "size": {
                              "type": "number",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "description": "The length of the attachment in bytes."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "A collection of file attachments for the task."
                  },
                  "attachmentSessions": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "content": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The content streams that are uploaded."
                            },
                            "expirationDateTime": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                  "format": "date-time",
                                  "description": "The date and time in UTC when the upload session will expire. The complete file must be uploaded before this expiration time is reached."
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "The date and time in UTC when the upload session will expire. The complete file must be uploaded before this expiration time is reached."
                            },
                            "nextExpectedRanges": {
                              "type": "array",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "description": "Indicates a single value {start} that represents the location in the file where the next upload should begin."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    }
                  },
                  "checklistItems": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "checkedDateTime": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                  "format": "date-time",
                                  "description": "The date and time when the checklistItem was finished."
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "description": "The date and time when the checklistItem was finished."
                            },
                            "createdDateTime": {
                              "type": "string",
                              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                              "format": "date-time",
                              "description": "The date and time when the checklistItem was created."
                            },
                            "displayName": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Indicates the title of the checklistItem."
                            },
                            "isChecked": {
                              "type": [
                                "boolean",
                                "null"
                              ],
                              "description": "State that indicates whether the item is checked off or not."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "A collection of checklistItems linked to a task."
                  },
                  "extensions": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "The collection of open extensions defined for the task. Nullable."
                  },
                  "linkedResources": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/properties/body/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "applicationName": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The app name of the source that sends the linkedResource."
                            },
                            "displayName": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The title of the linkedResource."
                            },
                            "externalId": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "ID of the object that is associated with this task on the third-party/partner system."
                            },
                            "webUrl": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Deep link to the linkedResource."
                            }
                          },
                          "additionalProperties": true
                        }
                      ]
                    },
                    "description": "A collection of resources linked to the task."
                  }
                },
                "additionalProperties": true
              }
            ]
          },
          "todoTaskListId": {
            "type": "string",
            "description": "Path parameter: todoTaskListId"
          },
          "todoTaskId": {
            "type": "string",
            "description": "Path parameter: todoTaskId"
          }
        },
        "required": [
          "body",
          "todoTaskListId",
          "todoTaskId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "update-todo-task",
        "readOnlyHint": false
      }
    },
    {
      "name": "delete-todo-task",
      "description": "Deletes a todoTask object.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "If-Match": {
            "type": "string",
            "description": "ETag"
          },
          "todoTaskListId": {
            "type": "string",
            "description": "Path parameter: todoTaskListId"
          },
          "todoTaskId": {
            "type": "string",
            "description": "Path parameter: todoTaskId"
          }
        },
        "required": [
          "todoTaskListId",
          "todoTaskId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "delete-todo-task",
        "readOnlyHint": false
      }
    },
    {
      "name": "get-planner-plan",
      "description": "Retrieve the properties and relationships of a plannerplan object.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "plannerPlanId": {
            "type": "string",
            "description": "Path parameter: plannerPlanId"
          }
        },
        "required": [
          "plannerPlanId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "get-planner-plan",
        "readOnlyHint": true
      }
    },
    {
      "name": "list-plan-tasks",
      "description": "Retrieve a list of plannerTask objects associated with a plannerPlan object.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__top": {
            "type": "integer",
            "minimum": 0,
            "description": "Show only the first n items"
          },
          "__skip": {
            "type": "integer",
            "minimum": 0,
            "description": "Skip the first n items"
          },
          "__search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "__filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "__count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "__orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "plannerPlanId": {
            "type": "string",
            "description": "Path parameter: plannerPlanId"
          }
        },
        "required": [
          "plannerPlanId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "list-plan-tasks",
        "readOnlyHint": true
      }
    },
    {
      "name": "create-planner-task",
      "description": "Create a new plannerTask.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique identifier for an entity. Read-only."
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "activeChecklistItemCount": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "description": "Number of checklist items with value set to false, representing incomplete items."
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Number of checklist items with value set to false, representing incomplete items."
                  },
                  "appliedCategories": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The categories to which the task has been applied. See applied Categories for possible values."
                  },
                  "assigneePriority": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Hint used to order items of this type in a list view. The format is defined as outlined here."
                  },
                  "assignments": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "The set of assignees the task is assigned to."
                  },
                  "bucketId": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Bucket ID to which the task belongs. The bucket needs to be in the plan that the task is in. It's 28 characters long and case-sensitive. Format validation is done on the service."
                  },
                  "checklistItemCount": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "description": "Number of checklist items that are present on the task."
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Number of checklist items that are present on the task."
                  },
                  "completedBy": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "application": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "displayName": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "The display name of the identity.For drive items, the display name might not always be available or up to date. For example, if a user changes their display name the API might show the new value in a future response, but the items associated with the user don't show up as changed when using delta."
                                  },
                                  "id": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "Unique identifier for the identity or actor. For example, in the access reviews decisions API, this property might record the id of the principal, that is, the group, user, or application that's subject to review."
                                  }
                                },
                                "additionalProperties": true
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "Optional. The application associated with this action."
                          },
                          "device": {
                            "anyOf": [
                              {
                                "$ref": "#/properties/body/allOf/1/properties/completedBy/anyOf/0/properties/application/anyOf/0"
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "Optional. The device associated with this action."
                          },
                          "user": {
                            "anyOf": [
                              {
                                "$ref": "#/properties/body/allOf/1/properties/completedBy/anyOf/0/properties/application/anyOf/0"
                              },
                              {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            ],
                            "description": "Optional. The user associated with this action."
                          }
                        },
                        "additionalProperties": true
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Identity of the user that completed the task."
                  },
                  "completedDateTime": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "Read-only. Date and time at which the 'percentComplete' of the task is set to '100'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Read-only. Date and time at which the 'percentComplete' of the task is set to '100'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  },
                  "conversationThreadId": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Thread ID of the conversation on the task. This is the ID of the conversation thread object created in the group."
                  },
                  "createdBy": {
                    "anyOf": [
                      {
                        "$ref": "#/properties/body/allOf/1/properties/completedBy/anyOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Identity of the user that created the task."
                  },
                  "createdDateTime": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "Read-only. Date and time at which the task is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Read-only. Date and time at which the task is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  },
                  "dueDateTime": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  },
                  "hasDescription": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Read-only. Value is true if the details object of the task has a nonempty description and false otherwise."
                  },
                  "orderHint": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Hint used to order items of this type in a list view. The format is defined as outlined here."
                  },
                  "percentComplete": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "description": "Percentage of task completion. When set to 100, the task is considered completed."
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Percentage of task completion. When set to 100, the task is considered completed."
                  },
                  "planId": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Plan ID to which the task belongs."
                  },
                  "previewType": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "automatic",
                          "noPreview",
                          "checklist",
                          "description",
                          "reference"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "This sets the type of preview that shows up on the task. The possible values are: automatic, noPreview, checklist, description, reference."
                  },
                  "priority": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "description": "Priority of the task. The valid range of values is between 0 and 10, with the increasing value being lower priority (0 has the highest priority and 10 has the lowest priority).  Currently, Planner interprets values 0 and 1 as 'urgent', 2, 3 and 4 as 'important', 5, 6, and 7 as 'medium', and 8, 9, and 10 as 'low'.  Additionally, Planner sets the value 1 for 'urgent', 3 for 'important', 5 for 'medium', and 9 for 'low'."
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Priority of the task. The valid range of values is between 0 and 10, with the increasing value being lower priority (0 has the highest priority and 10 has the lowest priority).  Currently, Planner interprets values 0 and 1 as 'urgent', 2, 3 and 4 as 'important', 5, 6, and 7 as 'medium', and 8, 9, and 10 as 'low'.  Additionally, Planner sets the value 1 for 'urgent', 3 for 'important', 5 for 'medium', and 9 for 'low'."
                  },
                  "referenceCount": {
                    "anyOf": [
                      {
                        "type": "number",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "description": "Number of external references that exist on the task."
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Number of external references that exist on the task."
                  },
                  "startDateTime": {
                    "anyOf": [
                      {
                        "type": "string",
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "format": "date-time",
                        "description": "Date and time at which the task starts. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Date and time at which the task starts. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the task."
                  },
                  "assignedToTaskBoardFormat": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/properties/body/allOf/0"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "orderHintsByAssignee": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "Dictionary of hints used to order tasks on the AssignedTo view of the Task Board. The key of each entry is one of the users the task is assigned to and the value is the order hint. The format of each value is defined as outlined here."
                              },
                              "unassignedOrderHint": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "Hint value used to order the task on the AssignedTo view of the Task Board when the task isn't assigned to anyone, or if the orderHintsByAssignee dictionary doesn't provide an order hint for the user the task is assigned to. The format is defined as outlined here."
                              }
                            },
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Read-only. Nullable. Used to render the task correctly in the task board view when grouped by assignedTo."
                  },
                  "bucketTaskBoardFormat": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/properties/body/allOf/0"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "orderHint": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "Hint used to order tasks in the bucket view of the task board. For details about the supported format, see Using order hints in Planner."
                              }
                            },
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Read-only. Nullable. Used to render the task correctly in the task board view when grouped by bucket."
                  },
                  "details": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/properties/body/allOf/0"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "checklist": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "The collection of checklist items on the task."
                              },
                              "description": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "Description of the task."
                              },
                              "previewType": {
                                "anyOf": [
                                  {
                                    "$ref": "#/properties/body/allOf/1/properties/previewType/anyOf/0"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "This sets the type of preview that shows up on the task. The possible values are: automatic, noPreview, checklist, description, reference. When set to automatic the displayed preview is chosen by the app viewing the task."
                              },
                              "references": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  },
                                  {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": true
                                  }
                                ],
                                "description": "The collection of references on the task."
                              }
                            },
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Read-only. Nullable. More details about the task."
                  },
                  "progressTaskBoardFormat": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/properties/body/allOf/0"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "orderHint": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "Hint value used to order the task on the progress view of the task board. For details about the supported format, see Using order hints in Planner."
                              }
                            },
                            "additionalProperties": true
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                      }
                    ],
                    "description": "Read-only. Nullable. Used to render the task correctly in the task board view when grouped by progress."
                  }
                },
                "additionalProperties": true
              }
            ]
          }
        },
        "required": [
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "create-planner-task",
        "readOnlyHint": false
      }
    },
    {
      "name": "get-planner-task",
      "description": "Retrieve the properties and relationships of plannerTask object.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "__select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "__expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "plannerTaskId": {
            "type": "string",
            "description": "Path parameter: plannerTaskId"
          }
        },
        "required": [
          "plannerTaskId"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "annotations": {
        "title": "get-planner-task",
        "readOnlyHint": true
      }
    }
  ]
}
