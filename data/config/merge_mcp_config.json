{
	"mcpServers": {
		"memory": {
			"command": "node",
			"args": ["/path/to/mcp-memory-server/build/index.js", "/path/to/storage/directory"]
		},
		"filesystem": {
			"command": "node",
			"args": ["path/to/filesystem-server/build/index.js"]
		},
		"git": {
			"command": "uvx",
			"args": ["mcp-server-git", "--repository", "path/to/git/repo"]
		},
		"github": {
			"command": "node",
			"args": ["/path/to/github-mcp-server/build/index.js"],
			"env": {
				"GITHUB_TOKEN": "your_github_personal_access_token",
				"LOG_LEVEL": "info",
				"SERVER_NAME": "github-mcp-server"
			}
		},
		"postgres": {
			"type": "stdio",
			"command": "npx",
			"args": ["-y", "mcp-postgres-server"],
			"env": {
				"PG_HOST": "your_host",
				"PG_PORT": "5432",
				"PG_USER": "your_user",
				"PG_PASSWORD": "your_password",
				"PG_DATABASE": "your_database"
			}
		},
		"Prisma": {
			"command": "npx",
			"args": ["-y", "prisma", "mcp"]
		},
		"mcpServers": {
			"weather": {
				"command": "python",
				"args": ["-m", "mcp_weather_server"],
				"disabled": false,
				"autoApprove": []
			}
		},
		"repomix": {
			"command": "npx",
			"args": ["-y", "repomix", "--mcp"]
		},
		"blender": {
			"command": "cmd",
			"args": ["/c", "uvx", "blender-mcp"]
		},
		"cloudflare-playwright-mcp": {
			"command": "npx",
			"args": ["mcp-remote", "https://[my-mcp-url].workers.dev/sse"]
		},
		"context7": {
			"command": "npx",
			"args": ["-y", "--node-options=--experimental-vm-modules", "@upstash/context7-mcp@1.0.6"]
		},
		"Context7": {
			"command": "npx",
			"args": ["-y", "@upstash/context7-mcp@latest"]
		},
		"\u0421ontext7": {
			"autoApprove": [],
			"disabled": false,
			"timeout": 60,
			"command": "docker",
			"args": ["run", "-i", "--rm", "context7-mcp"],
			"transportType": "stdio"
		},
		"github.com/upstash/context7-mcp": {
			"command": "cmd",
			"args": ["/c", "npx", "-y", "@upstash/context7-mcp@latest"],
			"disabled": false,
			"autoApprove": []
		},
		"ghidra": {
			"command": "python",
			"args": ["PATH-TO-REPO/GhidraMCP/ghidra_server.py"]
		},
		"TalkToFigma": {
			"command": "bunx",
			"args": ["cursor-talk-to-figma-mcp@latest"]
		},
		"playwright": {
			"command": "npx",
			"args": ["-y", "@executeautomation/playwright-mcp-server"]
		},
		"firecrawl-mcp": {
			"command": "npx",
			"args": ["-y", "firecrawl-mcp"],
			"env": {
				"FIRECRAWL_API_KEY": "YOUR-API-KEY"
			}
		},
		"mcp-server-firecrawl": {
			"command": "npx",
			"args": ["-y", "firecrawl-mcp"],
			"env": {
				"FIRECRAWL_API_KEY": "YOUR_API_KEY_HERE",
				"FIRECRAWL_RETRY_MAX_ATTEMPTS": "5",
				"FIRECRAWL_RETRY_INITIAL_DELAY": "2000",
				"FIRECRAWL_RETRY_MAX_DELAY": "30000",
				"FIRECRAWL_RETRY_BACKOFF_FACTOR": "3",
				"FIRECRAWL_CREDIT_WARNING_THRESHOLD": "2000",
				"FIRECRAWL_CREDIT_CRITICAL_THRESHOLD": "500"
			}
		},
		"inputs": [{
			"type": "promptString",
			"id": "vaultPath",
			"description": "Path to Obsidian vault"
		}],
		"servers": {
			"obsidian": {
				"command": "npx",
				"args": ["-y", "mcp-obsidian", "${input:vaultPath}"]
			}
		},
		"desktop-commander": {
			"command": "npx",
			"args": ["@wonderwhy-er/desktop-commander@latest"],
			"name": "Host OS Commander",
			"description": "Access commands on the host OS where Claude Desktop is installed"
		},
		"gitmcp": {
			"url": "https://gitmcp.io/{owner}/{repo}",
			"disabled": false,
			"autoApprove": []
		},
		"cloudflare-observability": {
			"command": "npx",
			"args": ["mcp-remote", "https://observability.mcp.cloudflare.com/sse"]
		},
		"cloudflare-bindings": {
			"command": "npx",
			"args": ["mcp-remote", "https://bindings.mcp.cloudflare.com/sse"]
		},
		"github.com/mrexodia/ida-pro-mcp": {
			"command": "uv",
			"args": ["--directory", "c:\\MCP\\ida-pro-mcp", "run", "server.py", "--install-plugin"],
			"timeout": 1800,
			"disabled": false,
			"autoApprove": ["check_connection", "get_metadata", "get_function_by_name", "get_function_by_address", "get_current_address", "get_current_function", "convert_number", "list_functions", "list_strings", "search_strings", "decompile_function", "disassemble_function", "get_xrefs_to", "get_entry_points", "set_comment", "rename_local_variable", "rename_global_variable", "set_global_variable_type", "rename_function", "set_function_prototype", "declare_c_type", "set_local_variable_type"],
			"alwaysAllow": ["check_connection", "get_metadata", "get_function_by_name", "get_function_by_address", "get_current_address", "get_current_function", "convert_number", "list_functions", "list_strings", "search_strings", "decompile_function", "disassemble_function", "get_xrefs_to", "get_entry_points", "set_comment", "rename_local_variable", "rename_global_variable", "set_global_variable_type", "rename_function", "set_function_prototype", "declare_c_type", "set_local_variable_type"]
		},
		"@21st-dev/magic": {
			"command": "npx",
			"args": ["-y", "@21st-dev/magic@latest", "API_KEY=\"your-api-key\""]
		},
		"exa": {
			"command": "npx",
			"args": ["/path/to/exa-mcp-server/build/index.js", "--tools=web_search_exa,research_paper_search,company_research,crawling,competitor_finder,linkedin_search,wikipedia_search_exa,github_search"],
			"env": {
				"EXA_API_KEY": "your-api-key-here"
			}
		},
		"AbletonMCP": {
			"command": "uvx",
			"args": ["ableton-mcp"]
		},
		"mcp-server-chatsum": {
			"command": "path-to/bin/node",
			"args": ["path-to/mcp-server-chatsum/build/index.js"],
			"env": {
				"CHAT_DB_PATH": "path-to/mcp-server-chatsum/chatbot/data/chat.db"
			}
		},
		"mcp": {
			"inputs": [{
				"type": "promptString",
				"id": "vaultPath",
				"description": "Path to Obsidian vault"
			}],
			"servers": {
				"obsidian": {
					"command": "npx",
					"args": ["-y", "mcp-obsidian", "${input:vaultPath}"]
				}
			}
		},
		"serena": {
			"command": "/abs/path/to/uv",
			"args": ["run", "--directory", "/abs/path/to/serena", "serena-mcp-server", "--project-file", "/abs/path/to/myproject.yml"]
		},
		"grafana": {
			"command": "docker",
			"args": ["run", "--rm", "-p", "8000:8000", "-e", "GRAFANA_URL", "-e", "GRAFANA_API_KEY", "mcp/grafana", "-debug"],
			"env": {
				"GRAFANA_URL": "http://localhost:3000",
				"GRAFANA_API_KEY": "<your service account token>"
			}
		},
		"notion": {
			"command": "node",
			"args": ["/absolute/path/to/notion-server/build/index.js"],
			"env": {
				"NOTION_API_KEY": "your_notion_api_key_here"
			}
		},
		"basic-memory": {
			"command": "uvx",
			"args": ["basic-memory", "--project", "your-project-name", "mcp"]
		},
		"jetbrains": {
			"command": "npx",
			"args": ["-y", "@jetbrains/mcp-proxy"]
		},
		"kubernetes": {
			"command": "npx",
			"args": ["mcp-server-kubernetes"]
		},
		"mcp-server-kubernetes": {
			"command": "node",
			"args": ["/path/to/your/mcp-server-kubernetes/dist/index.js"]
		},
		"mobile-mcp": {
			"command": "npx",
			"args": ["-y", "@mobilenext/mobile-mcp@latest"]
		},
		"your-mcp-server-name": {
			"command": "/path/to/workers-mcp",
			"args": ["run", "your-mcp-server-name", "https://your-server-url.workers.dev", "/path/to/your/project"],
			"env": {}
		},
		"qgis": {
			"command": "uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/PARENT/REPO/FOLDER/qgis_mcp/src/qgis_mcp", "run", "qgis_mcp_server.py"]
		},
		"hyper-mcp": {
			"command": "/path/to/hyper-mcp"
		},
		"mcp-unity": {
			"command": "node",
			"args": ["ABSOLUTE/PATH/TO/mcp-unity/Server/build/index.js"]
		},
		"mysql": {
			"command": "uv",
			"args": ["--directory", "path/to/mysql_mcp_server", "run", "mysql_mcp_server"],
			"env": {
				"MYSQL_HOST": "localhost",
				"MYSQL_PORT": "3306",
				"MYSQL_USER": "your_username",
				"MYSQL_PASSWORD": "your_password",
				"MYSQL_DATABASE": "your_database"
			}
		},
		"iMCP": {
			"command": "{paste iMCP server command}"
		},
		"wcgw": {
			"command": "wsl.exe",
			"args": ["uv", "tool", "run", "--python", "3.12", "wcgw@latest"]
		},
		"browser-use-mcp-server": {
			"url": "http://localhost:8000/sse"
		},
		"browser-server": {
			"command": "browser-use-mcp-server",
			"args": ["run", "server", "--port", "8000", "--stdio", "--proxy-port", "9000"],
			"env": {
				"OPENAI_API_KEY": "your-api-key"
			}
		},
		"@service-name": {
			"url": "http://localhost:8080/sse?s=[OpenAPI-Spec-URL]&u=[API-Base-URL]&h=[Auth-Header]:[Value-Prefix]"
		},
		"tavily-mcp": {
			"command": "npx",
			"args": ["-y", "tavily-mcp@0.1.2"],
			"env": {
				"TAVILY_API_KEY": "your-api-key-here"
			}
		},
		"tavily": {
			"command": "npx",
			"args": ["-y", "@mcptools/mcp-tavily"],
			"env": {
				"TAVILY_API_KEY": "your-api-key"
			}
		},
		"MySQL": {
			"command": "npx",
			"args": ["mcprunner", "--", "MYSQL_HOST=127.0.0.1", "MYSQL_PORT=3306", "MYSQL_USER=root", "MYSQL_PASS=root", "MYSQL_DB=demostore", "ALLOW_INSERT_OPERATION=true", "ALLOW_UPDATE_OPERATION=true", "ALLOW_DELETE_OPERATION=false", "--", "npx", "-y", "@benborla29/mcp-server-mysql"]
		},
		"mcp_server_mysql": {
			"command": "/full/path/to/node",
			"args": ["/full/path/to/mcp-server-mysql/dist/index.js"],
			"env": {
				"MYSQL_HOST": "127.0.0.1",
				"MYSQL_PORT": "3306",
				"MYSQL_USER": "root",
				"MYSQL_PASS": "your_password",
				"MYSQL_DB": "your_database"
			}
		},
		"android": {
			"command": "path/to/uv",
			"args": ["--directory", "path/to/android-mcp-server", "run", "server.py"]
		},
		"mcp-gsuite": {
			"command": "uvx",
			"args": ["mcp-gsuite", "--accounts-file", "/path/to/custom/.accounts.json", "--credentials-dir", "/path/to/custom/credentials"]
		},
		"resend": {
			"type": "command",
			"command": "node ABSOLUTE_PATH_TO_MCP_SEND_EMAIL_PROJECT/build/index.js --key=YOUR_RESEND_API_KEY"
		},
		"gateway": {
			"command": "PATH_TO_GATEWAY_BINARY",
			"args": ["start", "--config", "PATH_TO_GATEWAY_YAML_CONFIG", "mcp-stdio"]
		},
		"iterm-mcp": {
			"command": "npx",
			"args": ["-y", "iterm-mcp"]
		},
		"mcp-server-weread": {
			"command": "node",
			"args": ["/path/to/mcp-server-weread/build/index.js"],
			"env": {
				"WEREAD_COOKIE": "\u4f60\u7684\u5fae\u4fe1\u8bfb\u4e66cookie"
			}
		},
		"crawl4ai-rag": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "-e", "TRANSPORT", "-e", "OPENAI_API_KEY", "-e", "SUPABASE_URL", "-e", "SUPABASE_SERVICE_KEY", "mcp/crawl4ai"],
			"env": {
				"TRANSPORT": "stdio",
				"OPENAI_API_KEY": "your_openai_api_key",
				"SUPABASE_URL": "your_supabase_url",
				"SUPABASE_SERVICE_KEY": "your_supabase_service_key"
			}
		},
		"MoLing": {
			"command": "/usr/local/bin/moling",
			"args": []
		},
		"jupyter": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "SERVER_URL", "-e", "TOKEN", "-e", "NOTEBOOK_PATH", "datalayer/jupyter-mcp-server:latest"],
			"env": {
				"SERVER_URL": "http://host.docker.internal:8888",
				"TOKEN": "MY_TOKEN",
				"NOTEBOOK_PATH": "notebook.ipynb"
			}
		},
		"mcp_k8s": {
			"command": "mcp-k8s-go",
			"args": []
		},
		"mcp_k8s_go": {
			"command": "docker",
			"args": ["run", "-i", "-v", "~/.kube/config:/home/nonroot/.kube/config", "--rm", "mcpk8s/server:latest"]
		},
		"gmail": {
			"command": "npx",
			"args": ["@peakmojo/mcp-server-headless-gmail"]
		},
		"docker-mcp": {
			"command": "uvx",
			"args": ["docker-mcp"]
		},
		"tfmcp": {
			"command": "docker",
			"args": ["run", "--rm", "-v", "/path/to/your/terraform:/app/terraform", "tfmcp", "mcp"],
			"env": {
				"TERRAFORM_DIR": "/app/terraform"
			}
		},
		"language-server": {
			"command": "/full/path/to/your/clone/mcp-language-server/mcp-language-server",
			"args": ["--workspace", "/path/to/workspace", "--lsp", "language-server-executable"],
			"env": {
				"LOG_LEVEL": "DEBUG"
			}
		},
		"aws": {
			"command": "/Users/<USERNAME>/.nvm/versions/node/v20.10.0/bin/node",
			"args": ["<WORKSPACE_PATH>/aws-mcp/node_modules/tsx/dist/cli.mjs", "<WORKSPACE_PATH>/aws-mcp/index.ts", "--prefix", "<WORKSPACE_PATH>/aws-mcp", "start"]
		},
		"webresearch": {
			"command": "npx",
			"args": ["-y", "@mzxrai/mcp-webresearch@latest"]
		},
		"financial-datasets": {
			"command": "/path/to/uv",
			"args": ["--directory", "/absolute/path/to/financial-datasets-mcp", "run", "server.py"]
		},
		"n8n": {
			"command": "n8n-mcp-server",
			"env": {
				"N8N_HOST": "https://your-n8n-instance.com",
				"N8N_API_KEY": "your-api-key-here"
			}
		},
		"mem0": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "-e", "TRANSPORT", "-e", "LLM_PROVIDER", "-e", "LLM_BASE_URL", "-e", "LLM_API_KEY", "-e", "LLM_CHOICE", "-e", "EMBEDDING_MODEL_CHOICE", "-e", "DATABASE_URL", "mcp/mem0"],
			"env": {
				"TRANSPORT": "stdio",
				"LLM_PROVIDER": "openai",
				"LLM_BASE_URL": "https://api.openai.com/v1",
				"LLM_API_KEY": "YOUR-API-KEY",
				"LLM_CHOICE": "gpt-4o-mini",
				"EMBEDDING_MODEL_CHOICE": "text-embedding-3-small",
				"DATABASE_URL": "YOUR-DATABASE-URL"
			}
		},
		"weather": {
			"command": "python",
			"args": ["-m", "mcp_weather_server"],
			"disabled": false,
			"autoApprove": []
		},
		"twitter": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "buryhuang/mcp-twitter-noauth:latest"]
		},
		"evm-mcp-server": {
			"command": "npx",
			"args": ["-y", "@mcpdotdirect/evm-mcp-server"]
		},
		"evm-mcp-http": {
			"command": "npx",
			"args": ["-y", "@mcpdotdirect/evm-mcp-server", "--http"]
		},
		"evm-mcp-sse": {
			"url": "http://localhost:3001/sse"
		},
		"deepseek": {
			"command": "npx",
			"args": ["-y", "deepseek-mcp-server"],
			"env": {
				"DEEPSEEK_API_KEY": "your-api-key"
			}
		},
		"Neon": {
			"command": "npx",
			"args": ["-y", "mcp-remote", "https://mcp.neon.tech/sse"]
		},
		"neon": {
			"command": "wsl",
			"args": ["npx", "-y", "@neondatabase/mcp-server-neon", "start", "<YOUR_NEON_API_KEY>"]
		},
		"google-calendar": {
			"command": "node",
			"args": ["path/to/build/index.js"]
		},
		"base-mcp": {
			"command": "npx",
			"args": ["-y", "base-mcp@latest"],
			"env": {
				"COINBASE_API_KEY_NAME": "your_api_key_name",
				"COINBASE_API_PRIVATE_KEY": "your_private_key",
				"SEED_PHRASE": "your seed phrase here",
				"COINBASE_PROJECT_ID": "your_project_id",
				"ALCHEMY_API_KEY": "your_alchemy_api_key",
				"PINATA_JWT": "your_pinata_jwt",
				"OPENROUTER_API_KEY": "your_openrouter_api_key",
				"CHAIN_ID": "optional_for_base_sepolia_testnet"
			},
			"disabled": false,
			"autoApprove": []
		},
		"shopify-dev-mcp": {
			"command": "cmd",
			"args": ["/k", "npx", "-y", "@shopify/dev-mcp@latest"]
		},
		"dify-server": {
			"command": "node",
			"args": ["your/path/dify-server/build/index.js"],
			"env": {
				"DIFY_API_KEY": "***"
			}
		},
		"software-planning-tool": {
			"command": "node",
			"args": ["/path/to/software-planning-tool/build/index.js"],
			"disabled": false,
			"autoApprove": []
		},
		"CyberChitta": {
			"command": "uvx",
			"args": ["--from", "llm-context", "lc-mcp"]
		},
		"mongodb-env": {
			"command": "npx",
			"args": ["-y", "mcp-mongo-server"],
			"env": {
				"MCP_MONGODB_URI": "mongodb://muhammed:kilic@localhost:27017/database",
				"MCP_MONGODB_READONLY": "true"
			}
		},
		"mongodb": {
			"command": "npx",
			"args": ["-y", "mcp-mongo-server", "mongodb://muhammed:kilic@localhost:27017/database"]
		},
		"mongodb-readonly": {
			"command": "npx",
			"args": ["-y", "github:kiliczsh/mcp-mongo-server", "mongodb://muhammed:kilic@localhost:27017/database", "--read-only"]
		},
		"armor-crypto-mcp": {
			"command": "uvx",
			"args": ["armor-crypto-mcp@latest", "--version"],
			"env": {
				"ARMOR_API_KEY": "<PUT-YOUR-KEY-HERE>"
			}
		},
		"my_sqlite_db": {
			"command": "uvx",
			"args": ["--from", "mcp-alchemy==2025.5.2.210242", "--refresh-package", "mcp-alchemy", "mcp-alchemy"],
			"env": {
				"DB_URL": "sqlite:////absolute/path/to/database.db"
			}
		},
		"my_postgres_db": {
			"command": "uvx",
			"args": ["--from", "mcp-alchemy==2025.5.2.210242", "--with", "psycopg2-binary", "--refresh-package", "mcp-alchemy", "mcp-alchemy"],
			"env": {
				"DB_URL": "postgresql://user:password@localhost/dbname"
			}
		},
		"my_mysql_db": {
			"command": "uvx",
			"args": ["--from", "mcp-alchemy==2025.5.2.210242", "--with", "pymysql", "--refresh-package", "mcp-alchemy", "mcp-alchemy"],
			"env": {
				"DB_URL": "mysql+pymysql://user:password@localhost/dbname"
			}
		},
		"my_mssql_db": {
			"command": "uvx",
			"args": ["--from", "mcp-alchemy==2025.5.2.210242", "--with", "pymssql", "--refresh-package", "mcp-alchemy", "mcp-alchemy"],
			"env": {
				"DB_URL": "mssql+pymssql://user:password@localhost/dbname"
			}
		},
		"my_oracle_db": {
			"command": "uvx",
			"args": ["--from", "mcp-alchemy==2025.5.2.210242", "--with", "cx_oracle", "--refresh-package", "mcp-alchemy", "mcp-alchemy"],
			"env": {
				"DB_URL": "oracle+cx_oracle://user:password@localhost/dbname"
			}
		},
		"my_cratedb": {
			"command": "uvx",
			"args": ["--from", "mcp-alchemy==2025.5.2.210242", "--with", "sqlalchemy-cratedb>=0.42.0.dev1", "--refresh-package", "mcp-alchemy", "mcp-alchemy"],
			"env": {
				"DB_URL": "crate://user:password@localhost:4200/?schema=testdrive"
			}
		},
		"apify": {
			"type": "sse",
			"url": "https://actors-mcp-server.apify.actor/sse",
			"env": {
				"APIFY_TOKEN": "your-apify-token"
			}
		},
		"actors-mcp-server": {
			"command": "npx",
			"args": ["-y", "@apify/actors-mcp-server", "--actors", "lukaskrivka/google-maps-with-contact-details,apify/instagram-scraper"],
			"env": {
				"APIFY_TOKEN": "your-apify-token"
			}
		},
		"excel": {
			"command": "npx",
			"args": ["--yes", "@negokaz/excel-mcp-server"],
			"env": {
				"EXCEL_MCP_PAGING_CELLS_LIMIT": "4000"
			}
		},
		"todoist": {
			"command": "npx",
			"args": ["-y", "@abhiz123/todoist-mcp-server"],
			"env": {
				"TODOIST_API_TOKEN": "your_api_token_here"
			}
		},
		"youtube-transcript": {
			"command": "npx",
			"args": ["-y", "@kimtaeyoon83/mcp-server-youtube-transcript"]
		},
		"dbt-mcp": {
			"command": "<path-to-mcp-executable>",
			"args": ["run", "<path-to-this-directory>/src/dbt_mcp/main.py"]
		},
		"elasticsearch": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-elasticsearch", "http://localhost:9200"]
		},
		"razorpay-mcp-server": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "-e", "RAZORPAY_KEY_ID", "-e", "RAZORPAY_KEY_SECRET", "razorpay-mcp-server:latest"],
			"env": {
				"RAZORPAY_KEY_ID": "your_razorpay_key_id",
				"RAZORPAY_KEY_SECRET": "your_razorpay_key_secret"
			}
		},
		"mem0-mcp": {
			"command": "npx",
			"args": ["-y", "@pinkpixel/mem0-mcp"],
			"env": {
				"OPENAI_API_KEY": "YOUR_OPENAI_API_KEY_HERE",
				"DEFAULT_USER_ID": "user123"
			},
			"disabled": false,
			"alwaysAllow": ["add_memory", "search_memory"]
		},
		"notion-todo": {
			"command": "/path/to/your/.venv/bin/python",
			"args": ["-m", "notion_mcp"],
			"cwd": "/path/to/notion-mcp"
		},
		"rag-docs": {
			"command": "npx",
			"args": ["-y", "@hannesrudolph/mcp-ragdocs"],
			"env": {
				"OPENAI_API_KEY": "",
				"QDRANT_URL": "",
				"QDRANT_API_KEY": ""
			}
		},
		"applescript-mcp-server": {
			"command": "node",
			"args": ["/path/to/applescript-mcp/dist/index.js"]
		},
		"windows-cli": {
			"command": "npx",
			"args": ["-y", "@simonb97/server-win-cli", "--config", "path/to/your/config.json"]
		},
		"stdio-db-mcp-server": {
			"command": "/path/to/db-mcp-server/server",
			"args": ["-t", "stdio", "-c", "/path/to/config.json"]
		},
		"ios-simulator": {
			"command": "node",
			"args": ["/path/to/mcp-server-simulator-ios-idb/dist/index.js"],
			"env": {}
		},
		"osp_marketing_tools": {
			"command": "uvx",
			"args": ["--from", "git+https://github.com/open-strategy-partners/osp_marketing_tools@main", "osp_marketing_tools"]
		},
		"figma-python": {
			"command": "figma-mcp",
			"args": ["--figma-api-key=your_figma_key"]
		},
		"apple-shortcuts": {
			"command": "npx",
			"args": ["-y", "mcp-server-apple-shortcuts"]
		},
		"tripo-mcp": {
			"command": "uvx",
			"args": ["tripo-mcp"]
		},
		"BloodHound": {
			"name": "BloodHound",
			"isActive": true,
			"command": "uv",
			"args": ["run", "--with", "mcp[cli],neo4j", "mcp", "run", "<PATH_TO_THE_PROJECT>server.py"],
			"env": {
				"BLOODHOUND_URI": "bolt://localhost:7687",
				"BLOODHOUND_USERNAME": "neo4j",
				"BLOODHOUND_PASSWORD": "bloodhound"
			}
		},
		"duckduckgo": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "ashdev/duckduckgo-mcp-server"]
		},
		"airbnb": {
			"command": "npx",
			"args": ["-y", "@Domoteek/mcp-server-airbnb", "--ignore-robots-txt"]
		},
		"mongodb-lens": {
			"command": "/path/to/npx",
			"args": ["-y", "mongodb-lens@latest"]
		},
		"airtable": {
			"command": "node",
			"args": ["path/to/airtable-mcp/build/index.js"],
			"env": {
				"AIRTABLE_API_KEY": "your_api_key_here"
			}
		},
		"mcp-server-commands": {
			"command": "npx",
			"args": ["mcp-server-commands"]
		},
		"mcp-server-motherduck": {
			"command": "uv",
			"args": ["--directory", "/path/to/your/local/mcp-server-motherduck", "run", "mcp-server-motherduck", "--db-path", "md:", "--motherduck-token", "<YOUR_MOTHERDUCK_TOKEN_HERE>"]
		},
		"atlas": {
			"command": "npx",
			"args": ["mcp-mongodb-atlas"],
			"env": {
				"ATLAS_PUBLIC_KEY": "your-public-key",
				"ATLAS_PRIVATE_KEY": "your-private-key"
			}
		},
		"mcp-graphql": {
			"command": "npx",
			"args": ["mcp-graphql", "--endpoint", "http://localhost:3000/graphql"]
		},
		"azureDevOps": {
			"command": "npx",
			"args": ["-y", "@tiberriver256/mcp-server-azure-devops"],
			"env": {
				"AZURE_DEVOPS_ORG_URL": "https://dev.azure.com/your-organization",
				"AZURE_DEVOPS_AUTH_METHOD": "pat",
				"AZURE_DEVOPS_PAT": "<YOUR_PAT>",
				"AZURE_DEVOPS_DEFAULT_PROJECT": "your-project-name"
			}
		},
		"MCP Neovim Server": {
			"command": "npx",
			"args": ["-y", "mcp-neovim-server"],
			"env": {
				"ALLOW_SHELL_COMMANDS": "true",
				"NVIM_SOCKET_PATH": "/tmp/nvim"
			}
		},
		"websearch": {
			"command": "uv",
			"args": ["--directory", "D:\\ABSOLUTE\\PATH\\TO\\WebSearch", "run", "main.py"]
		},
		"freecad": {
			"command": "uv",
			"args": ["--directory", "/path/to/freecad-mcp/", "run", "freecad-mcp"]
		},
		"gemini": {
			"command": "node",
			"args": ["path/to/gemini-search-server/build/index.js"],
			"env": {
				"GEMINI_API_KEY": "your_api_key_here"
			}
		},
		"selenium": {
			"command": "npx",
			"args": ["-y", "@angiejones/mcp-selenium"]
		},
		"search1api": {
			"command": "npx",
			"args": ["-y", "search1api-mcp"],
			"env": {
				"SEARCH1API_KEY": "YOUR_SEARCH1API_KEY"
			}
		},
		"mcp-sequentialthinking-tools": {
			"command": "wsl.exe",
			"args": ["bash", "-c", "source ~/.nvm/nvm.sh && /home/username/.nvm/versions/node/v20.12.1/bin/npx mcp-sequentialthinking-tools"]
		},
		"telegram": {
			"command": "telegram-mcp",
			"env": {
				"TG_APP_ID": "<your-app-id>",
				"TG_API_HASH": "<your-api-hash>",
				"PATH": "<path_to_telegram-mcp_binary_dir>",
				"HOME": "<path_to_your_home_directory"
			}
		},
		"telegram-mcp": {
			"command": "telegram-mcp",
			"env": {
				"TG_APP_ID": "<your-app-id>",
				"TG_API_HASH": "<your-api-hash>"
			}
		},
		"siri-shortcuts": {
			"command": "npx",
			"args": ["mcp-server-siri-shortcuts"]
		},
		"word-document-server": {
			"command": "uvx",
			"args": ["--from", "office-word-mcp-server", "word_mcp_server"]
		},
		"unsplash": {
			"command": "<source_dir>/cmd/server/unsplash-mcp-server",
			"args": [],
			"env": {
				"UNSPLASH_ACCESS_KEY": "<your_unsplash_access_key>"
			}
		},
		"g-search": {
			"command": "npx",
			"args": ["-y", "g-search-mcp"]
		},
		"figma": {
			"command": "node",
			"args": ["path/to/figma-server/build/index.js"],
			"env": {
				"FIGMA_ACCESS_TOKEN": "your-access-token-here"
			},
			"disabled": false,
			"alwaysAllow": []
		},
		"xiyan-mcp-server": {
			"command": "/xxx/python",
			"args": ["-m", "xiyan_mcp_server"],
			"env": {
				"YML": "path/to/yml"
			}
		},
		"xiyan_mcp_server_1": {
			"url": "http://localhost:8000/sse"
		},
		"IDAPro": {
			"url": "http://127.0.0.1:3000/sse",
			"type": "sse"
		},
		"railsMcpServer": {
			"command": "ruby",
			"args": ["/full/path/to/rails-mcp-server/exe/rails-mcp-server"]
		},
		"maigret": {
			"command": "node",
			"args": ["/absolute/path/to/mcp-maigret/build/index.js"],
			"env": {
				"MAIGRET_REPORTS_DIR": "/path/to/reports/directory"
			}
		},
		"mcp-1panel": {
			"url": "http://localhost:8000/sse"
		},
		"biomcp": {
			"command": "uv",
			"args": ["run", "--with", "biomcp-python", "biomcp", "run"]
		},
		"duckdb": {
			"command": "duckdb-mcp-server",
			"args": ["--db-path", "~/claude-duckdb/data.db"]
		},
		"chat-openai": {
			"command": "node",
			"args": ["/path/to/any-chat-completions-mcp/build/index.js"],
			"env": {
				"AI_CHAT_KEY": "OPENAI_KEY",
				"AI_CHAT_NAME": "OpenAI",
				"AI_CHAT_MODEL": "gpt-4o",
				"AI_CHAT_BASE_URL": "https://api.openai.com/v1"
			}
		},
		"chat-pyroprompts": {
			"command": "node",
			"args": ["/path/to/any-chat-completions-mcp/build/index.js"],
			"env": {
				"AI_CHAT_KEY": "PYROPROMPTS_KEY",
				"AI_CHAT_NAME": "PyroPrompts",
				"AI_CHAT_MODEL": "ash",
				"AI_CHAT_BASE_URL": "https://api.pyroprompts.com/openaiv1"
			}
		},
		"chat-perplexity": {
			"command": "node",
			"args": ["/path/to/any-chat-completions-mcp/build/index.js"],
			"env": {
				"AI_CHAT_KEY": "PERPLEXITY_KEY",
				"AI_CHAT_NAME": "Perplexity",
				"AI_CHAT_MODEL": "sonar",
				"AI_CHAT_BASE_URL": "https://api.perplexity.ai"
			}
		},
		"wiremcp": {
			"command": "node",
			"args": ["/ABSOLUTE_PATH_TO/WireMCP/index.js"]
		},
		"sequential-thinking": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-sequential-thinking"]
		},
		"FileScopeMCP": {
			"command": "wsl",
			"args": ["-d", "Ubuntu-24.04", "/home/admica/FileScopeMCP/run.sh"],
			"transport": "stdio",
			"disabled": false,
			"alwaysAllow": []
		},
		"my-php-server": {
			"command": "php",
			"args": ["/path/to/your/project/mcp-server.php"]
		},
		"anki-mcp": {
			"command": "node",
			"args": ["d:\\anki-mcp-server\\build\\index.js"]
		},
		"hwp": {
			"command": "python",
			"args": ["\uacbd\ub85c/hwp-mcp/hwp_mcp_stdio_server.py"]
		},
		"Lokka-Microsoft": {
			"command": "npx",
			"args": ["-y", "@merill/lokka"],
			"env": {
				"TENANT_ID": "<tenant-id>",
				"CLIENT_ID": "<client-id>",
				"CLIENT_SECRET": "<client-secret>"
			}
		},
		"kali-docker": {
			"command": "docker",
			"args": ["run", "-i", "kali-mcps:latest"]
		},
		"deepseek-claude": {
			"command": "uv",
			"args": ["--directory", "C:\\ABSOLUTE\\PATH\\TO\\PARENT\\FOLDER\\deepseek-claude", "run", "server.py"]
		},
		"terraform-registry": {
			"command": "npx",
			"args": ["-y", "terraform-mcp-server"]
		},
		"MetaMCP": {
			"command": "npx",
			"args": ["-y", "@metamcp/mcp-server-metamcp@latest"],
			"env": {
				"METAMCP_API_KEY": "<your api key>"
			}
		},
		"GitLab communication server": {
			"command": "npx",
			"args": ["-y", "@harshmaur/gitlab-mcp"],
			"env": {
				"GITLAB_PERSONAL_ACCESS_TOKEN": "your_gitlab_token",
				"GITLAB_API_URL": "your_gitlab_api_url"
			}
		},
		"milvus": {
			"command": "/PATH/TO/uv",
			"args": ["--directory", "/path/to/mcp-server-milvus/src/mcp_server_milvus", "run", "server.py", "--milvus-uri", "http://127.0.0.1:19530"]
		},
		"aws-mcp-server": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-v", "/Users/YOUR_USER_NAME/.aws:/home/appuser/.aws:ro", "ghcr.io/alexei-led/aws-mcp-server:latest"]
		},
		"ctx": {
			"command": "ctx server -c /path/to/your/project"
		},
		"mcp-proxy": {
			"command": "node",
			"args": ["/full/path/to/pocket-mcp/server/build/index.js"],
			"env": {
				"MCP_API_KEY": "api_key_from_client",
				"CLIENT_API_URL": "http://localhost:<port>/api"
			}
		},
		"mcp-server-hotnews": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "wopal/mcp-server-hotnews"]
		},
		"aws-cost-explorer": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "AWS_ACCESS_KEY_ID", "-e", "AWS_SECRET_ACCESS_KEY", "-e", "AWS_REGION", "-e", "BEDROCK_LOG_GROUP_NAME", "-e", "MCP_TRANSPORT", "-e", "CROSS_ACCOUNT_ROLE_NAME", "aws-cost-explorer-mcp:latest"],
			"env": {
				"AWS_ACCESS_KEY_ID": "YOUR_ACCESS_KEY_ID",
				"AWS_SECRET_ACCESS_KEY": "YOUR_SECRET_ACCESS_KEY",
				"AWS_REGION": "us-east-1",
				"BEDROCK_LOG_GROUP_NAME": "YOUR_CLOUDWATCH_BEDROCK_MODEL_INVOCATION_LOG_GROUP_NAME",
				"CROSS_ACCOUNT_ROLE_NAME": "ROLE_NAME_FOR_THE_ROLE_TO_ASSUME_IN_OTHER_ACCOUNTS",
				"MCP_TRANSPORT": "stdio"
			}
		},
		"aws_cost_explorer": {
			"command": "uv",
			"args": ["--directory", "/path/to/aws-cost-explorer-mcp-server", "run", "server.py"],
			"env": {
				"AWS_ACCESS_KEY_ID": "YOUR_ACCESS_KEY_ID",
				"AWS_SECRET_ACCESS_KEY": "YOUR_SECRET_ACCESS_KEY",
				"AWS_REGION": "us-east-1",
				"BEDROCK_LOG_GROUP_NAME": "YOUR_CLOUDWATCH_BEDROCK_MODEL_INVOCATION_LOG_GROUP_NAME",
				"CROSS_ACCOUNT_ROLE_NAME": "ROLE_NAME_FOR_THE_ROLE_TO_ASSUME_IN_OTHER_ACCOUNTS",
				"MCP_TRANSPORT": "stdio"
			}
		},
		"mcp2lambda": {
			"command": "uv",
			"args": ["--directory", "<full path to the mcp2lambda directory>", "run", "main.py"]
		},
		"apktool-mcp-server": {
			"command": "/<path>/<to>/uv",
			"args": ["--directory", "</PATH/TO/>apktool-mcp-server/", "run", "apktool_mcp_server.py"]
		},
		"github.com/canvrno/ProxmoxMCP": {
			"command": "/absolute/path/to/ProxmoxMCP/.venv/bin/python",
			"args": ["-m", "proxmox_mcp.server"],
			"cwd": "/absolute/path/to/ProxmoxMCP",
			"env": {
				"PYTHONPATH": "/absolute/path/to/ProxmoxMCP/src",
				"PROXMOX_MCP_CONFIG": "/absolute/path/to/ProxmoxMCP/proxmox-config/config.json",
				"PROXMOX_HOST": "your-proxmox-host",
				"PROXMOX_USER": "username@pve",
				"PROXMOX_TOKEN_NAME": "token-name",
				"PROXMOX_TOKEN_VALUE": "token-value",
				"PROXMOX_PORT": "8006",
				"PROXMOX_VERIFY_SSL": "false",
				"PROXMOX_SERVICE": "PVE",
				"LOG_LEVEL": "DEBUG"
			},
			"disabled": false,
			"autoApprove": []
		},
		"text-editor": {
			"command": "/home/daniel/pp/venvs/editor-mcp/bin/python",
			"args": ["/home/daniel/pp/editor-mcp/src/text_editor/server.py"],
			"env": {
				"MAX_SELECT_LINES": "100",
				"ENABLE_JS_SYNTAX_CHECK": "0",
				"FAIL_ON_PYTHON_SYNTAX_ERROR": "1",
				"FAIL_ON_JS_SYNTAX_ERROR": "0",
				"PROTECTED_PATHS": "*.env,.env*,config*.json,*secret*,/etc/passwd,/home/user/.ssh/id_rsa"
			}
		},
		"RevitMCPServer": {
			"disabled": false,
			"timeout": 30,
			"command": "uvx",
			"args": ["revit-mcp"],
			"transportType": "stdio",
			"autoApprove": ["active_view", "call_func", "create_cable_trays", "create_door_windows", "create_ducts", "create_family_instances", "create_floors", "create_floor_plan_views", "create_grids", "create_levels", "create_pipes", "create_room_separation_lines", "create_room_tags", "create_rooms", "create_sheets", "create_walls", "delete_elements", "execute_commands", "find_elements", "get_commands", "get_locations", "get_selected_elements", "get_view_data", "link_dwg_and_activate_view", "move_elements", "parameter_elements", "show_elements", "update_elements"]
		},
		"erickwendel-contributions": {
			"command": "npm",
			"args": ["exec", "--", "@smithery/cli@latest", "run", "@ErickWendel/erickwendel-contributions-mcp"]
		},
		"Bifrost": {
			"url": "http://localhost:8008/sse"
		},
		"BackendAPI": {
			"url": "http://localhost:5643/backend-api/sse"
		},
		"FrontendApp": {
			"url": "http://localhost:5644/frontend-app/sse"
		},
		"mindmap": {
			"command": "python",
			"args": ["/path/to/your/mindmap_mcp_server/server.py", "--return-type", "filePath"]
		},
		"mindmap-converter": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "-v", "/path/to/output/folder:/output", "ychen94/mindmap-converter-mcp:latest"]
		},
		"mssql": {
			"command": "uv",
			"args": ["--directory", "path/to/mssql_mcp_server", "run", "mssql_mcp_server"],
			"env": {
				"MSSQL_SERVER": "localhost",
				"MSSQL_USER": "your_username",
				"MSSQL_PASSWORD": "your_password",
				"MSSQL_DATABASE": "your_database"
			}
		},
		"kicad": {
			"command": "/ABSOLUTE/PATH/TO/YOUR/PROJECT/kicad-mcp/venv/bin/python",
			"args": ["/ABSOLUTE/PATH/TO/YOUR/PROJECT/kicad-mcp/main.py"]
		},
		"llama_index_docs_server": {
			"command": "poetry",
			"args": ["--directory", "$YOURPATH/llamacloud-mcp", "run", "python", "$YOURPATH/llamacloud-mcp/mcp-server.py"]
		},
		"simple-arxiv": {
			"command": "C:\\Users\\YOUR_USERNAME\\AppData\\Local\\Programs\\Python\\Python311\\python.exe",
			"args": ["-m", "mcp_simple_arxiv"]
		},
		"searxng": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "SEARXNG_URL", "mcp-searxng:latest"],
			"env": {
				"SEARXNG_URL": "YOUR_SEARXNG_INSTANCE_URL"
			}
		},
		"postman": {
			"command": "node",
			"args": ["/path/to/postman-api-server/build/index.js"],
			"env": {
				"POSTMAN_API_KEY": "CHANGEME"
			}
		},
		"gdrive": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-gdrive"]
		},
		"deep-research-mcp": {
			"url": "http://your-server-address:8080/mcp",
			"type": "sse"
		},
		"edgeone-pages-mcp-server": {
			"url": "https://mcp-on-edge.edgeone.site/mcp-server"
		},
		"googleAdsServer": {
			"command": "/FULL/PATH/TO/mcp-google-ads-main/.venv/bin/python",
			"args": ["/FULL/PATH/TO/mcp-google-ads-main/google_ads_server.py"],
			"env": {
				"GOOGLE_ADS_CREDENTIALS_PATH": "/FULL/PATH/TO/mcp-google-ads-main/service_account_credentials.json",
				"GOOGLE_ADS_DEVELOPER_TOKEN": "YOUR_DEVELOPER_TOKEN_HERE",
				"GOOGLE_ADS_LOGIN_CUSTOMER_ID": "YOUR_MANAGER_ACCOUNT_ID_HERE"
			}
		},
		"nxp_server_example": {
			"command": "npx",
			"args": ["-y", "@npm_package_example/npx_server_example"],
			"env": {
				"API_KEY": "YOUR_API_KEY"
			}
		},
		"local_server_example": {
			"command": "node",
			"args": ["node /path/to/local_server/dist/index.js"]
		},
		"name": "url",
		"bio": "Your AI Agent Bio",
		"lore": ["Some lore of your AI Agent 1", "Some lore of your AI Agent 1"],
		"objectives": ["first objective that your AI Agent need to follow", "second objective that your AI Agent need to follow"],
		"knowledge": ["first knowledge of your AI Agent", "second knowledge of your AI Agent"],
		"interval": "Your agent interval beetween each transaction of the Agent in ms,",
		"chat_id": "Your Agent Chat-id for isolating memory",
		"autonomous": "Your agent is autonomous or not",
		"plugins": ["Your first plugin", "Your second plugin"],
		"MCP-JFrog": {
			"command": "npm",
			"args": ["exec", "-y", "github:jfrog/mcp-jfrog"],
			"env": {
				"JFROG_ACCESS_TOKEN": "ACCESS_TOKEN",
				"JFROG_URL": "https://<YOUR_JFROG_INSTANCE_URL>"
			}
		},
		"cli-mcp-server": {
			"command": "uvx",
			"args": ["cli-mcp-server"],
			"env": {
				"ALLOWED_DIR": "</your/desired/dir>",
				"ALLOWED_COMMANDS": "ls,cat,pwd,echo",
				"ALLOWED_FLAGS": "-l,-a,--help,--version",
				"MAX_COMMAND_LENGTH": "1024",
				"COMMAND_TIMEOUT": "30",
				"ALLOW_SHELL_OPERATORS": "false"
			}
		},
		"ppt": {
			"command": "uvx",
			"args": ["--from", "office-powerpoint-mcp-server", "ppt_mcp_server"],
			"env": {}
		},
		"nixos": {
			"command": "uv",
			"args": ["run", "-m", "mcp_nixos.__main__"],
			"env": {
				"PYTHONPATH": "."
			}
		},
		"make": {
			"command": "npx",
			"args": ["-y", "@makehq/mcp-server"],
			"env": {
				"MAKE_API_KEY": "<your-api-key>",
				"MAKE_ZONE": "<your-zone>",
				"MAKE_TEAM": "<your-team-id>"
			}
		},
		"package-version": {
			"command": "/Users/sammcj/go/bin/mcp-package-version"
		},
		"linkedin": {
			"command": "uvx",
			"args": ["--from", "git+https://github.com/adhikasp/mcp-linkedin", "mcp-linkedin"],
			"env": {
				"LINKEDIN_EMAIL": "your_linkedin_email",
				"LINKEDIN_PASSWORD": "your_linkedin_password"
			}
		},
		"think-tool": {
			"command": "node",
			"args": ["/path/to/mcp-think-tool/build/index.js"]
		},
		"meilisearch": {
			"command": "uvx",
			"args": ["-n", "meilisearch-mcp"]
		},
		"MCPControl": {
			"command": "npx",
			"args": ["--no-cache", "-y", "mcp-control"]
		},
		"openapi": {
			"command": "npx",
			"args": ["-y", "@ivotoby/openapi-mcp-server"],
			"env": {
				"API_BASE_URL": "https://api.example.com",
				"OPENAPI_SPEC_PATH": "https://api.example.com/openapi.json",
				"API_HEADERS": "Authorization:Bearer token123,X-API-Key:your-api-key"
			}
		},
		"elevenlabs": {
			"command": "uv",
			"args": ["--directory", "path/to/elevenlabs-mcp-server", "run", "elevenlabs-mcp-server"],
			"env": {
				"ELEVENLABS_API_KEY": "your-api-key",
				"ELEVENLABS_VOICE_ID": "your-voice-id",
				"ELEVENLABS_MODEL_ID": "eleven_flash_v2",
				"ELEVENLABS_STABILITY": "0.5",
				"ELEVENLABS_SIMILARITY_BOOST": "0.75",
				"ELEVENLABS_STYLE": "0.1",
				"ELEVENLABS_OUTPUT_DIR": "output"
			}
		},
		"wordpress": {
			"command": "node",
			"args": ["path/to/server/dist/index.js"],
			"env": {
				"WP_SITES_PATH": "/absolute/path/to/wp-sites.json"
			}
		},
		"simple-pubmed": {
			"command": "C:\\Users\\YOUR_USERNAME\\AppData\\Local\\Programs\\Python\\Python311\\python.exe",
			"args": ["-m", "mcp_simple_pubmed"],
			"env": {
				"PUBMED_EMAIL": "your-email@example.com",
				"PUBMED_API_KEY": "your-api-key"
			}
		},
		"unreal-analyzer": {
			"command": "node",
			"args": ["path/to/unreal-analyzer/build/index.js"],
			"env": {}
		},
		"trends-hub": {
			"command": "npx",
			"args": ["-y", "mcp-trends-hub@1.6.2"]
		},
		"messages": {
			"command": "uvx",
			"args": ["mac-messages-mcp"]
		},
		"mastergo-magic-mcp": {
			"command": "npx",
			"args": ["-y", "@mastergo/magic-mcp", "--token=<MG_MCP_TOKEN>", "--url=https://mastergo.com"],
			"env": {}
		},
		"@master/mastergo-magic-mcp": {
			"command": "npx",
			"args": ["-y", "@mastergo/magic-mcp", "--token=<MG_MCP_TOKEN>", "--url=https://mastergo.com"],
			"env": {}
		},
		"obsidian-mcp-server": {
			"command": "node",
			"args": ["/path/to/obsidian-mcp-server/dist/index.js"],
			"env": {
				"OBSIDIAN_API_KEY": "your_api_key_here",
				"VERIFY_SSL": "false",
				"OBSIDIAN_PROTOCOL": "https",
				"OBSIDIAN_HOST": "127.0.0.1",
				"OBSIDIAN_PORT": "27124",
				"REQUEST_TIMEOUT": "5000",
				"MAX_CONTENT_LENGTH": "52428800",
				"MAX_BODY_LENGTH": "52428800",
				"RATE_LIMIT_WINDOW_MS": "900000",
				"RATE_LIMIT_MAX_REQUESTS": "200",
				"TOOL_TIMEOUT_MS": "60000"
			}
		},
		"web3-rpc": {
			"command": "node",
			"args": ["/PATH/TO/web3-mcp/build/index.js"]
		},
		"rust-docs-reqwest": {
			"command": "/path/to/your/rustdocs_mcp_server",
			"args": ["reqwest@0.12"],
			"env": {
				"OPENAI_API_KEY": "YOUR_OPENAI_API_KEY_HERE"
			},
			"disabled": false,
			"alwaysAllow": []
		},
		"rust-docs-async-stripe": {
			"command": "rustdocs_mcp_server",
			"args": ["async-stripe@0.40", "-F", " runtime-tokio-hyper-rustls"],
			"env": {
				"OPENAI_API_KEY": "YOUR_OPENAI_API_KEY_HERE"
			},
			"disabled": false,
			"alwaysAllow": []
		},
		"rust-docs-serde": {
			"command": "/path/to/your/rustdocs_mcp_server",
			"args": ["serde@^1.0"]
		},
		"rust-docs-async-stripe-rt": {
			"command": "rustdocs_mcp_server",
			"args": ["async-stripe@0.40", "-F", "runtime-tokio-hyper-rustls"]
		},
		"discord": {
			"command": "node",
			"args": ["path/to/discord-mcp/build/index.js"],
			"env": {
				"DISCORD_TOKEN": "your_discord_bot_token_here"
			}
		},
		"remote-macos-use": {
			"command": "docker",
			"args": ["run", "-i", "-e", "MACOS_USERNAME=your_macos_username", "-e", "MACOS_PASSWORD=your_macos_password", "-e", "MACOS_HOST=your_macos_hostname_or_ip", "--rm", "buryhuang/mcp-remote-macos-use:latest"]
		},
		"pymol": {
			"command": "/Users/username/pymol-mcp/venv/bin/python",
			"args": ["/Users/username/pymol-mcp/pymol_mcp_server.py"]
		},
		"chimerax": {
			"command": "/path/to/mcp",
			"args": ["run", "/path/to/molecule-mcp/ChimeraX_server.py"]
		},
		"gromacs_copilot": {
			"command": "/path/to/mcp",
			"args": ["run", "/path/to/molecule-mcp/mcp_server.py"]
		},
		"quickchart-server": {
			"command": "npx",
			"args": ["-y", "@gongrzhe/quickchart-mcp-server"]
		},
		"langfuse": {
			"command": "node",
			"args": ["<absolute-path>/build/index.js"],
			"env": {
				"LANGFUSE_PUBLIC_KEY": "your-public-key",
				"LANGFUSE_SECRET_KEY": "your-secret-key",
				"LANGFUSE_BASEURL": "https://cloud.langfuse.com"
			}
		},
		"llamacloud": {
			"command": "npx",
			"args": ["-y", "@llamaindex/mcp-server-llamacloud", "--index", "10k-SEC-Tesla", "--description", "10k SEC documents from 2023 for Tesla", "--index", "10k-SEC-Apple", "--description", "10k SEC documents from 2023 for Apple"],
			"env": {
				"LLAMA_CLOUD_PROJECT_NAME": "<YOUR_PROJECT_NAME>",
				"LLAMA_CLOUD_API_KEY": "<YOUR_API_KEY>"
			}
		},
		"openai": {
			"command": "openai-server",
			"env": {
				"OPENAI_API_KEY": "apikey"
			}
		},
		"flux": {
			"command": "flux-server",
			"env": {
				"REPLICATE_API_TOKEN": "your-replicate-token"
			}
		},
		"mcp-k8s": {
			"command": "docker",
			"args": ["run", "-i", "-v", "~/.kube/config:/root/.kube/config", "--rm", "ghcr.io/silenceper/mcp-k8s:latest"]
		},
		"email": {
			"command": "uv",
			"args": ["~\\servers\\src\\email\\src\\mcp_server_email", "--dir", "C:\\Users\\YourUserName\\Desktop"],
			"env": {
				"SENDER": "2593666979q@gmail.com",
				"PASSWORD": "tuogk......."
			}
		},
		"agentrpc": {
			"command": "npx",
			"args": ["-y", "agentrpc", "mcp"],
			"env": {
				"AGENTRPC_API_SECRET": "<YOUR_API_SECRET>"
			}
		},
		"mcp-minecraft": {
			"command": "npx",
			"args": ["-y", "mcp-minecraft@latest", "--server-jar", "/absolute/path/to/minecraft-server/server.jar"]
		},
		"mcp-code-executor": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "mcp-code-executor"]
		},
		"bigquery": {
			"command": "node",
			"args": ["/path/to/your/clone/mcp-bigquery-server/dist/index.js", "--project-id", "your-project-id", "--location", "us-central1", "--key-file", "/path/to/service-account-key.json"]
		},
		"asana": {
			"command": "npx",
			"args": ["-y", "@cristip73/mcp-server-asana"],
			"env": {
				"ASANA_ACCESS_TOKEN": "your-asana-access-token",
				"DEFAULT_WORKSPACE_ID": "your-default-workspace-id"
			}
		},
		"hass-mcp": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "HA_URL", "-e", "HA_TOKEN", "voska/hass-mcp"],
			"env": {
				"HA_URL": "http://homeassistant.local:8123",
				"HA_TOKEN": "YOUR_LONG_LIVED_TOKEN"
			}
		},
		"coincap-mcp": {
			"command": "/path/to/coincap-mcp/build/index.js"
		},
		"xtquantai": {
			"command": "cmd /c uvx",
			"args": ["path:\\to\\xtquantai"]
		},
		"Vantage": {
			"command": "<path_to_compiled_vantage_mcp_server_binary>",
			"args": [],
			"env": {
				"VANTAGE_BEARER_TOKEN": "<personal_vantage_api_token>"
			}
		},
		"search": {
			"command": "uv",
			"args": ["--directory", "D:\\code\\search-server", "run", "search"],
			"env": {
				"BRAVE_API_KEY": "\u4f60\u7533\u8bf7\u7684API KEY"
			}
		},
		"prometheus": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "-e", "PROMETHEUS_URL", "-e", "PROMETHEUS_USERNAME", "-e", "PROMETHEUS_PASSWORD", "ghcr.io/pab1it0/prometheus-mcp-server:latest"],
			"env": {
				"PROMETHEUS_URL": "http://your-prometheus-server:9090",
				"PROMETHEUS_USERNAME": "your_username",
				"PROMETHEUS_PASSWORD": "your_password"
			}
		},
		"logfire": {
			"command": "uvx",
			"args": ["logfire-mcp"],
			"env": {
				"LOGFIRE_READ_TOKEN": "YOUR_TOKEN"
			},
			"disabled": false,
			"autoApprove": []
		},
		"package-docs": {
			"command": "npx",
			"args": ["-y", "mcp-package-docs"],
			"env": {
				"ENABLE_LSP": "true",
				"TYPESCRIPT_SERVER": "{\"command\":\"/custom/path/typescript-language-server\",\"args\":[\"--stdio\"]}"
			}
		},
		"gscServer": {
			"command": "/FULL/PATH/TO/-main/.venv/bin/python",
			"args": ["/FULL/PATH/TO/mcp-gsc-main/gsc_server.py"],
			"env": {
				"GSC_CREDENTIALS_PATH": "/FULL/PATH/TO/service_account_credentials.json",
				"GSC_SKIP_OAUTH": "true"
			}
		},
		"azure-cli": {
			"command": "java",
			"args": ["-jar", "~/Downloads/azure-cli-mcp.jar"]
		},
		"mcp-create": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "mcp-create"]
		},
		"mcp-tinybird": {
			"command": "uvx",
			"args": ["mcp-tinybird", "stdio"],
			"env": {
				"TB_API_URL": "<TINYBIRD_API_URL>",
				"TB_ADMIN_TOKEN": "<TINYBIRD_ADMIN_TOKEN>"
			}
		},
		"mcp-tinybird_local": {
			"command": "uv",
			"args": ["--directory", "/path/to/your/mcp-tinybird", "run", "mcp-tinybird", "stdio"]
		},
		"swagger_loader": {
			"command": "swagger-mcp",
			"args": ["--specUrl=<swagger/doc.json_url>"]
		},
		"replicate": {
			"command": "mcp-replicate",
			"env": {
				"REPLICATE_API_TOKEN": "your_token_here"
			}
		},
		"ServiceNow": {
			"command": "/Users/yourusername/dev/servicenow-mcp/.venv/bin/python",
			"args": ["-m", "servicenow_mcp.cli"],
			"env": {
				"SERVICENOW_INSTANCE_URL": "https://your-instance.service-now.com",
				"SERVICENOW_USERNAME": "your-username",
				"SERVICENOW_PASSWORD": "your-password",
				"SERVICENOW_AUTH_TYPE": "basic"
			}
		},
		"deepwebresearch": {
			"command": "mcp-deepwebresearch",
			"args": []
		},
		"unified": {
			"command": "docker",
			"args": ["exec", "-i", "mcp-tool-kit-mcp-server-1", "python", "-u", "mcp_unified_server.py"],
			"useStdio": true
		},
		"zotero": {
			"command": "uvx",
			"args": ["--upgrade", "zotero-mcp"],
			"env": {
				"ZOTERO_LOCAL": "true",
				"ZOTERO_API_KEY": "",
				"ZOTERO_LIBRARY_ID": ""
			}
		},
		"mcp-omnisearch": {
			"command": "wsl.exe",
			"args": ["bash", "-c", "TAVILY_API_KEY=key1 PERPLEXITY_API_KEY=key2 KAGI_API_KEY=key3 JINA_AI_API_KEY=key4 BRAVE_API_KEY=key5 FIRECRAWL_API_KEY=key6 node /path/to/mcp-omnisearch/dist/index.js"]
		},
		"minecraft": {
			"command": "npx",
			"args": ["-y", "github:yuniko-software/minecraft-mcp-server", "--host", "localhost", "--port", "25565", "--username", "ClaudeBot"]
		},
		"chronulus-agents": {
			"command": "uvx",
			"args": ["chronulus-mcp"],
			"env": {
				"CHRONULUS_API_KEY": "<YOUR_CHRONULUS_API_KEY>"
			}
		},
		"fetch": {
			"command": "uvx",
			"args": ["mcp-server-fetch"]
		},
		"spotify": {
			"command": "node",
			"args": ["/full/path/to/spotify-mcp-server/build/spotify-mcp-server.js"]
		},
		"skydeckai-code": {
			"command": "uvx",
			"args": ["skydeckai-code"]
		},
		"agentql": {
			"command": "/path/to/agentql-mcp/dist/index.js",
			"env": {
				"AGENTQL_API_KEY": "YOUR_API_KEY"
			}
		},
		"mcp-server-chart": {
			"command": "npx",
			"args": ["-y", "@antv/mcp-server-chart"]
		},
		"vscode-mcp-server": {
			"command": "npx",
			"args": ["vscode-mcp-server"],
			"env": {}
		},
		"openai-server": {
			"command": "python",
			"args": ["-m", "src.mcp_server_openai.server"],
			"env": {
				"PYTHONPATH": "C:/path/to/your/mcp-server-openai",
				"OPENAI_API_KEY": "your-key-here"
			}
		},
		"argocd-mcp": {
			"command": "npx",
			"args": ["argocd-mcp@latest", "stdio"],
			"env": {
				"ARGOCD_BASE_URL": "<argocd_url>",
				"ARGOCD_API_TOKEN": "<argocd_token>"
			}
		},
		"Bright Data": {
			"command": "npx",
			"args": ["@brightdata/mcp"],
			"env": {
				"API_TOKEN": "<insert-your-api-token-here>",
				"WEB_UNLOCKER_ZONE": "<optional if you want to override the default mcp_unlocker zone name>",
				"BROWSER_AUTH": "<optional if you want to enable remote browser control tools>"
			}
		},
		"deepseek_r1": {
			"command": "node",
			"args": ["/path/to/deepseek-r1-mcp/build/index.js"],
			"env": {
				"DEEPSEEK_API_KEY": "your-api-key"
			}
		},
		"vectorize": {
			"command": "npx",
			"args": ["-y", "@vectorize-io/vectorize-mcp-server@latest"],
			"env": {
				"VECTORIZE_ORG_ID": "your-org-id",
				"VECTORIZE_TOKEN": "your-token",
				"VECTORIZE_PIPELINE_ID": "your-pipeline-id"
			}
		},
		"Jadx MCP Server": {
			"command": "/Users/yourname/jadx-mcp-plugin/venv/bin/python",
			"args": ["/Users/yourname/jadx-mcp-plugin/fastmcp_adapter.py"]
		},
		"x_mcp": {
			"command": "uv",
			"args": ["--directory", "/path/to/x-mcp", "run", "x-mcp"],
			"env": {
				"TWITTER_API_KEY": "your_api_key",
				"TWITTER_API_SECRET": "your_api_secret",
				"TWITTER_ACCESS_TOKEN": "your_access_token",
				"TWITTER_ACCESS_TOKEN_SECRET": "your_access_token_secret"
			}
		},
		"lancedb": {
			"command": "node",
			"args": ["PATH_TO_LANCE_MCP/dist/index.js", "PATH_TO_LOCAL_INDEX_DIR"]
		},
		"dart": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "DART_TOKEN", "mcp/dart"],
			"env": {
				"DART_TOKEN": "dsa_..."
			}
		},
		"mcp-openapi-proxy": {
			"command": "uvx",
			"args": ["mcp-openapi-proxy"],
			"env": {
				"OPENAPI_SPEC_URL": "${OPENAPI_SPEC_URL}",
				"API_KEY": "${API_OPENAPI_KEY}"
			}
		},
		"glama": {
			"command": "uvx",
			"args": ["mcp-openapi-proxy"],
			"env": {
				"OPENAPI_SPEC_URL": "https://glama.ai/api/mcp/openapi.json"
			}
		},
		"flyio": {
			"command": "uvx",
			"args": ["mcp-openapi-proxy"],
			"env": {
				"OPENAPI_SPEC_URL": "https://raw.githubusercontent.com/abhiaagarwal/peristera/refs/heads/main/fly-machines-gen/fixed_spec.json",
				"API_KEY": "<your_flyio_token_here>"
			}
		},
		"render": {
			"command": "node",
			"args": ["/path/to/render-mcp/bin/render-mcp.js", "start"],
			"env": {
				"RENDER_API_KEY": "your-render-api-key"
			},
			"disabled": false,
			"autoApprove": []
		},
		"slack": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "SLACK_BOT_TOKEN=your-slack-bot-token", "-e", "SLACK_TEAM_ID=your-slack-team-id", "ghcr.io/tatsuiman/docker-mcp-notion-server-slack:main"]
		},
		"getzep": {
			"command": "uvx",
			"args": ["mcp-openapi-proxy"],
			"env": {
				"OPENAPI_SPEC_URL": "https://raw.githubusercontent.com/matthewhand/mcp-openapi-proxy/refs/heads/main/examples/getzep.swagger.json",
				"TOOL_WHITELIST": "/sessions",
				"API_KEY": "<your_getzep_api_key>",
				"API_AUTH_TYPE": "Api-Key",
				"TOOL_NAME_PREFIX": "zep_"
			}
		},
		"virustotal": {
			"command": "node",
			"args": ["--experimental-modules", "/absolute/path/to/mcp-virustotal/build/index.js"],
			"env": {
				"VIRUSTOTAL_API_KEY": "your-virustotal-api-key"
			}
		},
		"apisguru": {
			"command": "uvx",
			"args": ["mcp-openapi-proxy"],
			"env": {
				"OPENAPI_SPEC_URL": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/refs/heads/main/APIs/apis.guru/2.2.0/openapi.yaml"
			}
		},
		"netbox": {
			"command": "uvx",
			"args": ["mcp-openapi-proxy"],
			"env": {
				"OPENAPI_SPEC_URL": "https://raw.githubusercontent.com/APIs-guru/openapi-directory/refs/heads/main/APIs/netbox.dev/3.4/openapi.yaml",
				"API_KEY": "${NETBOX_API_KEY}"
			}
		},
		"wolframalpha": {
			"command": "node",
			"args": ["/path/to/wolframalpha-mcp-server/build/index.js"],
			"env": {
				"WOLFRAM_LLM_APP_ID": "your-api-key-here"
			},
			"disabled": false,
			"autoApprove": ["ask_llm", "get_simple_answer", "validate_key"]
		},
		"unity-mcp-server": {
			"command": "node",
			"args": ["path-to-project>\\Library\\PackageCache\\com.quaza.unitymcp@d2b8f1260bca\\mcpServer\\mcpServer\\build\\index.js"],
			"env": {
				"MCP_WEBSOCKET_PORT": "5010"
			}
		},
		"xero": {
			"command": "node",
			"args": ["insert-your-file-path-here/xero-mcp-server/dist/index.js"],
			"env": {
				"XERO_CLIENT_ID": "your_client_id_here",
				"XERO_CLIENT_SECRET": "your_client_secret_here"
			}
		},
		"rootly": {
			"command": "uv",
			"args": ["run", "--directory", "/path/to/rootly-mcp-server", "rootly-mcp-server"],
			"env": {
				"ROOTLY_API_TOKEN": "<YOUR_ROOTLY_API_TOKEN>"
			}
		},
		"postman-runner": {
			"command": "node",
			"args": ["/absolute/path/to/mcp-postman/build/index.js"]
		},
		"jvm-mcp-server": {
			"command": "uv",
			"args": ["--directory", "/path/to/jvm-mcp-server", "run", "jvm-mcp-server"]
		},
		"google-workspace-mcp": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "-v", "/home/aaron/.mcp/google-workspace-mcp:/app/config", "-e", "GOOGLE_CLIENT_ID", "-e", "GOOGLE_CLIENT_SECRET", "-e", "LOG_MODE=strict", "ghcr.io/aaronsb/google-workspace-mcp:latest"],
			"env": {
				"GOOGLE_CLIENT_ID": "123456789012-abcdef3gh1jklmn2pqrs4uvw5xyz6789.apps.googleusercontent.com",
				"GOOGLE_CLIENT_SECRET": "GOCSPX-abcdefghijklmnopqrstuvwxyz1234"
			},
			"autoApprove": [],
			"disabled": false
		},
		"mcp-memory-libsql": {
			"command": "wsl.exe",
			"args": ["bash", "-c", "source ~/.nvm/nvm.sh && LIBSQL_URL=file:/path/to/database.db /home/username/.nvm/versions/node/v20.12.1/bin/npx mcp-memory-libsql"]
		},
		"lara-translate": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "LARA_ACCESS_KEY_ID", "-e", "LARA_ACCESS_KEY_SECRET", "lara-mcp"],
			"env": {
				"LARA_ACCESS_KEY_ID": "<YOUR_ACCESS_KEY_ID>",
				"LARA_ACCESS_KEY_SECRET": "<YOUR_ACCESS_KEY_SECRET>"
			}
		},
		"ida-pro": {
			"command": "node",
			"args": ["path/to/ida-server/dist/index.js"],
			"env": {}
		},
		"game-asset-generator": {
			"command": "node",
			"args": ["/full/path/to/game-asset-mcp/src/index.js"]
		},
		"mcp-guide": {
			"command": "node",
			"args": ["path/to/mcp-guide/dist/index.js"]
		},
		"mcp_square_api": {
			"command": "npx",
			"args": ["square-mcp-server", "start"],
			"env": {
				"ACCESS_TOKEN": "YOUR_SQUARE_ACCESS_TOKEN",
				"SANDBOX": "true"
			}
		},
		"autocad-mcp-server": {
			"command": "path/to/autocad_mcp_server.exe",
			"args": []
		},
		"linear": {
			"command": "npx",
			"args": ["-y", "mcp-server-linearapp"],
			"env": {
				"LINEAR_API_KEY": "your_linear_api_key_here"
			}
		},
		"MCPunk": {
			"command": "/Users/michael/.local/bin/uvx",
			"args": ["--from", "/Users/michael/git/mcpunk", "--no-cache", "mcpunk"]
		},
		"\u6587\u6863 MCP \u670d\u52a1\u5668": {
			"command": "node",
			"args": ["/\u7edd\u5bf9\u8def\u5f84/server.js"],
			"env": {
				"NODE_ENV": "development"
			}
		},
		"salesforce": {
			"command": "uvx",
			"args": ["--from", "salesforce-mcp", "salesforce"],
			"env": {
				"USERNAME": "YOUR_SALESFORCE_USERNAME",
				"PASSWORD": "YOUR_SALESFORCE_PASSWORD",
				"SECURITY_TOKEN": "YOUR_SALESFORCE_SECURITY_TOKEN"
			}
		},
		"3dprint": {
			"command": "mcp-3d-printer-server",
			"env": {
				"PRINTER_HOST": "your_printer_ip",
				"PRINTER_TYPE": "bambu",
				"BAMBU_SERIAL": "your_printer_serial",
				"BAMBU_TOKEN": "your_access_token"
			}
		},
		"radare2": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "-v", "/tmp/data:/data", "r2mcp"]
		},
		"mcp-difyworkflow-server": {
			"command": "mcp-difyworkflow-server",
			"args": ["-base-url", "http://localhost/v1"],
			"env": {
				"DIFY_WORKFLOW_NAME": "workflow-translator\u201c,workflow-genImag",
				"DIFY_API_KEYS": "appkey-xxxxxxxxxxxa,appkey-xxxxxxxxxxxb"
			}
		},
		"phone-mcp": {
			"command": "/usr/local/bin/python",
			"args": ["-m", "phone_mcp"]
		},
		"minimax-mcp-tools": {
			"command": "npx",
			"args": ["minimax-mcp-tools"],
			"env": {
				"MINIMAX_API_KEY": "your-minimax-api-key",
				"MINIMAX_GROUP_ID": "your-minimax-group-id"
			}
		},
		"auth0": {
			"command": "npx",
			"args": ["-y", "@auth0/auth0-mcp-server", "run"],
			"capabilities": ["tools"],
			"env": {
				"DEBUG": "auth0-mcp"
			}
		},
		"mcp-miro": {
			"command": "/path/to/node-or-npx",
			"arguments": ["/path/to/mcp-miro/build/index.js", "--token", "MIRO-OAUTH-KEY"]
		},
		"app-store-connect": {
			"command": "npx",
			"args": ["-y", "@your-org/app-store-connect-mcp-server"],
			"env": {
				"APP_STORE_CONNECT_KEY_ID": "YOUR_KEY_ID",
				"APP_STORE_CONNECT_ISSUER_ID": "YOUR_ISSUER_ID",
				"APP_STORE_CONNECT_P8_PATH": "/path/to/your/auth-key.p8"
			}
		},
		"rijksmuseum-server": {
			"command": "node",
			"args": ["/path/to/rijksmuseum-server/build/index.js"],
			"env": {
				"RIJKSMUSEUM_API_KEY": "your_api_key_here"
			}
		},
		"frida": {
			"command": "frida-mcp"
		},
		"mcp-openai": {
			"command": "npx",
			"args": ["-y", "@mzxrai/mcp-openai@latest"],
			"env": {
				"OPENAI_API_KEY": "your-api-key-here (get one from https://platform.openai.com/api-keys)"
			}
		},
		"deepseek-thinker": {
			"command": "node",
			"args": ["/your-path/deepseek-thinker-mcp/build/index.js"],
			"env": {
				"API_KEY": "<Your API Key>",
				"BASE_URL": "<Your Base URL>"
			}
		},
		"ccxt": {
			"command": "node",
			"args": ["/path/to/mcp-server-ccxt/build/index.js"]
		},
		"travel-planner": {
			"command": "node",
			"args": ["path/to/dist/index.js"],
			"env": {
				"GOOGLE_MAPS_API_KEY": "your_google_maps_api_key"
			}
		},
		"cursor-mcp-installer": {
			"command": "npx",
			"args": ["@yumia-pretty/cursor-mcp-installer"]
		},
		"ghost-mcp": {
			"command": "npx",
			"args": ["-y", "@fanyangmeng/ghost-mcp"],
			"env": {
				"GHOST_API_URL": "https://yourblog.com",
				"GHOST_ADMIN_API_KEY": "your_admin_api_key",
				"GHOST_API_VERSION": "v5.0"
			}
		},
		"piapi": {
			"command": "node",
			"args": ["/absolute/path/to/piapi-mcp-server/dist/index.js"],
			"env": {
				"PIAPI_API_KEY": "your_api_key_here"
			}
		},
		"pdf-tools": {
			"command": "uv",
			"args": ["--directory", "PATH_TO\\mcp-pdf-tools", "run", "pdf-tools"]
		},
		"llms-txt-explorer": {
			"command": "npx",
			"args": ["-y", "@thedaviddias/mcp-llms-txt-explorer"]
		},
		"gtasks": {
			"command": "/opt/homebrew/bin/node",
			"args": ["{ABSOLUTE PATH TO FILE HERE}/dist/index.js"]
		},
		"roam-research": {
			"command": "node",
			"args": ["/path/to/roam-research-mcp/build/index.js"],
			"env": {
				"ROAM_API_TOKEN": "your-api-token",
				"ROAM_GRAPH_NAME": "your-graph-name",
				"MEMORIES_TAG": "#[[LLM/Memories]]"
			}
		},
		"azure-ai-agent": {
			"command": "C:\\path\\to\\.venv\\Scripts\\python.exe",
			"args": ["C:\\path\\to\\azure_ai_agent_service_server.py"],
			"env": {
				"PROJECT_CONNECTION_STRING": "your-project-connection-string",
				"MODEL_DEPLOYMENT_NAME": "your-model-deployment-name",
				"AI_SEARCH_CONNECTION_NAME": "your-search-connection-name",
				"BING_CONNECTION_NAME": "your-bing-connection-name",
				"AI_SEARCH_INDEX_NAME": "your-index-name"
			}
		},
		"azure-search": {
			"command": "C:\\path\\to\\.venv\\Scripts\\python.exe",
			"args": ["C:\\path\\to\\azure_search_server.py"],
			"env": {
				"AZURE_SEARCH_SERVICE_ENDPOINT": "https://your-service-name.search.windows.net",
				"AZURE_SEARCH_INDEX_NAME": "your-index-name",
				"AZURE_SEARCH_API_KEY": "your-api-key"
			}
		},
		"binary_ninja_mcp": {
			"command": "/ABSOLUTE/PATH/TO/binary_ninja_mcp/.venv/bin/python",
			"args": ["/ABSOLUTE/PATH/TO/binary_ninja_mcp/bridge/binja_mcp_bridge.py"]
		},
		"playcanvas": {
			"command": "npx",
			"args": ["tsx", "/path/to/mcp-editor/src/server.ts"],
			"env": {
				"PORT": "52000"
			}
		},
		"excalidraw": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "mcp/excalidraw"],
			"env": {
				"LOG_LEVEL": "info",
				"DEBUG": "false"
			}
		},
		"alibaba-cloud-ops-mcp-server": {
			"timeout": 600,
			"command": "uvx",
			"args": ["alibaba-cloud-ops-mcp-server@latest"],
			"env": {
				"ALIBABA_CLOUD_ACCESS_KEY_ID": "Your Access Key ID",
				"ALIBABA_CLOUD_ACCESS_KEY_SECRET": "Your Access Key SECRET"
			}
		},
		"github-chat": {
			"command": "/absolute/path/to/bin/github-agentic-chat-mcp"
		},
		"openrouterai": {
			"command": "npx",
			"args": ["@mcpservers/openrouterai"],
			"env": {
				"OPENROUTER_API_KEY": "your-api-key-here",
				"OPENROUTER_DEFAULT_MODEL": "optional-default-model"
			}
		},
		"ticktick": {
			"command": "<absolute path to uv>",
			"args": ["run", "--directory", "<absolute path to ticktick-mcp directory>", "-m", "ticktick_mcp.cli", "run"]
		},
		"bitcoin-mcp": {
			"command": "npx",
			"args": ["-y", "bitcoin-mcp@latest"]
		},
		"neo4j": {
			"command": "npx",
			"args": ["@alanse/mcp-neo4j-server"],
			"env": {
				"NEO4J_URI": "bolt://localhost:7687",
				"NEO4J_USERNAME": "neo4j",
				"NEO4J_PASSWORD": "your-password"
			}
		},
		"needle_mcp": {
			"command": "uv",
			"args": ["--directory", "/path/to/needle-mcp", "run", "needle-mcp"],
			"env": {
				"NEEDLE_API_KEY": "your_needle_api_key"
			}
		},
		"multi-model-advisor": {
			"command": "node",
			"args": ["/absolute/path/to/multi-ai-advisor-mcp/build/index.js"]
		},
		"aws-security": {
			"command": "/path/to/aws-security-mcp/run_aws_security.sh"
		},
		"lark-mcp": {
			"command": "npx",
			"args": ["-y", "@larksuiteoapi/lark-mcp", "mcp", "-a", "<your_app_id>", "-s", "<your_app_secret>", "-u", "<your_user_token>"]
		},
		"bing-search": {
			"command": "uvx",
			"args": ["/path/to/your/bing-search-mcp"],
			"env": {
				"BING_API_KEY": "your-bing-api-key"
			}
		},
		"pocketbase-server": {
			"command": "node",
			"args": ["build/index.js"],
			"env": {
				"POCKETBASE_URL": "http://127.0.0.1:8090",
				"POCKETBASE_ADMIN_EMAIL": "admin@example.com",
				"POCKETBASE_ADMIN_PASSWORD": "admin_password"
			},
			"disabled": false,
			"autoApprove": ["create_record", "create_collection"]
		},
		"mcp-server-drupal": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "ghcr.io/omedia/mcp-server-drupal", "--drupal-url=__DRUPAL_BASE_URL_"],
			"env": {}
		},
		"rember": {
			"command": "npx",
			"args": ["-y", "@getrember/mcp", "--api-key=YOUR_REMBER_API_KEY"]
		},
		"tree_sitter": {
			"command": "uvx",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/YOUR/PROJECT", "mcp-server-tree-sitter"]
		},
		"finance_openapi": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "OPENAPI_JSON_DOCS_URL=https://api.finance.com/openapi.json", "-e", "API_REQUEST_BASE_URL=https://api.finance.staging.com", "-e", "MCP_API_PREFIX=finance", "-e", "GLOBAL_TOOL_PROMPT='Access to insights apis for ACME Financial Services abc.com .'", "buryhuang/mcp-server-any-openapi:latest"]
		},
		"healthcare_openapi": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "OPENAPI_JSON_DOCS_URL=https://api.healthcare.com/openapi.json", "-e", "MCP_API_PREFIX=healthcare", "-e", "GLOBAL_TOOL_PROMPT='Access to insights apis for Healthcare API services efg.com .", "buryhuang/mcp-server-any-openapi:latest"]
		},
		"any_openapi": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "OPENAPI_JSON_DOCS_URL=https://api.example.com/openapi.json", "-e", "MCP_API_PREFIX=finance", "-e", "GLOBAL_TOOL_PROMPT='Access to insights apis for ACME Financial Services abc.com .", "buryhuang/mcp-server-any-openapi:latest"]
		},
		"alphavantage": {
			"command": "docker",
			"args": ["run", "-i", "-e", "ALPHA_VANTAGE_API_KEY", "mcp/alpha-vantage"],
			"env": {
				"ALPHA_VANTAGE_API_KEY": "REPLACE_API_KEY"
			}
		},
		"alpha-vantage-mcp": {
			"args": ["--directory", "/Users/{INSERT_USER}/YOUR/PATH/TO/alpha-vantage-mcp", "run", "alpha-vantage-mcp"],
			"command": "uv",
			"env": {
				"ALPHA_VANTAGE_API_KEY": "<insert api key>"
			}
		},
		"metoro-mcp-server": {
			"command": "<your path to Metoro MCP server go executable>/metoro-mcp-server",
			"args": [],
			"env": {
				"METORO_AUTH_TOKEN": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjdXN0b21lcklkIjoiOThlZDU1M2QtYzY4ZC00MDRhLWFhZjItNDM2ODllNWJiMGUzIiwiZW1haWwiOiJ0ZXN0QGNocmlzYmF0dGFyYmVlLmNvbSIsImV4cCI6MTgyMTI0NzIzN30.7G6alDpcZh_OThYj293Jce5rjeOBqAhOlANR_Fl5auw",
				"METORO_API_URL": "https://demo.us-east.metoro.io"
			}
		},
		"shadcn-ui-server": {
			"command": "npx",
			"args": ["-y", "shadcn-ui-mcp-server"]
		},
		"AUM5itYnoMcxPiU2vFa3Z": {
			"name": "Excel\u64cd\u4f5c",
			"type": "stdio",
			"description": "",
			"isActive": true,
			"command": "java",
			"args": ["-Dspring.ai.mcp.server.stdio=true", "-Dspring.main.web-application-type=none", "-Dfile.encoding=UTF-8", "-jar", "{your_path}/mcp-excel-server-0.0.1-SNAPSHOT.jar"]
		},
		"shopify": {
			"command": "npx",
			"args": ["shopify-mcp", "--accessToken", "<YOUR_ACCESS_TOKEN>", "--domain", "<YOUR_SHOP>.myshopify.com"]
		},
		"homeassistant": {
			"command": "node",
			"args": ["/path/to/homeassistant-mcp/homeassistant-server/build/index.js"],
			"env": {
				"HA_URL": "http://your-homeassistant-url:8123",
				"HA_TOKEN": "your-long-lived-access-token"
			}
		},
		"heroku": {
			"command": "npx",
			"args": ["-y", "@heroku/mcp-server"],
			"env": {
				"HEROKU_API_KEY": "<YOUR_HEROKU_AUTH_TOKEN>"
			}
		},
		"contentful": {
			"command": "npx",
			"args": ["-y", "@ivotoby/contentful-management-mcp-server"],
			"env": {
				"CONTENTFUL_MANAGEMENT_ACCESS_TOKEN": "<Your CMA token>"
			}
		},
		"backlog": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "BACKLOG_API_KEY=YOUR_API_KEY_HERE", "-e", "BACKLOG_SPACE_ID=YOUR_SPACE_ID_HERE", "mcp/backlog"],
			"env": {
				"BACKLOG_API_KEY": "YOUR_API_KEY_HERE",
				"BACKLOG_SPACE_ID": "YOUR_SPACE_ID_HERE"
			}
		},
		"Goodnews": {
			"command": "<absolute-path-to-bin>/uv",
			"args": ["--directory", "<absolute-path-to-cloned-repo>/mcp-goodnews/src/mcp_goodnews", "run", "server.py"],
			"env": {
				"NEWS_API_KEY": "<newsapi-api-key>",
				"COHERE_API_KEY": "<cohere-api-key>"
			}
		},
		"adx": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "-e", "ADX_CLUSTER_URL", "-e", "ADX_DATABASE", "-e", "AZURE_TENANT_ID", "-e", "AZURE_CLIENT_ID", "-e", "ADX_TOKEN_FILE_PATH", "adx-mcp-server"],
			"env": {
				"ADX_CLUSTER_URL": "https://yourcluster.region.kusto.windows.net",
				"ADX_DATABASE": "your_database",
				"AZURE_TENANT_ID": "your_tenant_id",
				"AZURE_CLIENT_ID": "your_client_id",
				"ADX_TOKEN_FILE_PATH": "/var/run/secrets/azure/tokens/azure-identity-token"
			}
		},
		"iceberg-mcp": {
			"command": "PATH-TO-BINARY/iceberg-mcp",
			"env": {
				"CATALOG_KIND": "glue",
				"AWS_CONFIG_FILE": "/Users/{your_username}/.aws/config",
				"AWS_SHARED_CREDENTIALS_FILE": "/Users/{your_username}/.aws/credentials",
				"PROFILE_NAME": "default",
				"WAREHOUSE": "s3://{bucket_name}/{namespace}/{table}",
				"LOG_LEVEL": "info"
			}
		},
		"storm": {
			"command": "sh",
			"args": ["/Users/sigridjineth/Desktop/work/storm-mcp-server/scripts/run.sh"]
		},
		"bankless": {
			"command": "npx",
			"args": ["@bankless/onchain-mcp"],
			"env": {
				"BANKLESS_API_TOKEN": "your_api_token_here"
			}
		},
		"dicom": {
			"command": "uv",
			"args": ["tool", "dicom-mcp", "/path/to/your_config.yaml"]
		},
		"arxiv-mcp-server": {
			"command": "uv",
			"args": ["--directory", "path/to/cloned/dicom-mcp", "run", "dicom-mcp", "/path/to/your_config.yaml"]
		},
		"crewai_enterprise_server": {
			"command": "uv",
			"args": ["run", "--with", "mcp[cli]", "mcp", "run", "<filepath of cloned repo>", "/crewai_enterprise_server.py"],
			"env": {
				"MCP_CREWAI_ENTERPRISE_SERVER_URL": "<>",
				"MCP_CREWAI_ENTERPRISE_BEARER_TOKEN": "<>"
			}
		},
		"deepsrt-mcp": {
			"command": "node",
			"args": ["/path/to/deepsrt-mcp/build/index.js"]
		},
		"minimax-mcp-js": {
			"command": "npx",
			"args": ["-y", "minimax-mcp-js"],
			"env": {
				"MINIMAX_API_HOST": "<https://api.minimaxi.chat|https://api.minimax.chat>",
				"MINIMAX_API_KEY": "<your-api-key-here>",
				"MINIMAX_MCP_BASE_PATH": "<local-output-dir-path, such as /User/xxx/Desktop>",
				"MINIMAX_RESOURCE_MODE": "<optional, [url|local], url is default, audio/image/video are downloaded locally or provided in URL format>"
			}
		},
		"prompts": {
			"transport": "http",
			"url": "http://localhost:3003"
		},
		"mcp-server-apache-airflow": {
			"command": "uv",
			"args": ["--directory", "/path/to/mcp-server-apache-airflow", "run", "mcp-server-apache-airflow"],
			"env": {
				"AIRFLOW_HOST": "https://your-airflow-host",
				"AIRFLOW_USERNAME": "your-username",
				"AIRFLOW_PASSWORD": "your-password"
			}
		},
		"academic-search": {
			"command": "uv",
			"args": ["run ", "/path/to/server/server.py"],
			"env": {
				"SEMANTIC_SCHOLAR_API_KEY": "your_key_here",
				"CROSSREF_API_KEY": "your_key_here"
			}
		},
		"feishu-mcp": {
			"command": "npx",
			"args": ["-y", "feishu-mcp", "--stdio"],
			"env": {
				"FEISHU_APP_ID": "<\u4f60\u7684\u98de\u4e66\u5e94\u7528ID>",
				"FEISHU_APP_SECRET": "<\u4f60\u7684\u98de\u4e66\u5e94\u7528\u5bc6\u94a5>"
			}
		},
		"autocad-lisp": {
			"command": "path\\to\\autocad-mcp\\venv\\Scripts\\python.exe",
			"args": ["path\\to\\autocad-mcp\\server_lisp.py"]
		},
		"ccxt-mcp": {
			"command": "npx",
			"args": ["-y", "@lazydino/ccxt-mcp", "--config", "/path/to/ccxt-accounts.json"]
		},
		"otelcol": {
			"url": "http://localhost:3001/sse"
		},
		"paperless": {
			"command": "npx",
			"args": ["paperless-mcp", "http://your-paperless-instance:8000", "your-api-token"]
		},
		"mcp-rtfm": {
			"command": "node",
			"args": ["<path-to-mcp-rtfm>/build/index.js"],
			"disabled": false,
			"alwaysAllow": []
		},
		"openrpc": {
			"command": "npx",
			"args": ["-y", "openrpc-mcp-server"]
		},
		"mcp_tool_chainer": {
			"command": "node",
			"args": ["/path/to/mcp-tool-chainer/dist/index.js", "`claude_desktop_config.json` or `mcp.json`"],
			"env": {}
		},
		"code-analyzer": {
			"command": "python",
			"args": ["-m", "mcp_code_analyzer", "--analyze-paths", "C:\\Projects\\path1"],
			"type": "module"
		},
		"globalShortcut": "Alt+Space",
		"iTunesControlServer": {
			"command": "uvx",
			"args": ["-n", "mcp-applemusic"]
		},
		"chess": {
			"command": "uv",
			"args": ["--directory", "<full path to chess-mcp directory>", "run", "src/chess_mcp/main.py"]
		},
		"ns-server": {
			"command": "node",
			"args": ["/path/to/ns-server/build/index.js"],
			"env": {
				"NS_API_KEY": "your_api_key_here"
			}
		},
		"steel-puppeteer": {
			"command": "node",
			"args": ["path/to/steel-puppeteer/dist/index.js"],
			"env": {
				"STEEL_LOCAL": "false",
				"STEEL_API_KEY": "your_api_key_here"
			}
		},
		"interactive": {
			"command": "npx",
			"args": ["-y", "interactive-mcp", "-t", "30"]
		},
		"kagi-server": {
			"command": "/path/to/kagi-server/build/index.js",
			"env": {
				"KAGI_API_KEY": "your_api_key_here"
			}
		},
		"things": {
			"command": "uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/PARENT/FOLDER/things-mcp", "run", "things_server.py"]
		},
		"rust-docs": {
			"command": "node",
			"args": ["/absolute/path/to/index.js"]
		},
		"netbird": {
			"command": "mcp-netbird",
			"args": [],
			"env": {
				"NETBIRD_API_TOKEN": "<your-api-token>"
			}
		},
		"web-browser-mcp-server": {
			"command": "uv",
			"args": ["--directory", "path/to/cloned/web-browser-mcp-server", "run", "web-browser-mcp-server"],
			"env": {
				"REQUEST_TIMEOUT": "30"
			}
		},
		"MUST_USE_summarization": {
			"command": "node",
			"args": ["path/to/summarization-functions/build/index.js"],
			"env": {
				"PROVIDER": "ANTHROPIC",
				"API_KEY": "your-api-key",
				"MODEL_ID": "claude-3-5-sonnet-20241022",
				"MCP_WORKING_DIR": "default_working_directory"
			}
		},
		"snowflake": {
			"command": "/usr/bin/python3",
			"args": ["/path/to/snowflake-mcp/server.py"]
		},
		"yt-dlp": {
			"command": "npx",
			"args": ["-y", "@kevinwatt/yt-dlp-mcp"]
		},
		"tmdb": {
			"command": "/full/path/to/dist/index.js",
			"env": {
				"TMDB_API_KEY": "your_api_key_here"
			}
		},
		"last9": {
			"command": "/opt/homebrew/bin/last9-mcp",
			"env": {
				"LAST9_AUTH_TOKEN": "<auth_token>",
				"LAST9_BASE_URL": "<last9_otlp_host>",
				"LAST9_REFRESH_TOKEN": "<refresh_token>"
			}
		},
		"mcp-communicator-telegram": {
			"command": "node",
			"args": ["path/to/mcp-communicator-telegram/build/index.js"],
			"env": {
				"TELEGRAM_TOKEN": "your_bot_token_here",
				"CHAT_ID": "your_chat_id_here"
			}
		},
		"1panel-mcp": {
			"command": "npx",
			"args": ["-y", "1panel-mcp"],
			"env": {
				"ONEPANEL_BASE_URL": "<your 1Panel base URL>",
				"ONEPANEL_API_KEY": "<your 1Panel API key>"
			}
		},
		"baseline-mcp-server": {
			"command": "docker",
			"args": ["run", "-i", "baseline-mcp-server:latest"]
		},
		"zerolib-email": {
			"command": "docker",
			"args": ["run", "-it", "ghcr.io/ai-zerolab/mcp-email-server:latest"]
		},
		"raindrop": {
			"command": "/path/to/raindrop-mcp-server",
			"env": {
				"RAINDROP_TOKEN": "your_access_token_here"
			}
		},
		"jotai-mcp-server": {
			"command": "deno",
			"args": ["run", "--allow-env", "--allow-net", "npm:jotai-mcp-server"],
			"env": {
				"GITHUB_PERSONAL_ACCESS_TOKEN": "your_github_token"
			}
		},
		"nasa-mcp": {
			"command": "npx",
			"args": ["-y", "@programcomputer/nasa-mcp-server@latest"],
			"env": {
				"NASA_API_KEY": "your-api-key"
			}
		},
		"hacker-news": {
			"command": "node",
			"args": ["/path/to/hn-server/build/index.js"]
		},
		"mcp-hn": {
			"command": "uvx",
			"args": ["mcp-hn"]
		},
		"sonarqube": {
			"command": "node",
			"args": ["/path/to/sonarqube-mcp-server/dist/index.js"],
			"env": {
				"SONARQUBE_TOKEN": "your-sonarqube-token"
			}
		},
		"solana-dev": {
			"command": "node",
			"args": ["<full-path-to-repo>/dist/index.js"]
		},
		"MCP-timeserver": {
			"command": "uvx",
			"args": ["MCP-timeserver"]
		},
		"anilist": {
			"command": "npx",
			"args": ["-y", "anilist-mcp"],
			"env": {
				"ANILIST_TOKEN": "your_api_token"
			}
		},
		"quran-api": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "--init", "-e", "API_KEY=your_api_key_if_needed", "-e", "VERBOSE_MODE=true", "quran-mcp-server"],
			"disabled": false,
			"autoApprove": []
		},
		"fhir": {
			"command": "/path/to/@flexpa/mcp-fhir/build/index.js"
		},
		"env": {
			"TAVILY_API_KEY": "your_api_key_here",
			"HTTP_PROXY": "http://your-proxy:port",
			"HTTPS_PROXY": "http://your-proxy:port"
		},
		"mcp-server-flomo": {
			"command": "npx",
			"args": ["-y", "@chatmcp/mcp-server-flomo"],
			"env": {
				"FLOMO_API_URL": "https://flomoapp.com/iwh/xxx/xxx/"
			}
		},
		"algorand-mcp": {
			"command": "node",
			"args": ["PATH_ON_YOUR_MACHINE/Claude/mcp-servers/algorand-mcp/packages/server/dist/index.js"],
			"env": {
				"ALGORAND_NETWORK": "testnet",
				"ALGORAND_ALGOD_API": "https://testnet-api.algonode.cloud/v2",
				"ALGORAND_ALGOD": "https://testnet-api.algonode.cloud",
				"ALGORAND_INDEXER_API": "https://testnet-idx.algonode.cloud/v2",
				"ALGORAND_INDEXER": "https://testnet-idx.algonode.cloud",
				"ALGORAND_ALGOD_PORT": "",
				"ALGORAND_INDEXER_PORT": "",
				"ALGORAND_TOKEN": "",
				"ALGORAND_AGENT_WALLET": "problem aim online jaguar upper oil flight stumble mystery aerobic toy avoid file tomato moment exclude witness guard lab opera crunch noodle dune abandon broccoli",
				"NFD_API_URL": "https://api.nf.domains",
				"NFD_API_KEY": "",
				"TINYMAN_ACTIVE": "false",
				"ULTRADE_ACTIVE": "false",
				"ULTRADE_API_URL": "https://api.ultrade.io",
				"VESTIGE_ACTIVE": "false",
				"VESTIGE_API_URL": "https://api.vestigelabs.org",
				"VESTIGE_API_KEY": "",
				"ITEMS_PER_PAGE": "10"
			}
		},
		"voice-call": {
			"command": "node",
			"args": ["/path/to/your/mcp-new/dist/start-all.cjs"],
			"env": {
				"TWILIO_ACCOUNT_SID": "your_account_sid",
				"TWILIO_AUTH_TOKEN": "your_auth_token",
				"TWILIO_NUMBER": "your_e.164_format_number",
				"OPENAI_API_KEY": "your_openai_api_key",
				"NGROK_AUTHTOKEN": "your_ngrok_authtoken"
			}
		},
		"mcp-memory-bank": {
			"command": "uvx",
			"args": ["--from", "git+https://github.com/ipospelov/mcp-memory-bank", "mcp_memory_bank"]
		},
		"memory-bank": {
			"command": "python",
			"args": ["src/mcp_memory_bank/main.py"]
		},
		"chroma": {
			"command": "uv",
			"args": ["--directory", "C:/MCP/server/community/chroma", "run", "chroma"]
		},
		"modes": {
			"command": "node",
			"args": ["/path/to/modes-mcp-server/build/index.js"],
			"env": {
				"MODES_CONFIG_PATH": "/path/to/custom/modes.json"
			},
			"disabled": false,
			"alwaysAllow": []
		},
		"Votars MCP": {
			"type": "sse",
			"url": "http://0.0.0.0:8080/sse",
			"headers": {
				"Authorization": "Bearer <your-api-key>"
			}
		},
		"Votars MCP Stdio": {
			"type": "stdio",
			"command": "votars-mcp",
			"args": ["-t", "stdio"],
			"env": {
				"VOTARS_API_KEY": "<your-api-key>"
			}
		},
		"ssh": {
			"command": "node",
			"args": ["%APPDATA%/npm/node_modules/mcp-ssh/dist/server.js"],
			"env": {
				"SSH_PORT": "8889",
				"SSH_LOG_LEVEL": "info"
			}
		},
		"ms365": {
			"command": "npx",
			"args": ["-y", "@softeria/ms-365-mcp-server"]
		},
		"matlab-server": {
			"command": "node",
			"args": ["/path/to/matlab-server/build/index.js"],
			"env": {
				"MATLAB_PATH": "/path/to/matlab/executable"
			},
			"disabled": false,
			"autoApprove": []
		},
		"opendal": {
			"command": "uvx",
			"args": ["mcp-server-opendal"],
			"env": {
				"YOUR_ENV_VAR": "YOUR_ENV_VALUE"
			}
		},
		"openai-assistant": {
			"command": "python",
			"args": ["-m", "mcp_simple_openai_assistant"],
			"env": {
				"OPENAI_API_KEY": "your-api-key-here"
			}
		},
		"tung-shing": {
			"command": "npx",
			"args": ["-y", "mcp-tung-shing@latest"]
		},
		"mentor": {
			"command": "node",
			"args": ["build/index.js"],
			"env": {
				"DEEPSEEK_API_KEY": "your_api_key",
				"DEEPSEEK_MODEL": "deepseek-reasoner",
				"DEEPSEEK_MAX_TOKENS": "8192",
				"DEEPSEEK_MAX_RETRIES": "3",
				"DEEPSEEK_TIMEOUT": "30000"
			}
		},
		"kospi-kosdaq": {
			"command": "uvx",
			"args": ["kospi_kosdaq_stock_server"]
		},
		"github-actions": {
			"command": "node",
			"args": ["<path-to-mcp-server>/dist/index.js"],
			"env": {
				"GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
			}
		},
		"kong-konnect": {
			"command": "node",
			"args": ["/absolute/path/to/mcp-konnect/build/index.js"],
			"env": {
				"KONNECT_ACCESS_TOKEN": "kpat_api_key_here",
				"KONNECT_REGION": "us"
			}
		},
		"google-cloud-mcp": {
			"command": "node",
			"args": ["/Users/foo/code/google-cloud-mcp/dist/index.js"],
			"env": {
				"GOOGLE_APPLICATION_CREDENTIALS": "/Users/foo/.config/gcloud/application_default_credentials.json"
			}
		},
		"mcp-google-calendar": {
			"command": "npx",
			"args": ["-y", "mcp-google-calendar"],
			"env": {
				"CREDENTIALS_PATH": "/path/to/your/credentials.json"
			}
		},
		"flightradar24-server": {
			"command": "node",
			"args": ["/Users/<username>/<FULL_PATH...>/flightradar24-mcp-server/dist/index.js"],
			"env": {
				"FR24_API_KEY": "your_api_key_here",
				"FR24_API_URL": "https://fr24api.flightradar24.com"
			}
		},
		"UNS_MCP": {
			"command": "ABSOLUTE/PATH/TO/.local/bin/uv",
			"args": ["--directory", "ABSOLUTE/PATH/TO/YOUR-UNS-MCP-REPO/uns_mcp", "run", "server.py"]
		},
		"shell-command": {
			"command": "npx",
			"args": ["-y", "shell-command-mcp"],
			"env": {
				"ALLOWED_COMMANDS": "cat,ls,echo"
			}
		},
		"mcp-security-audit": {
			"command": "npx",
			"args": ["-y", "/path/to/mcp-security-audit/build/index.js"]
		},
		"sqlite": {
			"command": "node",
			"args": ["/absolute/path/to/mcp-database-server/dist/src/index.js", "/path/to/your/database.db"]
		},
		"sqlserver": {
			"command": "node",
			"args": ["/absolute/path/to/mcp-database-server/dist/src/index.js", "--sqlserver", "--server", "your-server-name", "--database", "your-database-name", "--user", "your-username", "--password", "your-password"]
		},
		"postgresql": {
			"command": "node",
			"args": ["/absolute/path/to/mcp-database-server/dist/src/index.js", "--postgresql", "--host", "your-host-name", "--database", "your-database-name", "--user", "your-username", "--password", "your-password"]
		},
		"video-editor": {
			"command": "uv",
			"args": ["run", "video-editor"]
		},
		"database-mcp": {
			"command": "uvx",
			"args": ["database-mcp"],
			"env": {
				"DB_CONFIGS": "[{\"id\":\"pg_main\",\"db_type\":\"pg\",\"configuration\":{\"host\":\"localhost\",\"port\":5432,\"user\":\"user\",\"password\":\"pw\",\"dbname\":\"postgres\"},\"description\":\"PostgreSQL Database\"},{\"id\":\"mysql_data\",\"db_type\":\"mysql\",\"configuration\":{\"host\":\"localhost\",\"port\":3306,\"user\":\"root\",\"password\":\"pass\",\"database\":\"mysql\"},\"description\":\"MySQL Database\"}]"
			},
			"disabled": true,
			"autoApprove": []
		},
		"database": {
			"command": "python",
			"args": ["-m", "database_mcp", "--repository", "path/to/git/repo"],
			"env": {
				"DB_TYPE": "pg",
				"DB_CONFIG": "{\"host\":\"localhost\",\"port\":5432,\"user\":\"user\",\"password\":\"pw\",\"dbname\":\"dbname\"}"
			}
		},
		"jinaai-reader": {
			"command": "wsl.exe",
			"args": ["bash", "-c", "JINAAI_API_KEY=your-jinaai-api-key npx mcp-jinaai-reader"]
		},
		"MCP-wolfram-alpha": {
			"command": "uv",
			"args": ["--directory", "/full/path/to/MCP-wolfram-alpha", "run", "MCP-wolfram-alpha"],
			"env": {
				"WOLFRAM_API_KEY": "your-app-id"
			}
		},
		"wealthy-mcp": {
			"command": "<path to downloaded/installed binary>",
			"args": ["addr=localhost:8006"]
		},
		"datahub": {
			"command": "uvx",
			"args": ["mcp-server-datahub"],
			"env": {
				"DATAHUB_GMS_URL": "<your-datahub-url>",
				"DATAHUB_GMS_TOKEN": "<your-datahub-token>"
			}
		},
		"bear": {
			"command": "docker",
			"args": ["run", "-v", "/Users/[YOUR_USER_NAME]/Library/Group Containers/9K33E3U3T4.net.shinyfrog.bear/Application Data:/app/db", "-i", "akseyh/bear-mcp-server"]
		},
		"nostr": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/nostr-mcp-server/build/index.js"]
		},
		"replicate-flux-mcp": {
			"command": "npx",
			"args": ["-y", "replicate-flux-mcp"],
			"env": {
				"REPLICATE_API_TOKEN": "YOUR TOKEN"
			}
		},
		"image-generation-mcp": {
			"command": "npx",
			"args": ["/Users/{USERNAME}/{PATH_TO}/replicate-flux-mcp/build/index.js"],
			"env": {
				"REPLICATE_API_TOKEN": "YOUR REPLICATE API TOKEN"
			}
		},
		"strapi": {
			"command": "npx",
			"args": ["-y", "@bschauer/strapi-mcp-server@2.5.0"]
		},
		"datadog": {
			"command": "npx",
			"args": ["datadog-mcp-server", "--apiKey", "<YOUR_API_KEY>", "--appKey", "<YOUR_APP_KEY>", "--site", "<YOUR_DD_SITE>", "--logsSite", "<YOUR_LOGS_SITE>", "--metricsSite", "<YOUR_METRICS_SITE>"]
		},
		"gotoHuman": {
			"command": "node",
			"args": ["/<absolute-path>/build/index.js"],
			"env": {
				"GOTOHUMAN_API_KEY": "your-api-key"
			}
		},
		"ifly-workflow-mcp-server": {
			"command": "uvx",
			"args": ["--from", "git+https://github.com/iflytek/ifly-workflow-mcp-server", "ifly_workflow_mcp_server"],
			"env": {
				"CONFIG_PATH": "/Users/hygao1024/Projects/config.yaml"
			}
		},
		"puppeteer": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-puppeteer"]
		},
		"serper-search-server": {
			"command": "/path/to/serper-search-server/build/index.js",
			"env": {
				"SERPER_API_KEY": "your_api_key_here"
			}
		},
		"gitee": {
			"command": "mcp-gitee",
			"env": {
				"GITEE_API_BASE": "https://gitee.com/api/v5",
				"GITEE_ACCESS_TOKEN": "<your personal access token>"
			}
		},
		"chrome-debug": {
			"command": "node",
			"args": ["path/to/chrome-debug-mcp/build/index.js"],
			"disabled": false,
			"alwaysAllow": []
		},
		"mcp-crypto-price": {
			"command": "npx",
			"args": ["-y", "mcp-crypto-price"],
			"env": {
				"COINCAP_API_KEY": "YOUR_API_KEY_HERE"
			}
		},
		"aistor": {
			"command": "podman",
			"args": ["run", "-i", "--rm", "-v", "/Users/YOUR_USERNAME/Downloads:/Downloads", "-e", "MINIO_ENDPOINT=REPLACE_WITH_ENDPOINT", "-e", "MINIO_ACCESS_KEY=REPLACE_WITH_ACCESS_KEY", "-e", "MINIO_SECRET_KEY=REPLACE_WITH_SECRET_KEY", "-e", "MINIO_USE_SSL=true", "quay.io/minio/aistor/mcp-server-aistor:latest", "--allowed-directories", "/Downloads", "--allow-write", "--allow-delete", "--allow-admin"]
		},
		"wordpress-mcp": {
			"command": "npx",
			"args": ["@automattic/mcp-wordpress-remote"],
			"env": {
				"WP_API_URL": "https://your-wordpress-site.com",
				"WP_API_USERNAME": "your-username",
				"WP_API_PASSWORD": "your-password",
				"WOO_CUSTOMER_KEY": "your-woo-customer-key",
				"WOO_CUSTOMER_SECRET": "your-woo-customer-secret",
				"LOG_FILE": "optional full path to the log file"
			}
		},
		"bnbchain-mcp": {
			"url": "http://localhost:3001/sse",
			"env": {
				"PRIVATE_KEY": "your_private_key_here"
			}
		},
		"atom-of-thoughts": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/PARENT/FOLDER/atom-of-thoughts/build/index.js"],
			"disabled": false,
			"autoApprove": []
		},
		"gateway_url": "http://localhost:8808",
		"esa-mcp-server": {
			"command": "npx",
			"args": ["-y", "esa-mcp-server@latest"],
			"env": {
				"ESA_API_KEY": "your api key here",
				"DEFAULT_ESA_TEAM": "your default esa team"
			}
		},
		"kb-server": {
			"command": "uvx",
			"args": ["kb-mcp-server@0.2.6", "--embeddings", "/path/to/knowledge_base", "--host", "localhost", "--port", "8000"],
			"cwd": "/path/to/working/directory"
		},
		"redis": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "mcp/redis", "redis://host.docker.internal:6379"]
		},
		"stata-mcp": {
			"command": "/path/to/mcp-proxy",
			"args": ["http://127.0.0.1:4000/mcp"]
		},
		"OpenAPI Schema": {
			"command": "npx",
			"args": ["-y", "mcp-openapi-schema", "/ABSOLUTE/PATH/TO/openapi.yaml"]
		},
		"nrepl-mcp-server": {
			"command": "npx",
			"args": ["nrepl-mcp-server"],
			"disabled": false,
			"autoApprove": []
		},
		"splunk": {
			"command": "poetry",
			"env": {
				"SPLUNK_HOST": "your_splunk_host",
				"SPLUNK_PORT": "8089",
				"SPLUNK_USERNAME": "your_username",
				"SPLUNK_PASSWORD": "your_password",
				"SPLUNK_SCHEME": "https",
				"VERIFY_SSL": "false",
				"FASTMCP_PORT": "8001",
				"DEBUG": "true"
			},
			"args": ["--directory", "/path/to/splunk-mcp", "run", "python", "splunk_mcp.py", "sse"]
		},
		"mcp-flowise": {
			"command": "uvx",
			"args": ["--from", "git+https://github.com/matthewhand/mcp-flowise", "mcp-flowise"],
			"env": {
				"FLOWISE_API_KEY": "${FLOWISE_API_KEY}",
				"FLOWISE_API_ENDPOINT": "${FLOWISE_API_ENDPOINT}"
			}
		},
		"flowise": {
			"command": "C:\\Users\\matth\\.local\\bin\\uvx.exe",
			"args": ["--from", "C:\\Users\\matth\\downloads\\mcp-flowise", "mcp-flowise"],
			"env": {
				"LOGLEVEL": "ERROR",
				"APPDATA": "C:\\Users\\matth\\AppData\\Roaming",
				"FLOWISE_API_KEY": "your-api-key-goes-here",
				"FLOWISE_API_ENDPOINT": "http://localhost:3000/"
			}
		},
		"directus": {
			"command": "node",
			"args": ["/path/to/directus-mcp-server/dist/index.js"]
		},
		"Cyber-Chitta": {
			"command": "uvx",
			"args": ["scrapling-fetch-mcp"]
		},
		"grok2_image": {
			"command": "npx",
			"args": ["grok2-image-mcp-server"],
			"env": {
				"XAIAPI_KEY": "xAI Key"
			}
		},
		"meme": {
			"command": "/Users/<USERNAME>/.nvm/versions/node/v20.18.2/bin/node",
			"args": ["/Users/<USERNAME>/.nvm/versions/node/v20.18.2/lib/node_modules/meme-mcp/dist/index.js"],
			"env": {
				"IMGFLIP_USERNAME": "<IMGFLIP USERNAME>",
				"IMGFLIP_PASSWORD": "<IMGFLIP PASSWORD>"
			}
		},
		"plane": {
			"command": "node",
			"args": ["path/to/plane-mcp-server/build/index.js"],
			"env": {
				"PLANE_API_KEY": "your_plane_api_key_here",
				"PLANE_WORKSPACE_SLUG": "your_workspace_slug_here"
			}
		},
		"kokoro-tts": {
			"command": "/Users/giannisan/pinokio/bin/miniconda/bin/uv",
			"args": ["--directory", "/Users/giannisan/Documents/Cline/MCP/kokoro-tts-mcp", "run", "tts-mcp.py"]
		},
		"crypto-indicators-mcp": {
			"command": "node",
			"args": ["path/to/crypto-indicators-mcp/index.js"],
			"env": {
				"EXCHANGE_NAME": "binance"
			}
		},
		"tripadvisor": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "-e", "TRIPADVISOR_API_KEY", "tripadvisor-mcp-server"],
			"env": {
				"TRIPADVISOR_API_KEY": "your_api_key_here"
			}
		},
		"ancestry": {
			"command": "mcp-server-ancestry",
			"args": ["--gedcom-path", "path/to/your/gedcom/files"]
		},
		"google-analytics": {
			"command": "node",
			"args": ["/path/to/mcp-server-google-analytics/build/index.js"],
			"env": {
				"GOOGLE_CLIENT_EMAIL": "your-service-account@project.iam.gserviceaccount.com",
				"GOOGLE_PRIVATE_KEY": "your-private-key",
				"GA_PROPERTY_ID": "your-ga4-property-id"
			}
		},
		"@ScrapeGraphAI-scrapegraph-mcp": {
			"command": "npx",
			"args": ["-y", "@smithery/cli@latest", "run", "@ScrapeGraphAI/scrapegraph-mcp", "--config", "\"{\\\"scrapegraphApiKey\\\":\\\"YOUR-SGAI-API-KEY\\\"}\""]
		},
		"smart-thinking": {
			"command": "smart-thinking-mcp",
			"env": {
				"SMART_THINKING_DATA_DIR": "/chemin/absolu/vers/data"
			}
		},
		"lsp-mcp": {
			"type": "stdio",
			"command": "npx",
			"args": ["tritlo/lsp-mcp", "<language-id>", "<path-to-lsp>", "<lsp-args>"]
		},
		"kali_mcp": {
			"command": "python3",
			"args": ["/absolute/path/to/mcp_server.py", "http://LINUX_IP:5000/"]
		},
		"frontend-review": {
			"command": "npx",
			"args": ["frontend-review-mcp HYPERBOLIC_API_KEY=<YOUR_API_KEY>"]
		},
		"mcp-notes": {
			"command": "npx",
			"args": ["-y", "-p", "mcp-notes", "mcp-notes-server", "--dynamodb", "dynamodb://access_key:secret_key@region/table"]
		},
		"simulator": {
			"command": "node",
			"args": ["/path/to/your/mcp-server-ios-simulator/dist/index.js"]
		},
		"jira": {
			"command": "node",
			"args": ["/path/to/jira-server/build/index.js"],
			"env": {
				"JIRA_EMAIL": "your-email@example.com",
				"JIRA_API_TOKEN": "your-api-token",
				"JIRA_DOMAIN": "your-domain"
			}
		},
		"sketchfab": {
			"command": "node",
			"args": ["/path/to/build/index.js", "--api-key", "YOUR_API_KEY"]
		},
		"metabase-server": {
			"command": "/path/to/metabase-server/build/index.js",
			"env": {
				"METABASE_URL": "https://your-metabase-instance.com",
				"METABASE_USERNAME": "your_username",
				"METABASE_PASSWORD": "your_password"
			}
		},
		"qiniu_mcp": {
			"command": "python",
			"args": ["/path/to/qiniu_mcp_server/server.py"],
			"env": {
				"QINIU_ACCESS_KEY": "\u4f60\u7684AccessKey",
				"QINIU_SECRET_KEY": "\u4f60\u7684SecretKey",
				"QINIU_BUCKET_NAME": "\u4f60\u7684\u5b58\u50a8\u7a7a\u95f4\u540d\u79f0",
				"QINIU_DOMAIN": "https://\u4f60\u7684\u57df\u540d"
			}
		},
		"mcp_nomad": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "NOMAD_ADDR=http://172.17.0.1:4646", "-e", "NOMAD_TOKEN=secret-token-acl-optional", "kocierik/mcpnomad-server:latest"]
		},
		"mailtrap": {
			"command": "/Users/<username>/.asdf/shims/node",
			"args": ["/path/to/mailtrap-mcp/dist/index.js"],
			"env": {
				"PATH": "/Users/<username>/.asdf/shims:/usr/bin:/bin",
				"ASDF_DIR": "/opt/homebrew/opt/asdf/libexec",
				"ASDF_DATA_DIR": "/Users/<username>/.asdf",
				"ASDF_NODEJS_VERSION": "20.6.1",
				"MAILTRAP_API_TOKEN": "your_mailtrap_api_token",
				"DEFAULT_FROM_EMAIL": "your_sender@example.com"
			}
		},
		"arango": {
			"command": "node",
			"args": ["/path/to/arango-server/build/index.js"],
			"env": {
				"ARANGO_URL": "your_database_url",
				"ARANGO_DB": "your_database_name",
				"ARANGO_USERNAME": "your_username",
				"ARANGO_PASSWORD": "your_password"
			}
		},
		"weibo": {
			"command": "uvx",
			"args": ["--from", "git+https://github.com/qinyuanpei/mcp-server-weibo.git", "mcp-server-weibo"]
		},
		"letta-memgpt": {
			"command": "/path/to/memgpt-server/build/index.js",
			"env": {
				"OPENAI_API_KEY": "your-openai-key",
				"ANTHROPIC_API_KEY": "your-anthropic-key",
				"OPENROUTER_API_KEY": "your-openrouter-key"
			}
		},
		"docs-manager": {
			"command": "npx",
			"args": ["-y", "mcp-docs-service", "/path/to/your/docs"]
		},
		"language-server-mcp": {
			"command": "/path/to/language-server-mcp/build/index.js"
		},
		"mcp-logic": {
			"command": "uv",
			"args": ["--directory", "/path/to/mcp-logic/src/mcp_logic", "run", "mcp_logic", "--prover-path", "/path/to/mcp-logic/ladr/bin"]
		},
		"world_bank": {
			"command": "uv",
			"args": ["--directory", "path/to/world_bank_mcp_server", "run", "world_bank_mcp_server"]
		},
		"bitrise": {
			"command": "uvx",
			"env": {
				"BITRISE_TOKEN": "<YOUR_TOKEN>"
			},
			"args": ["--from", "git+https://github.com/bitrise-io/bitrise-mcp@v1.1.0", "bitrise-mcp"]
		},
		"mcp-server-box": {
			"command": "uv",
			"args": ["--directory", "/Users/anovotny/Desktop/mcp-server-box", "run", "src/mcp_server_box.py"]
		},
		"box": {
			"command": "uv",
			"args": ["--directory", "/Users/shurrey/local/mcp-server-box", "run", "src/mcp_server_box.py"]
		},
		"Bazi": {
			"command": "npx",
			"args": ["bazi-mcp"]
		},
		"ollama": {
			"command": "uvx",
			"args": ["mcp-ollama"]
		},
		"metasploit": {
			"command": "uv",
			"args": ["--directory", "C:\\path\\to\\MetasploitMCP", "run", "MetasploitMCP.py", "--transport", "stdio"],
			"env": {
				"MSF_PASSWORD": "yourpassword"
			}
		},
		"GraphQL Schema": {
			"command": "npx",
			"args": ["-y", "mcp-graphql-schema", "/ABSOLUTE/PATH/TO/schema.graphqls"]
		},
		"jina-ai-mcp-server": {
			"command": "node",
			"args": ["/path/to/jina-ai-mcp-server/dist/index.js"],
			"env": {
				"JINA_API_KEY": "<YOUR_KEY>"
			}
		},
		"mcp_google_spreadsheet": {
			"command": "mcp-google-spreadsheet",
			"args": [],
			"env": {
				"MCPGS_CLIENT_SECRET_PATH": "/path/to/client_secret.json",
				"MCPGS_TOKEN_PATH": "/path/to/token.json",
				"MCPGS_FOLDER_ID": "your_folder_id"
			}
		},
		"files-vectorstore": {
			"command": "npx",
			"args": ["-y", "@lishenxydlgzs/simple-files-vectorstore"],
			"env": {
				"WATCH_DIRECTORIES": "/path/to/dir1,/path/to/dir2",
				"CHUNK_SIZE": "2000",
				"CHUNK_OVERLAP": "500",
				"IGNORE_FILE": "/path/to/.gitignore"
			},
			"disabled": false,
			"autoApprove": []
		},
		"mediaProcessor": {
			"command": "npx",
			"args": ["-y", "create-mcp-server@latest"]
		},
		"github.com/mrexodia/user-feedback-mcp": {
			"command": "uv",
			"args": ["--directory", "c:\\MCP\\user-feedback-mcp", "run", "server.py"],
			"timeout": 600,
			"autoApprove": ["user_feedback"]
		},
		"oxylabs_scraper_uvx": {
			"command": "uvx",
			"args": ["oxylabs-mcp"],
			"env": {
				"OXYLABS_USERNAME": "OXYLABS_USERNAME",
				"OXYLABS_PASSWORD": "OXYLABS_PASSWORD"
			}
		},
		"oxylabs-mcp": {
			"command": "npx",
			"args": ["-y", "@smithery/cli@latest", "run", "@oxylabs/oxylabs-mcp", "--config", "\"{\\\"oxylabsUsername\\\":\\\"OXYLABS_USERNAME\\\",\\\"oxylabsPassword\\\":\\\"OXYLABS_PASSWORD\\\"}\""]
		},
		"oxylabs_scraper": {
			"command": "uv",
			"args": ["--directory", "/<Absolute-path-to-folder>/oxylabs-mcp", "run", "oxylabs-mcp"],
			"env": {
				"OXYLABS_USERNAME": "OXYLABS_USERNAME",
				"OXYLABS_PASSWORD": "OXYLABS_PASSWORD"
			}
		},
		"hackmd": {
			"command": "npx",
			"args": ["-y", "hackmd-mcp"],
			"env": {
				"HACKMD_API_TOKEN": "your_api_token"
			}
		},
		"bitbucket": {
			"command": "npx",
			"args": ["-y", "@aashari/mcp-server-atlassian-bitbucket"]
		},
		"workflows-mcp": {
			"command": "npx",
			"args": ["mcpn@latest server", "--config", "/path/to/.workflows", "--preset", "thinking,coding"]
		},
		"gsc": {
			"command": "npx",
			"args": ["-y", "mcp-server-gsc"],
			"env": {
				"GOOGLE_APPLICATION_CREDENTIALS": "/path/to/credentials.json"
			}
		},
		"google-search": {
			"command": "npx",
			"args": ["-y", "@adenot/mcp-google-search"],
			"env": {
				"GOOGLE_API_KEY": "your-api-key-here",
				"GOOGLE_SEARCH_ENGINE_ID": "your-search-engine-id-here"
			}
		},
		"honeycomb": {
			"command": "node",
			"args": ["/fully/qualified/path/to/honeycomb-mcp/build/index.mjs"],
			"env": {
				"HONEYCOMB_ENV_PROD_API_KEY": "your_prod_api_key",
				"HONEYCOMB_ENV_STAGING_API_KEY": "your_staging_api_key"
			}
		},
		"dnstwist": {
			"command": "node",
			"args": ["/absolute/path/to/mcp-dnstwist/build/index.js"]
		},
		"SEO MCP": {
			"command": "uvx",
			"args": ["--python", "3.10", "seo-mcp"],
			"env": {
				"CAPSOLVER_API_KEY": "CAP-xxxxxx"
			}
		},
		"astra-db-mcp": {
			"command": "npx",
			"args": ["-y", "@datastax/astra-db-mcp"],
			"env": {
				"ASTRA_DB_APPLICATION_TOKEN": "your_astra_db_token",
				"ASTRA_DB_API_ENDPOINT": "your_astra_db_endpoint"
			}
		},
		"google-workspace": {
			"command": "node",
			"args": ["/path/to/google-workspace-server/build/index.js"],
			"env": {
				"GOOGLE_CLIENT_ID": "your_client_id",
				"GOOGLE_CLIENT_SECRET": "your_client_secret",
				"GOOGLE_REFRESH_TOKEN": "your_refresh_token"
			}
		},
		"image-gen": {
			"command": "node",
			"args": ["/path/to/image-gen-server/build/index.js"],
			"env": {
				"REPLICATE_API_TOKEN": "your-replicate-api-token",
				"MODEL": "alternative-model-name"
			},
			"disabled": false,
			"autoApprove": []
		},
		"hdw": {
			"command": "npx",
			"args": ["-y", "@horizondatawave/mcp"],
			"env": {
				"HDW_ACCESS_TOKEN": "YOUR_HD_W_ACCESS_TOKEN",
				"HDW_ACCOUNT_ID": "YOUR_HD_W_ACCOUNT_ID"
			}
		},
		"logseq": {
			"command": "uvx",
			"args": ["mcp-server-logseq"],
			"env": {
				"LOGSEQ_API_TOKEN": "API_KEY",
				"LOGSEQ_API_URL": "http://127.0.0.1:<port>"
			}
		},
		"better-auth-mcp-server": {
			"command": "node",
			"args": ["/path/to/better-auth-mcp-server/build/index.js"],
			"disabled": false,
			"alwaysAllow": []
		},
		"one-search-mcp": {
			"command": "npx",
			"args": ["-y", "one-search-mcp"],
			"env": {
				"SEARCH_PROVIDER": "searxng",
				"SEARCH_API_URL": "http://127.0.0.1:8080",
				"SEARCH_API_KEY": "YOUR_API_KEY",
				"FIRECRAWL_API_URL": "http://127.0.0.1:3002",
				"FIRECRAWL_API_KEY": "YOUR_API_KEY"
			}
		},
		"whatsapp": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "wweb-mcp:latest", "-m", "mcp", "-s", "local", "-c", "api", "-t", "command", "--api-base-url", "http://host.docker.internal:3001/api", "--api-key", "1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"]
		},
		"nobitex": {
			"command": "npm",
			"args": ["--prefix", "/path/to/this/repo", "run", "start"]
		},
		"http-rquest": {
			"command": "pipx",
			"args": ["run", "mcp-rquest"]
		},
		"apisix-mcp": {
			"command": "node",
			"args": ["your-apisix-mcp-path/dist/index.js"],
			"env": {
				"APISIX_SERVER_HOST": "your-apisix-server-host",
				"APISIX_SERVER_PORT": "your-apisix-server-port",
				"APISIX_ADMIN_API_PORT": "your-apisix-admin-api-port",
				"APISIX_ADMIN_API_PREFIX": "your-apisix-admin-api-prefix",
				"APISIX_ADMIN_KEY": "your-apisix-api-key"
			}
		},
		"rules": {
			"command": "node",
			"args": ["/path/to/rules-server/build/index.js"],
			"disabled": false,
			"alwaysAllow": []
		},
		"keycloak": {
			"command": "node",
			"args": ["path/to/dist/index.js"],
			"env": {
				"KEYCLOAK_URL": "http://localhost:8080",
				"KEYCLOAK_ADMIN": "admin",
				"KEYCLOAK_ADMIN_PASSWORD": "admin"
			}
		},
		"deepview": {
			"command": "/path/to/deepview-mcp",
			"args": ["--model", "gemini-2.5-pro-exp-03-25"],
			"env": {
				"GEMINI_API_KEY": "your_gemini_api_key"
			}
		},
		"Explorium": {
			"command": "<UV_INSTALL_PATH>",
			"args": ["run", "--directory", "<REPOSITORY_PATH>", "mcp", "run", "local_dev_server.py"],
			"env": {
				"EXPLORIUM_API_KEY": "<YOUR_API_KEY>"
			}
		},
		"rs_filesystem": {
			"command": "/path/to/rs_filesystem",
			"args": ["--mcp"],
			"env": {
				"MCP_RS_FILESYSTEM_ALLOWED_DIRECTORIES": "/path/number/one:/path/number/two"
			}
		},
		"focus_mcp_data": {
			"command": "java",
			"args": ["-jar", "path/to/focus_mcp_data/focus_mcp_data.jar"],
			"autoApprove": ["tableList", "gptText2DataInit", "gptText2DataData"]
		},
		"mcp-wecombot-server": {
			"command": "mcp-wecombot-server",
			"env": {
				"WECOM_BOT_WEBHOOK_KEY": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx"
			}
		},
		"mcp-dingdingbot-server": {
			"command": "mcp-dingdingbot-server",
			"env": {
				"DINGDING_BOT_WEBHOOK_KEY": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx",
				"DINGDING_BOT_SIGN_KEY": "SECxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
			}
		},
		"youtube": {
			"command": "node",
			"args": ["path/to/youtube-mcp-server/index.js"],
			"env": {
				"YOUTUBE_API_KEY": "your_api_key_here"
			}
		},
		"octagon-mcp-server": {
			"command": "npx",
			"args": ["-y", "octagon-mcp@latest"],
			"env": {
				"OCTAGON_API_KEY": "YOUR_API_KEY_HERE"
			}
		},
		"fantasy-pl": {
			"command": "python",
			"args": ["-m", "fpl_mcp"]
		},
		"rag-docs-openai": {
			"command": "npx",
			"args": ["-y", "@sanderkooger/mcp-server-ragdocs"],
			"env": {
				"EMBEDDINGS_PROVIDER": "openai",
				"OPENAI_API_KEY": "your-openai-key-here",
				"QDRANT_URL": "your-qdrant-url",
				"QDRANT_API_KEY": "your-qdrant-key"
			}
		},
		"rag-docs-ollama": {
			"command": "npx",
			"args": ["-y", "@sanderkooger/mcp-server-ragdocs"],
			"env": {
				"EMBEDDINGS_PROVIDER": "ollama",
				"OLLAMA_BASE_URL": "http://localhost:11434",
				"QDRANT_URL": "your-qdrant-url",
				"QDRANT_API_KEY": "your-qdrant-key"
			}
		},
		"powertools": {
			"command": "node",
			"args": ["\\\\wsl$\\Ubuntu\\home\\walmsles\\dev\\serverless-dna\\powertools-mcp\\dist\\bundle.js"]
		},
		"pdf-reader-mcp": {
			"command": "node",
			"args": ["/path/to/cloned/repo/pdf-reader-mcp/build/index.js"],
			"name": "PDF Reader (Local Build)"
		},
		"openai-gpt-image-mcp": {
			"command": "node",
			"args": ["/absolute/path/to/dist/index.js"],
			"env": {
				"OPENAI_API_KEY": "sk-..."
			}
		},
		"stockscreen": {
			"command": "python",
			"args": ["path/to/stockscreen.py"]
		},
		"edgeone-geo-mcp-server": {
			"command": "tsx",
			"args": ["path/to/mcp-server/index.ts"]
		},
		"YingDao RPA MCP Server": {
			"url": "http://localhost:3000/sse",
			"description": "\u5f71\u5200 MCP Server"
		},
		"ai-agent-marketplace-index-mcp": {
			"command": "uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/PARENT/FOLDER/ai-agent-marketplace-index-mcp/src/ai-agent-marketplace-index", "run", "server.py"]
		},
		"hologres-mcp-server": {
			"command": "uvx",
			"args": ["hologres-mcp-server"],
			"env": {
				"HOLOGRES_HOST": "host",
				"HOLOGRES_PORT": "port",
				"HOLOGRES_USER": "access_id",
				"HOLOGRES_PASSWORD": "access_key",
				"HOLOGRES_DATABASE": "database"
			}
		},
		"iotdb": {
			"command": "uv",
			"args": ["--directory", "YOUR_REPO_PATH/src/iotdb_mcp_server", "run", "server.py"],
			"env": {
				"IOTDB_HOST": "127.0.0.1",
				"IOTDB_PORT": "6667",
				"IOTDB_USER": "root",
				"IOTDB_PASSWORD": "root",
				"IOTDB_DATABASE": "test",
				"IOTDB_SQL_DIALECT": "table"
			}
		},
		"excel-reader": {
			"command": "excel-reader",
			"env": {}
		},
		"anti-bullshit": {
			"command": "node",
			"args": ["/path/to/anti-bullshit-mcp-server/build/index.js"]
		},
		"mistral-ocr": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "MISTRAL_API_KEY", "-e", "OCR_DIR", "-v", "C:/path/to/your/files:/data/ocr", "mcp-mistral-ocr:latest"],
			"env": {
				"MISTRAL_API_KEY": "<YOUR_MISTRAL_API_KEY>",
				"OCR_DIR": "C:/path/to/your/files"
			}
		},
		"pubmedmcp": {
			"command": "uvx",
			"args": ["pubmedmcp@latest"],
			"env": {
				"UV_PRERELEASE": "allow",
				"UV_PYTHON": "3.12"
			}
		},
		"israeli-bank-mcp": {
			"command": "node",
			"args": ["/path/to/israeli-bank-mcp/build/server.js"]
		},
		"rabbitmq": {
			"command": "uv",
			"args": ["--directory", "/path/to/repo/mcp-server-rabbitmq", "run", "mcp-server-rabbitmq", "--rabbitmq-host", "<hostname ex. test.rabbit.com, localhost>", "--port", "<port number ex. 5672>", "--username", "<rabbitmq username>", "--password", "<rabbitmq password>", "--use-tls", "<true if uses amqps, false otherwise>"]
		},
		"swift-mcp-gui": {
			"command": "/Users/USERNAME/.swiftpm/bin/swift-mcp-gui"
		},
		"wikipedia": {
			"command": "wikipedia-mcp"
		},
		"singlestore-mcp-server": {
			"command": "uvx",
			"args": ["singlestore-mcp-server", "start", "<SINGLESTORE_API_KEY>"]
		},
		"ppts": {
			"command": "C:\\Path\\To\\Python\\Scripts\\uv.exe",
			"args": ["run", "C:\\Path\\To\\Project\\main.py"]
		},
		"starwind ui": {
			"command": "node",
			"args": ["c:\\path\\to\\folder\\starwind-ui-mcp\\dist\\server.js"],
			"env": {}
		},
		"command-executor": {
			"command": "/path/to/command-executor/build/index.js"
		},
		"mcp-trino": {
			"command": "mcp-trino",
			"args": [],
			"env": {
				"TRINO_HOST": "<HOST>",
				"TRINO_PORT": "<PORT>",
				"TRINO_USER": "<USERNAME>",
				"TRINO_PASSWORD": "<PASSWORD>"
			}
		},
		"mcp-trino-http": {
			"url": "http://localhost:9097/sse"
		},
		"ydb": {
			"command": "python3",
			"args": ["-m", "ydb_mcp", "--ydb-endpoint", "grpc://localhost:2136/local", "--ydb-auth-mode", "login-password", "--ydb-login", "<your-username>", "--ydb-password", "<your-password>"]
		},
		"pushover": {
			"command": "npx",
			"args": ["-y", "pushover-mcp@latest", "start", "--token", "YOUR_TOKEN", "--user", "YOUR_USER"]
		},
		"mcp-dbs": {
			"command": "node",
			"args": ["/path/to/your/mcp-dbs/dist/cli.js", "--stdio"],
			"env": {
				"MCP_MONGODB_URI": "mongodb://localhost:27017",
				"MCP_MONGODB_DATABASE": "your-database-name"
			}
		},
		"glif": {
			"command": "npx",
			"args": ["-y", "@glifxyz/mymcpspace-mcp-server@latest"],
			"env": {
				"API_TOKEN": "your-token-here"
			}
		},
		"greptimedb": {
			"command": "uv",
			"args": ["--directory", "/path/to/greptimedb-mcp-server", "run", "-m", "greptimedb_mcp_server.server"],
			"env": {
				"GREPTIMEDB_HOST": "localhost",
				"GREPTIMEDB_PORT": "4002",
				"GREPTIMEDB_USER": "root",
				"GREPTIMEDB_PASSWORD": "",
				"GREPTIMEDB_DATABASE": "public"
			}
		},
		"mcp-gopls": {
			"command": "mcp-gopls"
		},
		"qwen_max": {
			"command": "node",
			"args": ["/path/to/Qwen_Max/build/index.js"],
			"env": {
				"DASHSCOPE_API_KEY": "your-api-key-here"
			}
		},
		"web-browser": {
			"command": "python",
			"args": ["/path/to/your/server.py"]
		},
		"smart-photo-journal": {
			"command": "/Users/<YOUR_DEVICE_USERNAME>/.local/bin/uv",
			"args": ["--directory", "/Users/<PATH_TO_CLONED_DIR>/memory-journal-mcp-server", "run", "server.py"]
		},
		"OSM PostgreSQL Server": {
			"command": "/Users/wiseman/.local/bin/uv",
			"args": ["run", "--env-file", ".env", "--with", "mcp[cli]", "--with", "psycopg2", "--with-editable", "/Users/wiseman/src/mcp-osm", "--directory", "/Users/wiseman/src/mcp-osm", "mcp", "run", "mcp.py"]
		},
		"typescribe": {
			"command": "npx",
			"args": ["-y", "mcp-typescribe@latest", "run-server", "<PATH_TO_API_DOT_JSON>"],
			"env": {}
		},
		"zenml": {
			"command": "/usr/local/bin/uv",
			"args": ["run", "path/to/zenml_server.py"],
			"env": {
				"LOGLEVEL": "INFO",
				"NO_COLOR": "1",
				"PYTHONUNBUFFERED": "1",
				"PYTHONIOENCODING": "UTF-8",
				"ZENML_STORE_URL": "https://your-zenml-server-goes-here.com",
				"ZENML_STORE_API_KEY": "your-api-key-here"
			}
		},
		"bluesky": {
			"command": "npx",
			"args": ["-y", "mcp-server-bluesky"],
			"env": {
				"BLUESKY_USERNAME": "username",
				"BLUESKY_PASSWORD": "password",
				"BLUESKY_PDS_URL": "https://bsky.social"
			}
		},
		"google-map": {
			"command": "npx",
			"args": ["-y", "@cablate/mcp-google-map"],
			"env": {
				"GOOGLE_MAPS_API_KEY": "your_api_key"
			},
			"enabled": true
		},
		"databutton": {
			"command": "/path/to/databutton/build/index.js"
		},
		"x": {
			"command": "node",
			"args": ["%USERPROFILE%/Projects/MCP Basket/x-server/build/index.js"],
			"env": {
				"TWITTER_API_KEY": "paste-your-api-key-here",
				"TWITTER_API_SECRET": "paste-your-api-key-secret-here",
				"TWITTER_ACCESS_TOKEN": "paste-your-access-token-here",
				"TWITTER_ACCESS_SECRET": "paste-your-access-token-secret-here"
			}
		},
		"github-mapper": {
			"command": "node",
			"args": ["/home/user/Documents/Cline/MCP/github-mapper/build/index.js"]
		},
		"home_assistant": {
			"command": "uv",
			"args": ["--directory", "/path/to/your/home-assistant-mcp", "run", "main.py"],
			"env": {
				"HOME_ASSISTANT_TOKEN": "your_home_assistant_token_here"
			},
			"inheritEnv": true
		},
		"safe-local-python-executor": {
			"command": "uv",
			"args": ["--directory", "/path/to/mcp_local_python_executor/", "run", "mcp_server.py"]
		},
		"outlook-calendar": {
			"command": "node",
			"args": ["path/to/outlook-calendar-mcp/src/index.js"],
			"env": {}
		},
		"near-mcp": {
			"command": "npx",
			"args": ["-y", "@nearai/near-mcp@latest", "run"],
			"env": {}
		},
		"seatunnel": {
			"command": "python",
			"args": ["-m", "src.seatunnel_mcp"],
			"cwd": "Project root directory"
		},
		"octomind-mcp": {
			"name": "Octomind MCP Server",
			"command": "npx",
			"args": ["-y", "@octomind/octomind-mcp@latest"],
			"environment": {
				"APIKEY": "your-api-key-here"
			}
		},
		"pica-mcp-server": {
			"command": "node",
			"args": ["/path/to/pica-mcp-server/build/index.js"],
			"env": {
				"PICA_SECRET": "YOUR_PICA_SECRET_KEY"
			}
		},
		"pinecone-assistant": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "PINECONE_API_KEY", "-e", "PINECONE_ASSISTANT_HOST", "pinecone/assistant-mcp"],
			"env": {
				"PINECONE_API_KEY": "<YOUR_PINECONE_API_KEY_HERE>",
				"PINECONE_ASSISTANT_HOST": "<YOUR_PINECONE_ASSISTANT_HOST_HERE>"
			}
		},
		"oracledb_mcp_server": {
			"command": "uv",
			"args": ["run", "oracledb_mcp_server"],
			"env": {
				"DEBUG": "True",
				"COMMENT_DB_CONNECTION_STRING": "oracle+oracledb://USERNAME:PASSWORD@IP:PORT/?service_name=SERVICENAME",
				"DB_CONNECTION_STRING": "oracle+oracledb://USERNAME:PASSWORD@IP:PORT/?service_name=SERVICENAME",
				"TABLE_WHITE_LIST": "ACCOUNTS,CUS_ACC_RELATIONS,CUSTOMERS",
				"COLUMN_WHITE_LIST": "ACCOUNTS.ACC_AAD_ID,CUS_ACC_RELATIONS.CAR_CUS_ID,CUS_ACC_RELATIONS.CAR_AAD_ID,CUSTOMERS.CUS_ID"
			}
		},
		"mcp-redis-cloud": {
			"command": "node",
			"args": ["--experimental-fetch", "<absolute_path_to_project_root>/dist/index.js"],
			"env": {
				"API_KEY": "<redis_cloud_api_key>",
				"SECRET_KEY": "<redis_cloud_api_secret_key>"
			}
		},
		"redis-cloud": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "API_KEY=<your_redis_cloud_api_key>", "-e", "SECRET_KEY=<your_redis_cloud_api_secret_key>", "mcp/redis-cloud"]
		},
		"kite": {
			"command": "npx",
			"args": ["mcp-remote", "http://mcp.kite.trade/sse"]
		},
		"obs": {
			"command": "node",
			"args": ["<obs-mcp_root>/build/index.js"],
			"env": {
				"OBS_WEBSOCKET_PASSWORD": "<password_from_obs>"
			}
		},
		"scrapelessMcpServer": {
			"command": "npx",
			"args": ["-y", "scrapeless-mcp-server"],
			"env": {
				"SCRAPELESS_KEY": "YOUR_SCRAPELESS_KEY"
			}
		},
		"gdb": {
			"command": "node",
			"args": ["/path/to/mcp-gdb/build/index.js"],
			"disabled": false
		},
		"unreasonable-thinking-server": {
			"command": "/path/to/unreasonable-thinking-server/build/index.js"
		},
		"redash": {
			"command": "npx",
			"args": ["-y", "@suthio/redash-mcp"],
			"env": {
				"REDASH_API_KEY": "your-api-key",
				"REDASH_URL": "https://your-redash-instance.com"
			}
		},
		"a2a-client": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "A2A_ENDPOINT_URL", "a2a-client-mcp-server"],
			"env": {
				"A2A_ENDPOINT_URL": "http://localhost:41241"
			}
		},
		"other-tools": {
			"command": "npx",
			"args": ["-y", "mcp-hub-mcp", "--config-path", "/Users/username/mcp.json"]
		},
		"other-server": {
			"command": "node",
			"args": ["path/to/other-mcp-server.js"]
		},
		"gyazo-mcp-server": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "GYAZO_ACCESS_TOKEN", "gyazo-mcp-server"],
			"env": {
				"GYAZO_ACCESS_TOKEN": "your-access-token-here"
			}
		},
		"trino": {
			"command": "python",
			"args": ["./src/server.py"],
			"env": {
				"TRINO_HOST": "your-trino-host",
				"TRINO_PORT": "8080",
				"TRINO_USER": "trino"
			}
		},
		"alibabacloud-dataworks-mcp-server": {
			"command": "node",
			"args": ["/path/to/alibabacloud-dataworks-mcp-server/build/index.js"],
			"env": {
				"REGION": "your_dataworks_open_api_region_id_here",
				"ALIBABA_CLOUD_ACCESS_KEY_ID": "your_alibaba_cloud_access_key_id",
				"ALIBABA_CLOUD_ACCESS_KEY_SECRET": "your_alibaba_cloud_access_key_secret",
				"TOOL_CATEGORIES": "optional_your_tool_categories_here_ex_SERVER_IDE_DEFAULT",
				"TOOL_NAMES": "optional_your_tool_names_here_ex_ListProjects"
			},
			"disabled": false,
			"autoApprove": []
		},
		"obsidian-omnisearch": {
			"command": "uvx",
			"args": ["mcp-server-obsidian-omnisearch", "/path/to/your/obsidian/vault"]
		},
		"server-name": {
			"command": "/path/to/your/.venv/bin/python",
			"args": ["/path/to/your/mcp-nextflow/mcp-nextflow.py"],
			"env": {
				"NEXTFLOW_DIR": "/path/to/your/nextflow"
			}
		},
		"volatility": {
			"command": "python",
			"args": ["/path/to/volatility_mcp_server.py"],
			"env": {
				"PYTHONPATH": "/path/to/volatility3"
			}
		},
		"sentry": {
			"command": "python",
			"args": ["-m", "mcp_sentry", "--auth-token", "YOUR_SENTRY_TOKEN", "--project-slug", "YOUR_PROJECT_SLUG", "--organization-slug", "YOUR_ORGANIZATION_SLUG", "--sentry-url", "YOUR_SENTRY_URL"]
		},
		"dappier": {
			"command": "uvx",
			"args": ["dappier-mcp"],
			"env": {
				"DAPPIER_API_KEY": "YOUR_API_KEY_HERE"
			}
		},
		"github-enterprise": {
			"command": "npx",
			"args": ["@ddukbg/github-enterprise-mcp"],
			"env": {
				"GITHUB_ENTERPRISE_URL": "https://github.your-company.com/api/v3",
				"GITHUB_TOKEN": "your_github_token"
			}
		},
		"delve-mcp": {
			"command": "/path/to/delve-mcp/build/index.js"
		},
		"fegis": {
			"command": "uv",
			"args": ["--directory", "<FEGIS_PATH>", "run", "fegis"],
			"env": {
				"QDRANT_URL": "http://localhost:6333",
				"QDRANT_API_KEY": "",
				"COLLECTION_NAME": "knowledge_store",
				"FAST_EMBED_MODEL": "nomic-ai/nomic-embed-text-v1.5",
				"CONFIG_PATH": "<FEGIS_PATH>/archetypes/example.yaml"
			}
		},
		"Web-QA": {
			"command": "uv",
			"args": ["--directory", "path/to/cloned_repo", "run", "mcp_server.py"]
		},
		"gradle-mcp-server": {
			"command": "java",
			"args": ["-jar", "<absolute_path_to_home>/mcp-servers/gradle-mcp-server/gradle-mcp-server-all.jar"],
			"env": {},
			"disabled": false,
			"autoApprove": []
		},
		"mailgun": {
			"command": "node",
			"args": ["CHANGE/THIS/PATH/TO/mailgun-mcp-server/src/mailgun-mcp.js"],
			"env": {
				"MAILGUN_API_KEY": "YOUR-mailgun-api-key"
			}
		},
		"frame0-mcp-server": {
			"command": "node",
			"args": ["<full-path-to>/frame0-mcp-server/build/index.js"]
		},
		"shannon-thinking": {
			"command": "npx",
			"args": ["-y", "server-shannon-thinking@latest"]
		},
		"nmap": {
			"command": "node",
			"args": ["C:\\Users\\YOUR_USERNAME\\Downloads\\mcp-nmap-server\\dist\\index.js"]
		},
		"dataset-viewer": {
			"command": "uv",
			"args": ["--directory", "parent_to_repo/dataset-viewer", "run", "dataset-viewer"]
		},
		"jmeter": {
			"command": "/path/to/uv",
			"args": ["--directory", "/path/to/jmeter-mcp-server", "run", "jmeter_server.py"]
		},
		"mermaid-validator": {
			"command": "npx",
			"args": ["-y", "@rtuin/mcp-mermaid-validator@latest"]
		},
		"mcp-llms-txt": {
			"command": "uvx",
			"args": ["mcp-llms-txt"],
			"env": {
				"PYTHONUTF8": "1"
			}
		},
		"mail-mcp": {
			"command": "pythonw",
			"args": ["/home/\u4f60\u7684\u7528\u6237\u540d/mcp-mail/bridging_mail_mcp.py"]
		},
		"matlab": {
			"command": "uv",
			"args": ["--directory", "/absolute/path/to/matlab-mcp", "run", "matlab_server.py"],
			"env": {
				"MATLAB_PATH": "/Applications/MATLAB_R2024a.app"
			}
		},
		"my_database": {
			"command": "uv",
			"args": ["--directory", "/directory/where/this/app/is/located/app/", "run", "server.py"],
			"env": {
				"DB_URL": "postgresql://postgres:password@localhost:5432/mydatabase"
			}
		},
		"aindreyway-mcp-neurolora": {
			"command": "npx",
			"args": ["-y", "@aindreyway/mcp-neurolora@latest"],
			"env": {
				"NODE_OPTIONS": "--max-old-space-size=256",
				"OPENAI_API_KEY": "your_api_key_here"
			}
		},
		"zerolab-toolbox": {
			"command": "uvx",
			"args": ["--prerelease=allow", "--python=3.12", "mcp-toolbox[all]@latest", "stdio"],
			"env": {
				"FIGMA_API_KEY": "your-figma-api-key",
				"TAVILY_API_KEY": "your-tavily-api-key",
				"DUCKDUCKGO_API_KEY": "your-duckduckgo-api-key",
				"BFL_API_KEY": "your-bfl-api-key"
			}
		},
		"whois": {
			"command": "npx",
			"args": ["-y", "@bharathvaj/whois-mcp@latest"]
		},
		"chrome-control": {
			"url": "http://localhost:3000/sse",
			"disabled": false,
			"alwaysAllow": []
		},
		"fibery-mcp-server": {
			"command": "uv",
			"args": ["tool", "run", "fibery-mcp-server", "--fibery-host", "your-domain.fibery.io", "--fibery-api-token", "your-api-token"]
		},
		"mcp-pyautogui-server": {
			"command": "uvx",
			"args": ["mcp-pyautogui-server"]
		},
		"homeassistant-mcp": {
			"command": "npx",
			"args": ["homeassistant-mcp"],
			"env": {
				"HASS_TOKEN": "your_home_assistant_token_here",
				"HASS_HOST": "http://your_home_assistant_host:8123"
			}
		},
		"serveMyAPI": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/servemyapi/dist/index.js"]
		},
		"android-adb": {
			"command": "node",
			"args": ["/path/to/android-adb-mcp-server/build/index.js"],
			"env": {},
			"disabled": false,
			"alwaysAllow": []
		},
		"mcp-server-prometheus": {
			"command": "/path/to/mcp-server-prometheus/build/index.js",
			"env": {
				"PROMETHEUS_URL": "http://your-prometheus-instance:9090"
			}
		},
		"free-usdc-transfer": {
			"command": "npx",
			"args": ["-y", "@magnetai/free-usdc-transfer"],
			"env": {
				"COINBASE_CDP_API_KEY_NAME": "YOUR_COINBASE_CDP_API_KEY_NAME",
				"COINBASE_CDP_PRIVATE_KEY": "YOUR_COINBASE_CDP_PRIVATE_KEY"
			}
		},
		"geoserver-mcp": {
			"command": "/path/to/geoserver-mcp/.venv/bin/geoserver-mcp",
			"args": ["--url", "http://localhost:8080/geoserver", "--user", "admin", "--password", "geoserver"]
		},
		"brave-search": {
			"command": "npx",
			"args": ["-y", "@mektigboy/server-hyperliquid"]
		},
		"moondream": {
			"command": "node",
			"args": ["/path/to/moondream-server/build/index.js"]
		},
		"nile-database": {
			"command": "node",
			"args": ["/path/to/your/nile-mcp-server/dist/index.js"],
			"env": {
				"NILE_API_KEY": "your_api_key_here",
				"NILE_WORKSPACE_SLUG": "your_workspace_slug"
			}
		},
		"pulsemcp": {
			"command": "npx",
			"args": ["-y", "pulsemcp-server"]
		},
		"chucknorris": {
			"command": "npx",
			"args": ["-y", "@pollinations/chucknorris"]
		},
		"todo": {
			"command": "node",
			"args": ["/absolute/path/to/todo-list-mcp/dist/index.js"]
		},
		"kdebug": {
			"command": "/path/to/kdebug-mcp/bin/server"
		},
		"ai-humanizer": {
			"command": "node",
			"args": ["<YOUR_PROJECT_PATH>/build/index.js"]
		},
		"modex-datomic-mcp": {
			"command": "java",
			"args": ["-jar", "/Users/petrus/code/datomic-mcp/target/theronic-datomic-mcp-0.3.0.jar"],
			"env": {
				"DATOMIC_URI": "<your datomic URI here>"
			}
		},
		"stockflow": {
			"command": "python",
			"args": ["path/to/stockflow.py"]
		},
		"confluence": {
			"command": "bun",
			"args": ["/absolute/path/to/confluence-mcp/dist/index.js"],
			"env": {
				"CONFLUENCE_API_TOKEN": "your_api_token",
				"CONFLUENCE_BASE_URL": "your_confluence_instance_url/wiki",
				"CONFLUENCE_USER_EMAIL": "your_email"
			}
		},
		"atla-mcp-server": {
			"command": "uvx",
			"args": ["atla-mcp-server"],
			"env": {
				"ATLA_API_KEY": "<your-atla-api-key>"
			}
		},
		"taskwarrior": {
			"command": "npx",
			"args": ["-y", "mcp-server-taskwarrior"]
		},
		"ffmpeg": {
			"command": "npx",
			"args": ["--yes", "mcp-ffmpeg"]
		},
		"say": {
			"command": "node",
			"args": ["/Users/barton/worlds/servers/src/say-mcp-server/build/index.js"]
		},
		"Bitcoin SV": {
			"command": "bun",
			"args": ["run", "bsv-mcp@latest"],
			"env": {
				"PRIVATE_KEY_WIF": "<your_private_key_wif>",
				"IDENTITY_KEY_WIF": "<your_identity_key_wif>"
			}
		},
		"sharepoint": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "--init", "-e", "DOCKER_CONTAINER=true", "-e", "TENANT_ID=your-tenant-id", "-e", "CLIENT_ID=your-client-id", "-e", "CLIENT_SECRET=your-client-secret", "-e", "SITE_ID=your-site-id", "-e", "DRIVE_ID=your-drive-id", "mcp/sharepoint"]
		},
		"docsFetcher": {
			"command": "npx",
			"args": ["-y", "@smithery/cli@latest", "run", "@cdugo/mcp-get-docs", "--config", "'{}'"]
		},
		"diffugen": {
			"command": "/home/cloudwerxlab/Desktop/Servers/MCP/Tools/DiffuGen/diffugen.sh",
			"args": [],
			"env": {
				"CUDA_VISIBLE_DEVICES": "0",
				"SD_CPP_PATH": "path/to/stable-diffusion.cpp",
				"default_model": "flux-schnell"
			},
			"resources": {
				"models_dir": "path/to/stable-diffusion.cpp/models",
				"output_dir": "path/to/outputs",
				"vram_usage": "adaptive"
			},
			"metadata": {
				"name": "DiffuGen",
				"version": "1.0",
				"description": "Your AI art studio embedded directly in code. Generate, iterate, and perfect visual concepts through this powerful MCP server for Cursor, Windsurf, and other compatible IDEs, utilizing cutting-edge Flux and Stable Diffusion models without disrupting your development process.",
				"author": "CLOUDWERX LAB",
				"homepage": "https://github.com/CLOUDWERX-DEV/diffugen",
				"usage": "Generate images using two primary methods:\n1. Standard generation: 'generate an image of [description]' with optional parameters:\n   - model: Choose from flux-schnell (default), flux-dev, sdxl, sd3, sd15\n   - dimensions: width and height (default: 512x512)\n   - steps: Number of diffusion steps (default: 20, lower for faster generation)\n   - cfg_scale: Guidance scale (default: 7.0, lower for more creative freedom)\n   - seed: For reproducible results (-1 for random)\n   - sampling_method: euler, euler_a (default), heun, dpm2, dpm++2s_a, dpm++2m, dpm++2mv2, lcm\n   - negative_prompt: Specify elements to avoid in the image\n2. Quick Flux generation: 'generate a flux image of [description]' for faster results with fewer steps (default: 4)"
			},
			"cursorOptions": {
				"autoApprove": true,
				"category": "Image Generation",
				"icon": "\ud83d\uddbc\ufe0f",
				"displayName": "DiffuGen"
			},
			"windsurfOptions": {
				"displayName": "DiffuGen",
				"icon": "\ud83d\uddbc\ufe0f",
				"category": "Creative Tools"
			},
			"default_params": {
				"steps": {
					"flux-schnell": 8,
					"flux-dev": 20,
					"sdxl": 20,
					"sd3": 20,
					"sd15": 20
				},
				"cfg_scale": {
					"flux-schnell": 1.0,
					"flux-dev": 1.0,
					"sdxl": 7.0,
					"sd3": 7.0,
					"sd15": 7.0
				},
				"sampling_method": {
					"flux-schnell": "euler",
					"flux-dev": "euler",
					"sdxl": "euler",
					"sd3": "euler",
					"sd15": "euler"
				}
			}
		},
		"ossinsight": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-ossinsight"]
		},
		"ticketmaster": {
			"command": "npx",
			"args": ["-y", "@delorenj/mcp-server-ticketmaster"],
			"env": {
				"TICKETMASTER_API_KEY": "your-api-key-here"
			}
		},
		"readability": {
			"command": "fastmcp",
			"args": ["run", "server.py"],
			"env": {}
		},
		"mymcpspace": {
			"command": "node",
			"args": ["/absolute/path/mymcpspace-mcp-server/dist/index.js"],
			"env": {
				"API_TOKEN": "your_bearer_token_here"
			}
		},
		"linkedin-mcp": {
			"command": "uv",
			"args": ["--directory", "absolute\\path\\to\\linkedin-mcp", "run", "-m", "linkedin_mcp.server"],
			"env": {
				"LINKEDIN_CLIENT_ID": "<yours>",
				"LINKEDIN_CLIENT_SECRET": "<yours>",
				"LINKEDIN_REDIRECT_URI": "<yours>"
			}
		},
		"pubmed": {
			"command": "bash",
			"args": ["-c", "source /home/YOUR/PATH/mcp-server-pubmed/.venv/bin/activate && python /home/YOUR/PATH/pubmed-mcp-server.py"],
			"env": {},
			"disabled": false,
			"autoApprove": []
		},
		"xero-mcp": {
			"command": "npx",
			"args": ["-y", "xero-mcp@latest"],
			"env": {
				"XERO_CLIENT_ID": "YOUR_CLIENT_ID",
				"XERO_CLIENT_SECRET": "YOUR_CLIENT_SECRET",
				"XERO_REDIRECT_URI": "http://localhost:5000/callback"
			}
		},
		"webflow": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/YOUR/build/index.js"],
			"env": {
				"WEBFLOW_API_TOKEN": "your-api-token"
			}
		},
		"webhook": {
			"command": "npx",
			"args": ["-y", "@kevinwatt/mcp-webhook"],
			"env": {
				"WEBHOOK_URL": "your-webhook-url"
			},
			"alwaysAllow": ["send_message"]
		},
		"kollektiv": {
			"timeout": 60,
			"command": "npx",
			"args": ["-y", "mcp-remote", "https://mcp.thekollektiv.ai/mcp"],
			"transportType": "stdio",
			"disabled": false
		},
		"workspace-code-search": {
			"url": "http://localhost:8978/sse"
		},
		"transcription-tools": {
			"command": "node",
			"args": ["/path/to/TranscriptionTools-MCP/build/index.js"],
			"disabled": false,
			"autoApprove": []
		},
		"daytona-interpreter": {
			"command": "/Users/USER/.local/bin/uv",
			"args": ["--directory", "/Users/USER/dev/daytona-mcp-interpreter", "run", "src/daytona_mcp_interpreter/server.py"],
			"env": {
				"PYTHONUNBUFFERED": "1",
				"MCP_DAYTONA_API_KEY": "api_key",
				"MCP_DAYTONA_SERVER_URL": "api_server_url",
				"MCP_DAYTONA_TIMEOUT": "30.0",
				"MCP_VERIFY_SSL": "false",
				"PATH": "/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
			}
		},
		"unitycatalog": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "mcp/unitycatalog", "--uc_server", "<your unity catalog url>", "--uc_catalog", "<your catalog name>", "--uc_schema", "<your schema name>"]
		},
		"zig": {
			"command": "node",
			"args": ["/path/to/zig-mcp-server/build/index.js"],
			"env": {
				"GITHUB_TOKEN": "your_token_here",
				"NODE_OPTIONS": "--experimental-vm-modules"
			},
			"restart": true
		},
		"runpod": {
			"command": "node",
			"args": ["/path/to/runpod-mcp-server/build/index.js"],
			"env": {
				"RUNPOD_API_KEY": "your_api_key_here"
			}
		},
		"code-analysis": {
			"command": "uv",
			"args": ["--directory", "/PATH/TO/YOUR/REPO", "run", "code_analysis.py"]
		},
		"file-preview": {
			"command": "node",
			"args": ["/path/to/mcp-file-preview/build/index.js"]
		},
		"alpaca": {
			"command": "python",
			"args": ["/path/to/alpaca_mcp_server.py"],
			"env": {
				"API_KEY_ID": "your_alpaca_api_key",
				"API_SECRET_KEY": "your_alpaca_secret_key"
			}
		},
		"textEditor": {
			"command": "npx",
			"args": ["-y", "mcp-server-text-editor"]
		},
		"oura": {
			"command": "uvx",
			"args": ["oura-mcp-server"],
			"env": {
				"OURA_API_TOKEN": "YOUR_OURA_API_TOKEN"
			}
		},
		"cinema4d": {
			"command": "cinema4d-mcp-wrapper",
			"args": []
		},
		"airflow-mcp-server": {
			"command": "uvx",
			"args": ["airflow-mcp-server", "--base-url", "http://localhost:8080", "--auth-token", "<jwt_token>"]
		},
		"bio-mcp": {
			"command": "node",
			"args": ["/path/to/your/build/index.js"]
		},
		"airylark-translation": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "TRANSLATION_API_KEY", "-e", "TRANSLATION_MODEL", "-e", "TRANSLATION_BASE_URL", "wizdy/airylark-mcp-server"],
			"env": {
				"TRANSLATION_API_KEY": "<YOUR_API_KEY>",
				"TRANSLATION_MODEL": "<YOUR_MODEL>",
				"TRANSLATION_BASE_URL": "<YOUR_API_URL>"
			}
		},
		"coding-assistant": {
			"command": "node",
			"args": ["/path/to/coding-assistant-server/build/index.js"],
			"env": {
				"OPENAI_API_KEY": "your_openai_api_key_here"
			}
		},
		"evo-api": {
			"url": "http://localhost:3000"
		},
		"second-opinion": {
			"command": "node",
			"args": ["/path/to/second-opinion-server/build/index.js"],
			"env": {
				"GEMINI_API_KEY": "your-gemini-api-key",
				"PERPLEXITY_API_KEY": "your-perplexity-api-key",
				"STACK_EXCHANGE_KEY": "your-stack-exchange-key"
			}
		},
		"mcp-kibela": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "KIBELA_TEAM", "-e", "KIBELA_TOKEN", "ghcr.io/kj455/mcp-kibela:latest"],
			"env": {
				"KIBELA_TEAM": "your-team-name from https://[team-name].kibe.la",
				"KIBELA_TOKEN": "your-token"
			}
		},
		"Uniswap-Trader-MCP": {
			"command": "node",
			"args": ["path/to/uniswap-trader-mcp/server/index.js"],
			"env": {
				"INFURA_KEY": "your infura key",
				"WALLET_PRIVATE_KEY": "your private key"
			}
		},
		"lunchmoney": {
			"command": "npx",
			"args": ["-y", "lunchmoney-mcp-server"],
			"env": {
				"LUNCHMONEY_TOKEN": "your_token_here"
			}
		},
		"todoist-mcp": {
			"command": "C:/Users/<username>/path/to/todoist-mcp/.venv/Scripts/python.exe",
			"args": ["C:/Users/<username>/path/to/todoist-mcp/server.py"],
			"env": {
				"TODOIST_API_TOKEN": "your-api-token-here"
			}
		},
		"autodesk-platform-services": {
			"command": "node",
			"args": ["/absolute/path/to/aps-mcp-server/build/server.js"]
		},
		"lighthouse": {
			"command": "path/to/node/installation",
			"args": ["path/to/this/folder/mcp-lighthouse/dist/index.js"]
		},
		"pure.md": {
			"command": "npx",
			"args": ["-y", "puremd-mcp"],
			"env": {
				"PUREMD_API_KEY": "<TOKEN>"
			}
		},
		"GraphRAG": {
			"command": "/path/to/graphrag_mcp/run_server.sh",
			"args": []
		},
		"Crawl4AI": {
			"command": "uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/PARENT/FOLDER/crawl4ai-mcp", "run", "main.py"]
		},
		"framer-plugin": {
			"command": "node",
			"args": ["/path/to/framer-plugin-mcp/build/index.js"]
		},
		"cal2prompt": {
			"command": "/Users/username/.cargo/bin/cal2prompt",
			"args": ["mcp"],
			"env": {
				"HOME": "/Users/username"
			}
		},
		"semgrep": {
			"command": "node",
			"args": ["/your_path/mcp-server-semgrep/build/index.js"],
			"env": {
				"SEMGREP_APP_TOKEN": "your_semgrep_app_token"
			}
		},
		"yaraflux-mcp-server": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "--env", "JWT_SECRET_KEY=your-secret-key", "--env", "ADMIN_PASSWORD=your-admin-password", "--env", "DEBUG=true", "--env", "PYTHONUNBUFFERED=1", "threatflux/yaraflux-mcp-server:latest"],
			"disabled": false,
			"autoApprove": ["scan_url", "scan_data", "list_yara_rules", "get_yara_rule"]
		},
		"outlook": {
			"command": "python",
			"args": ["Your path\\outlook_mcp_server.py"],
			"env": {}
		},
		"beyond-social": {
			"command": "/usr/local/bin/node",
			"args": ["/full/path/to/beyond-mcp-server/dist/index.js", "--stdio"],
			"env": {
				"NEYNAR_API_KEY": "YOUR_API_KEY_HERE",
				"ENABLE_FARCASTER": "true",
				"ENABLE_TWITTER": "false"
			}
		},
		"heybeauty-mcp": {
			"command": "node",
			"args": ["/path/to/heybeauty-mcp/build/index.js"]
		},
		"Gravitino": {
			"command": "uv",
			"args": ["--directory", "/Users/user/workspace/mcp-server-gravitino", "run", "--with", "fastmcp", "--with", "httpx", "--with", "mcp-server-gravitino", "python", "-m", "mcp_server_gravitino.server"],
			"env": {
				"GRAVITINO_URI": "http://localhost:8090",
				"GRAVITINO_USER_NAME": "admin",
				"GRAVITINO_PASSWORD": "admin",
				"GRAVITINO_METALAKE": "metalake_demo"
			}
		},
		"mcp-server-helius": {
			"command": "npx",
			"args": ["@dcspark/mcp-server-helius"],
			"env": {
				"HELIUS_API_KEY": "your-helius-api-key"
			}
		},
		"sendgrid": {
			"command": "node",
			"args": ["/path/to/sendgrid-mcp/build/index.js"],
			"env": {
				"SENDGRID_API_KEY": "your-api-key-here"
			},
			"disabled": false,
			"autoApprove": ["list_contacts", "list_contact_lists", "list_templates", "list_single_sends", "get_single_send", "list_verified_senders", "list_suppression_groups", "get_stats", "validate_email"]
		},
		"newrelic": {
			"command": "uv",
			"args": ["--directory", "/absolute/path/to/newrelic-mcp", "run", "newrelic_logs_server.py"],
			"env": {
				"NEW_RELIC_API_KEY": "your-api-key-here",
				"NEW_RELIC_ACCOUNT_ID": "your-account-id-here"
			}
		},
		"biorxiv": {
			"command": "bash",
			"args": ["-c", "source /home/YOUR/PATH/mcp-server-bioRxiv/.venv/bin/activate && python /home/YOUR/PATH/mcp-server-bioRxiv/biorxiv_server.py"],
			"env": {},
			"disabled": false,
			"autoApprove": []
		},
		"app-insight-mcp": {
			"command": "npx",
			"args": ["-y", "@jeromyfu/app-insight-mcp"]
		},
		"inspect_excel_xlsx_file": {
			"command": "/Users/jonas/repos/openpyxl_mcp_server/venv/bin/python",
			"args": ["/Users/jonas/repos/openpyxl_mcp_server/openpyxl_mcp_server.py"]
		},
		"Token-Minter-MCP": {
			"command": "node",
			"args": ["path/to/token-minter-mcp/server/index.js"],
			"env": {
				"INFURA_KEY": "your infura key",
				"PRIVATE_KEY": "your private key"
			}
		},
		"kuzu": {
			"command": "docker",
			"args": ["run", "-v", "{Absolute Path to the Kuzu database}:/database", "--rm", "-i", "kuzudb/mcp-server"]
		},
		"kintone": {
			"command": "C:\\path\\to\\mcp-server-kintone.exe",
			"env": {
				"KINTONE_BASE_URL": "https://<domain>.cybozu.com",
				"KINTONE_USERNAME": "<your username>",
				"KINTONE_PASSWORD": "<your password>",
				"KINTONE_API_TOKEN": "<your api token>, <another api token>, ...",
				"KINTONE_ALLOW_APPS": "1, 2, 3, ...",
				"KINTONE_DENY_APPS": "4, 5, ..."
			}
		},
		"mcp2serial": {
			"command": "uvx",
			"args": ["mcp2serial"]
		},
		"traveler": {
			"command": "npx",
			"args": ["-y", "@mfukushim/map-traveler-mcp"]
		},
		"gitlab": {
			"command": "node",
			"args": ["/path/to/mcp-gitlab/build/index.js"],
			"env": {
				"GITLAB_API_TOKEN": "YOUR_GITLAB_API_TOKEN",
				"GITLAB_API_URL": "https://gitlab.com/api/v4"
			}
		},
		"gitlab-readonly": {
			"command": "npx",
			"args": ["-y", "@yoda.digital/gitlab-mcp-server"],
			"env": {
				"GITLAB_PERSONAL_ACCESS_TOKEN": "your_token_here",
				"GITLAB_API_URL": "https://gitlab.com/api/v4",
				"GITLAB_READ_ONLY_MODE": "true"
			},
			"alwaysAllow": [],
			"disabled": false
		},
		"nationalparks": {
			"command": "npx",
			"args": ["-y", "mcp-server-nationalparks"],
			"env": {
				"NPS_API_KEY": "YOUR_NPS_API_KEY"
			}
		},
		"mcp-server-toolhouse": {
			"command": "uv",
			"args": ["--directory", "/path/to/this/folder/mcp-server-toolhouse", "run", "mcp_server_toolhouse"],
			"env": {
				"TOOLHOUSE_API_KEY": "your_toolhouse_api_key",
				"TOOLHOUSE_BUNDLE": "a_bundle_name"
			}
		},
		"paddle": {
			"command": "node",
			"args": ["path/to/paddle-mcp-server/build/index.js"],
			"env": {
				"PADDLE_API_KEY": "your_api_key",
				"PADDLE_ENVIRONMENT": "sandbox"
			}
		},
		"formula1": {
			"command": "node",
			"args": ["/Users/rakeshgangwar/Documents/Cline/MCP/f1-mcp-server/build/index.js"],
			"disabled": false,
			"autoApprove": []
		},
		"ragie": {
			"command": "npx",
			"args": ["-y", "@ragieai/mcp-server", "--partition", "optional_partition_id"],
			"env": {
				"RAGIE_API_KEY": "your_api_key"
			}
		},
		"storyscan-mcp": {
			"command": "uv",
			"args": ["--directory", "~/path/to/story-mcp-hub/storyscan-mcp", "run", "server.py"]
		},
		"story-sdk-mcp": {
			"command": "uv",
			"args": ["--directory", "~/path/to/story-mcp-hub/story-sdk-mcp", "run", "server.py"]
		},
		"apple-notifier": {
			"command": "apple-notifier-mcp"
		},
		"TIDAL Integration": {
			"command": "/path/to/your/uv",
			"env": {
				"TIDAL_MCP_PORT": "5100"
			},
			"args": ["run", "--with", "requests", "--with", "mcp[cli]", "--with", "flask", "--with", "tidalapi", "mcp", "run", "/path/to/your/project/tidal-mcp/mcp_server/server.py"]
		},
		"1mcp": {
			"type": "http",
			"url": "http://localhost:3050/sse"
		},
		"web-server": {
			"command": "uvx",
			"args": ["mcp-server-fetch"],
			"tags": ["network", "web"],
			"disabled": false
		},
		"file-server": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-filesystem", "~/Downloads"],
			"tags": ["filesystem"],
			"disabled": false
		},
		"mcp-server-fetch": {
			"command": "uvx",
			"args": ["mcp-server-fetch"],
			"disabled": false
		},
		"server-memory": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-memory"],
			"disabled": false
		},
		"activitywatch": {
			"command": "node",
			"args": ["/path/to/activitywatch-mcp-server/dist/index.js"]
		},
		"shell-mcp-server": {
			"command": "uv",
			"args": ["--directory", "/path/to/shell-mcp-server", "run", "shell-mcp-server", "/path/to/allowed/dir1", "/path/to/allowed/dir2", "--shell", "bash", "/bin/bash", "--shell", "zsh", "/bin/zsh"]
		},
		"k8s_pilot": {
			"command": "uv",
			"args": ["--directory", "<path-to-cloned-repo>/k8s-pilot", "run", "--with", "mcp[cli]", "mcp", "run", "k8s_pilot.py"]
		},
		"chain-of-draft-prompt-tool": {
			"command": "node",
			"args": ["/path/to/dist/index.js"],
			"enabled": true,
			"env": {
				"ANTHROPIC_API_KEY": "your_api_key_here"
			}
		},
		"discogs": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "--env-file", "/PATH/TO/YOUR/PROJECT/FOLDER/.env", "discogs-mcp-server:latest"]
		},
		"earthdata": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "datalayer/earthdata-mcp-server:latest"]
		},
		"code_knowledge": {
			"command": "python",
			"args": ["-m", "code_knowledge_tool.mcp_tool"],
			"env": {
				"PYTHONPATH": "${workspaceFolder}"
			}
		},
		"file-merger": {
			"command": "npx",
			"args": ["-y", "@exoticknight/mcp-file-merger", "/path/to/allowed/dir"]
		},
		"placid": {
			"command": "npx",
			"args": ["@felores/placid-mcp-server"],
			"env": {
				"PLACID_API_TOKEN": "your-api-token"
			}
		},
		"postman-ai-tools": {
			"command": "node",
			"args": ["/path/to/postman-tool-generation-server/build/index.js"],
			"env": {
				"POSTMAN_API_KEY": "your-postman-api-key"
			},
			"disabled": false,
			"autoApprove": []
		},
		"mcp_server_mariadb": {
			"command": "/PATH/TO/uv",
			"args": ["--directory", "/YOUR/SOURCE/PATH/mcp-server-mariadb/src/mcp_server_mariadb", "run", "server.py"],
			"env": {
				"MARIADB_HOST": "127.0.0.1",
				"MARIADB_USER": "USER",
				"MARIADB_PASSWORD": "PASSWORD",
				"MARIADB_DATABASE": "DATABASE",
				"MARIADB_PORT": "3306"
			}
		},
		"ragdocs": {
			"command": "node",
			"args": ["@mcpservers/ragdocs"],
			"env": {
				"QDRANT_URL": "http://127.0.0.1:6333",
				"EMBEDDING_PROVIDER": "openai",
				"OPENAI_API_KEY": "your-api-key"
			}
		},
		"HeyGen": {
			"command": "uvx",
			"args": ["heygen-mcp"],
			"env": {
				"HEYGEN_API_KEY": "<insert-your-api-key-here>"
			}
		},
		"attio": {
			"command": "npx",
			"args": ["attio-mcp-server"],
			"env": {
				"ATTIO_API_KEY": "YOUR_ATTIO_API_KEY"
			}
		},
		"music-analysis": {
			"command": "uvx",
			"args": ["-n", "mcp-music-analysis"]
		},
		"sqlMcpService": {
			"command": "path/to/your/MCPSqlServer.exe",
			"args": [],
			"description": "SQL Server MCP Service"
		},
		"ortools": {
			"command": "python",
			"args": ["-m", "mcp_ortools.server"]
		},
		"zoom-mcp-server": {
			"command": "npx",
			"args": ["-y", "@yitianyigexiangfa/zoom-mcp-server@latest"],
			"env": {
				"ZOOM_ACCOUNT_ID": "${ZOOM_ACCOUNT_ID}",
				"ZOOM_CLIENT_ID": "${ZOOM_CLIENT_ID}",
				"ZOOM_CLIENT_SECRET": "${ZOOM_CLIENT_SECRET}"
			}
		},
		"perplexity": {
			"command": "node",
			"args": ["path/to/build/index.js"],
			"env": {
				"PERPLEXITY_API_KEY": "your-api-key"
			},
			"disabled": false,
			"alwaysAllow": []
		},
		"code-index": {
			"command": "uvx",
			"args": ["code-index-mcp"]
		},
		"okta": {
			"command": "node",
			"args": ["PATH_TO_PROJECT_DIRECTORY/dist/index.js"],
			"env": {
				"OKTA_ORG_URL": "https://your-domain.okta.com",
				"OKTA_API_TOKEN": "your-api-token"
			}
		},
		"node-fetch": {
			"command": "node",
			"args": ["dist/index.js"]
		},
		"ripgrep": {
			"command": "npx",
			"args": ["-y", "mcp-ripgrep@latest"]
		},
		"raygun": {
			"command": "/path/to/server-raygun/build/index.js",
			"env": {
				"RAYGUN_PAT_TOKEN": "your-pat-token-ken"
			}
		},
		"ucpf": {
			"command": "node",
			"args": ["path/to/DeepLucid3D-MCP/build/index.js"],
			"env": {},
			"disabled": false,
			"autoApprove": []
		},
		"siyuan": {
			"type": "sse",
			"command": "http://127.0.0.1:16806/sse",
			"args": [""],
			"env": {},
			"auto_approve": false
		},
		"kafka": {
			"command": "python",
			"args": ["<PATH TO PROJECTS>/main.py"]
		},
		"chat-analysis": {
			"command": "python",
			"args": ["-m", "mcp_chat_analysis.server"],
			"env": {
				"QDRANT_URL": "http://localhost:6333",
				"NEO4J_URL": "bolt://localhost:7687",
				"NEO4J_USER": "neo4j",
				"NEO4J_PASSWORD": "your-password"
			}
		},
		"yfinance-trader": {
			"command": "py",
			"args": ["-3.13", "path/to/your/main.py"]
		},
		"hubspot": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "buryhuang/mcp-hubspot:latest"]
		},
		"binance": {
			"command": "npx",
			"args": ["-y", "@snjyor/binance-mcp@latest"]
		},
		"zotero-mcp-server": {
			"command": "bash",
			"args": ["-c", "cd /Users/shahswai/personal/zotero-mcp-server && source .venv/bin/activate && python -m zotero_mcp.server"]
		},
		"GitHubProjects": {
			"command": "bun",
			"args": ["/path/to/your/directory/mcp-github-projects-main/build/index.js"],
			"env": {
				"GITHUB_TOKEN": "your_github_personal_access_token",
				"GITHUB_OWNER": "your_github_username_or_org"
			}
		},
		"Strava": {
			"command": "python",
			"args": ["src/strava_server.py"],
			"cwd": "/path/to/strava_mcp",
			"env": {
				"STRAVA_CLIENT_ID": "your_client_id",
				"STRAVA_CLIENT_SECRET": "your_client_secret",
				"STRAVA_REFRESH_TOKEN": "your_refresh_token"
			}
		},
		"dify": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-dify", "https://your-dify-api-endpoint", "your-dify-api-key"]
		},
		"zip-mcp": {
			"command": "zip-mcp",
			"args": []
		},
		"alibaba_cloud_observability": {
			"command": "uv",
			"args": ["run", "mcp-server-aliyun-observability"],
			"env": {
				"ALIBABA_CLOUD_ACCESS_KEY_ID": "<your_access_key_id>",
				"ALIBABA_CLOUD_ACCESS_KEY_SECRET": "<your_access_key_secret>"
			}
		},
		"nyt": {
			"command": "node",
			"args": ["path/to/your/build/index.js"],
			"env": {
				"NYTIMES_API_KEY": "your_api_key_here"
			}
		},
		"elasticsearch-mcp": {
			"command": "node",
			"args": ["/path/to/your/project/dist/index.js"],
			"env": {
				"ES_HOST": "your-elasticsearch-host",
				"ES_API_KEY": "your-api-key"
			}
		},
		"mcp-reasoner": {
			"command": "node",
			"args": ["C:\\Users\\[Username]\\path\\to\\mcp-reasoning-server\\dist\\index.js"]
		},
		"speckle": {
			"command": "uv",
			"args": ["--directory", "/path/to/speckle-mcp", "run", "speckle_server.py"],
			"env": {
				"SPECKLE_TOKEN": "YOUR_SPECKLE_API_TOKEN_HERE",
				"SPECKLE_SERVER": "https://app.speckle.systems"
			}
		},
		"aws-resources": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "AWS_PROFILE=default", "-v", "~/.aws:/root/.aws", "buryhuang/mcp-server-aws-resources:latest"]
		},
		"xiaohongshu MCP": {
			"command": "/\u7edd\u5bf9\u8def\u5f84/\u5230/venv/bin/python3",
			"args": ["/\u7edd\u5bf9\u8def\u5f84/\u5230/xiaohongshu_mcp.py", "--stdio"]
		},
		"mcp-chrome-google-search": {
			"command": "npx",
			"args": ["-y", "@cmann50/mcp-chrome-google-search"]
		},
		"zkproof": {
			"command": "node",
			"args": ["/path/to/zkMCP/server/build/index.js"],
			"env": {
				"ZKINTRO_DIR": "/path/to/circom/projects"
			},
			"disabled": false,
			"autoApprove": []
		},
		"claude-server": {
			"command": "node",
			"args": ["/path/to/claude-server/build/index.js"]
		},
		"descope": {
			"command": "node",
			"args": ["/path/to/descope-mcp-server/build/index.js"],
			"env": {
				"DESCOPE_PROJECT_ID": "your-descope-project-id-here",
				"DESCOPE_MANAGEMENT_KEY": "your-descope-management-key-here"
			}
		},
		"systemprompt-agent-server": {
			"command": "/path/to/systemprompt-agent-server/build/index.js"
		},
		"okx": {
			"command": "node",
			"args": ["/path/to/okx-mcp-server/build/index.js"],
			"disabled": false,
			"autoApprove": []
		},
		"terragrunt_docs": {
			"command": "deno",
			"args": ["run", "-A", "jsr:@excoriate/mcp-terragrunt-docs@0.1.0"],
			"env": {
				"GITHUB_TOKEN": "<YOUR_TOKEN>"
			}
		},
		"falkordb": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-p", "3000:3000", "--env-file", ".env", "falkordb-mcpserver", "falkordb://host.docker.internal:6379"]
		},
		"sleep": {
			"command": "node",
			"args": ["/path/to/sleep-server/build/index.js"],
			"disabled": false,
			"autoApprove": [],
			"timeout": 300
		},
		"mcp-server-oracle": {
			"command": "uvx",
			"args": ["mcp-server-oracle"],
			"env": {
				"ORACLE_CONNECTION_STRING": "username/password@hostname:port/service_name"
			}
		},
		"qasphere": {
			"command": "npx",
			"args": ["-y", "qasphere-mcp"],
			"env": {
				"QASPHERE_TENANT_URL": "your-company.region.qasphere.com",
				"QASPHERE_API_KEY": "your-api-key"
			}
		},
		"semanticscholar": {
			"command": "bash",
			"args": ["-c", "source /home/YOUR/PATH/.venv/bin/activate && python /home/YOUR/PATH/semanticscholar_mcp_server.py"],
			"env": {},
			"disabled": false,
			"autoApprove": []
		},
		"powerpoint_mcp_win32": {
			"command": "uv",
			"args": ["run", "mcp_powerpoint_server_win32.py"],
			"cwd": "C:\\path\\to\\your\\workspace"
		},
		"excel_mcp_win32": {
			"command": "uv",
			"args": ["run", "mcp_excel_server_win32.py"],
			"cwd": "C:\\path\\to\\your\\workspace"
		},
		"Osmosis": {
			"command": "npx",
			"args": ["-y", "@osmosis-agent-toolkit/mcp"],
			"env": {
				"OSMOSIS_MNEMONIC": "<your mnemonic here>"
			}
		},
		"Bonsai-mcp": {
			"command": "uv",
			"args": ["--directory", "\\your\\path\\to\\Bonsai_mcp", "run", "tools.py"]
		},
		"PubDev MCP": {
			"command": "dart [path-to-repo]/bin/pubdev_mcp.dart",
			"workingDirectory": "[path-to-repo]"
		},
		"log-reader": {
			"command": "node",
			"args": ["/absolute/path/MCP-Analyzer/build"]
		},
		"Confluence communication server": {
			"command": "node",
			"args": ["/PATH_TO_THE_PROJECT/build/index.js"],
			"env": {
				"CONFLUENCE_URL": "https://XXXXXXXX.atlassian.net/wiki",
				"CONFLUENCE_API_MAIL": "Your email",
				"CONFLUENCE_API_KEY": "KEY_FROM: https://id.atlassian.com/manage-profile/security/api-tokens"
			}
		},
		"cfbd-mcp-server": {
			"command": "uv",
			"args": ["--directory", "/full/path/to/cfbd-mcp-server", "run", "cfbd-mcp-server"],
			"env": {
				"CFB_API_KEY": "xxx",
				"PATH": "/full/path/to/python"
			}
		},
		"documentation": {
			"command": "npx",
			"args": ["-y", "mcp-documentation-server"],
			"env": {
				"BRAVE_API_KEY": "<YOUR_BRAVE_API_KEY>"
			}
		},
		"nuanced": {
			"command": "uv",
			"args": ["--directory", "/path/to/nuanced-mcp", "run", "nuanced_mcp_server.py"]
		},
		"starknet": {
			"command": "bun",
			"args": ["/PATH/TO/THIS/REPO/starknet-mcp/index.ts"],
			"env": {
				"STARKNET_RPC_URL": "https://starknet-mainnet.public.blastapi.io/rpc/v0_7"
			}
		},
		"ollama-deep-researcher": {
			"command": "docker",
			"args": ["exec", "-i", "ollama-deep-researcher-mcp", "node", "build/index.js"],
			"env": {}
		},
		"mcp-firebird": {
			"command": "npx",
			"args": ["mcp-firebird", "--host", "localhost", "--port", "3050", "--database", "C:\\path\\to\\database.fdb", "--user", "SYSDBA", "--password", "masterkey"],
			"type": "stdio"
		},
		"opentk-mcp-local": {
			"command": "node",
			"args": ["/absolute/path/to/your/opentk-mcp/dist/index.js"]
		},
		"youtube-sheets": {
			"command": "node",
			"args": ["path/to/youtube-sheets-server/build/index.js"],
			"env": {
				"YOUTUBE_API_KEY": "your-youtube-api-key",
				"SPREADSHEET_ID": "your-spreadsheet-id"
			},
			"disabled": false,
			"alwaysAllow": []
		},
		"pinner-mcp-stdio-server": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "ghcr.io/safedep/pinner-mcp:latest"]
		},
		"github-issue": {
			"command": "npx",
			"args": ["mcp-github-issue"]
		},
		"command": "image-generator",
		"memex": {
			"command": "uv",
			"args": ["--directory", "PATH_TO_LOCAL_MEMEX_REPO", "run", "mcp-memex", "--index", "PATH_TO_MEMEX_INDEX", "--workspace", "PATH_TO_OBSIDIAN_VAULT"],
			"env": {
				"ANTHROPIC_API_KEY": "YOUR-API-KEY",
				"FIRECRAWL_API_KEY": "YOUR-API-KEY",
				"VOYAGE_API_KEY": "YOUR-API-KEY"
			}
		},
		"tavily_search": {
			"command": "uv",
			"args": ["--directory", "%USERPROFILE%/Documents/GitHub/mcp-tavily-search", "run", "python", "main.py"]
		},
		"mcp-wsl-exec": {
			"command": "npx",
			"args": ["-y", "mcp-wsl-exec"]
		},
		"chain-of-draft": {
			"command": "node",
			"args": ["/absolute/path/to/cod/index.js"],
			"env": {
				"ANTHROPIC_API_KEY": "your_api_key_here"
			}
		},
		"cos-mcp": {
			"command": "node",
			"args": ["${your work space}/dist/index.js"]
		},
		"quantum-simulator": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-v", "/tmp:/data/quantum_simulator_results", "-e", "HOST_OUTPUT_DIR=/tmp", "ychen94/quantum-simulator-mcp:latest"]
		},
		"slicer": {
			"command": "uvx",
			"args": ["mcp-slicer"]
		},
		"vercel": {
			"command": "npx",
			"args": ["vercel-mcp VERCEL_API_KEY=<YOUR_API_KEY>"]
		},
		"yourware-mcp": {
			"command": "uvx",
			"args": ["yourware-mcp@latest", "stdio"],
			"env": {}
		},
		"nwc": {
			"command": "npx",
			"args": ["-y", "@getalby/nwc-mcp-server"],
			"env": {
				"NWC_CONNECTION_STRING": "YOUR NWC CONNECTION STRING HERE"
			}
		},
		"adb-mysql-mcp-server": {
			"command": "uv",
			"args": ["run", "--with", "adb-mysql-mcp-server", "adb-mysql-mcp-server"],
			"env": {
				"ADB_MYSQL_HOST": "host",
				"ADB_MYSQL_PORT": "port",
				"ADB_MYSQL_USER": "database_user",
				"ADB_MYSQL_PASSWORD": "database_password",
				"ADB_MYSQL_DATABASE": "database"
			}
		},
		"instagram-engagement": {
			"command": "node",
			"args": ["/path/to/instagram-engagement-mcp/build/index.js"],
			"env": {
				"INSTAGRAM_USERNAME": "your_instagram_username",
				"INSTAGRAM_PASSWORD": "your_instagram_password"
			},
			"disabled": false,
			"autoApprove": []
		},
		"unipile": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "UNIPILE_DSN=your_dsn_here", "-e", "UNIPILE_API_KEY=your_api_key_here", "buryhuang/mcp-unipile:latest"]
		},
		"outlook-email": {
			"command": "C:/Users/username/path/to/mcp-server-outlook-email/.venv/Scripts/python",
			"args": ["C:/Users/username/path/to/mcp-server-outlook-email/src/mcp_server.py"],
			"env": {
				"MONGODB_URI": "mongodb://localhost:27017/MCP?authSource=admin",
				"SQLITE_DB_PATH": "C:\\Users\\username\\path\\to\\mcp-server-outlook-email\\data\\emails.db",
				"EMBEDDING_BASE_URL": "http://localhost:11434",
				"EMBEDDING_MODEL": "nomic-embed-text",
				"COLLECTION_NAME": "outlook-emails",
				"PROCESS_DELETED_ITEMS": "false"
			}
		},
		"voyp-mcp": {
			"command": "npx",
			"args": ["-y", "voyp-mcp"],
			"env": {
				"VOYP_API_KEY": "your-VOYP-api-key"
			}
		},
		"voyp": {
			"command": "npx",
			"args": ["/path/to/voyp-mcp/build/index.js"],
			"env": {
				"VOYP_API_KEY": "your-VOYP-api-key"
			}
		},
		"vibe-coder-mcp": {
			"command": "/path/to/vibe-coder-mcp/build/mcp-server.js"
		},
		"my-wazuh-agent": {
			"command": "/full/path/to/python",
			"args": ["mcp_wazuh_server.py"]
		},
		"leetcode": {
			"command": "node",
			"args": ["/path/to/dist/index.js"]
		},
		"openfga-mcp": {
			"command": "uvx",
			"args": ["openfga-mcp@latest"]
		},
		"fastn": {
			"command": "/path/to/your/uv",
			"args": ["--directory", "/path/to/your/fastn-server", "run", "fastn-server.py", "--api_key", "YOUR_API_KEY", "--space_id", "YOUR_WORKSPACE_ID"]
		},
		"FRED Macroeconomic Data Server": {
			"command": "/path/to/your/.local/bin/uv",
			"args": ["--directory", "/path/to/your/WM_mcp", "run", "fred_macroeco_server.py"]
		},
		"langflow-doc-qa-server": {
			"command": "node",
			"args": ["/path/to/doc-qa-server/build/index.js"],
			"env": {
				"API_ENDPOINT": "http://127.0.0.1:7860/api/v1/run/480ec7b3-29d2-4caa-b03b-e74118f35fac"
			}
		},
		"tasks-organizer": {
			"command": "python",
			"args": ["-m", "tasks_organizer"]
		},
		"influxdb": {
			"command": "node",
			"args": ["/path/to/influxdb-mcp-server/src/index.js"],
			"env": {
				"INFLUXDB_TOKEN": "your_token",
				"INFLUXDB_URL": "http://localhost:8086",
				"INFLUXDB_ORG": "your_org"
			}
		},
		"daraja": {
			"command": "uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/PARENT/FOLDER/DarajaMCP", "run", "main.py"]
		},
		"DarajaMCP": {
			"command": "/ABSOLUTE/PATH/TO/PARENT/.local/bin/uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/PARENT/FOLDER/DarajaMCP", "run", "main.py"]
		},
		"draw-things": {
			"command": "draw-things-mcp-cursor",
			"args": []
		},
		"myai-memory-sync": {
			"command": "npx",
			"args": ["-y", "myai"],
			"env": {
				"TEMPLATE_PATH": "/path/to/custom/template.md",
				"ENABLE_ANTHROPIC": "true",
				"ANTHROPIC_API_KEY": "your-api-key-here"
			}
		},
		"graph-memory": {
			"command": "npx",
			"args": ["-y", "@izumisy/mcp-neo4j-memory-server"],
			"env": {
				"NEO4J_URI": "neo4j://localhost:7687",
				"NEO4J_USER": "neo4j",
				"NEO4J_PASSWORD": "password",
				"NEO4J_DATABASE": "memory"
			}
		},
		"mcp-timeplus": {
			"command": "uvx",
			"args": ["mcp-timeplus"],
			"env": {
				"TIMEPLUS_HOST": "<timeplus-host>",
				"TIMEPLUS_PORT": "<timeplus-port>",
				"TIMEPLUS_USER": "<timeplus-user>",
				"TIMEPLUS_PASSWORD": "<timeplus-password>",
				"TIMEPLUS_SECURE": "false",
				"TIMEPLUS_VERIFY": "true",
				"TIMEPLUS_CONNECT_TIMEOUT": "30",
				"TIMEPLUS_SEND_RECEIVE_TIMEOUT": "30",
				"TIMEPLUS_READ_ONLY": "false",
				"TIMEPLUS_KAFKA_CONFIG": "{\"bootstrap.servers\":\"a.aivencloud.com:28864\", \"sasl.mechanism\":\"SCRAM-SHA-256\",\"sasl.username\":\"avnadmin\", \"sasl.password\":\"thePassword\",\"security.protocol\":\"SASL_SSL\",\"enable.ssl.certificate.verification\":\"false\"}"
			}
		},
		"pocket": {
			"command": "npx",
			"args": ["tsx", "/path/to/mcp-pocket/index.ts"],
			"env": {
				"POCKET_CONSUMER_KEY": "your-pocket-consumer-key",
				"POCKET_ACCESS_TOKEN": "your-pocket-access-token"
			}
		},
		"volatility3": {
			"command": "absolute/path/to/virtual/environment/bin/python3",
			"args": ["absolute/path/to/bridge_mcp_volatility.py"]
		},
		"consul-mcp": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/PARENT/FOLDER/consul-mcp-server/build/index.js"]
		},
		"whattimeisit": {
			"command": "uv",
			"args": ["--directory", "path/to/whattimeisit-mcp", "run", "main.py"]
		},
		"limitless": {
			"command": "node",
			"args": ["<FULL_FILE_PATH_TO_DIST_SERVER.js>"],
			"env": {
				"LIMITLESS_API_KEY": "<YOUR_LIMITLESS_API_KEY_HERE>"
			}
		},
		"some_other_server": {
			"command": "...",
			"args": ["..."],
			"env": {
				"EXAMPLE_VAR": "value"
			}
		},
		"hue": {
			"command": "node",
			"args": ["/absolute/path/to/build/index.js"]
		},
		"giphy": {
			"command": "npx",
			"args": ["-y", "mcp-server-giphy"],
			"env": {
				"GIPHY_API_KEY": "<YOUR_API_KEY>"
			}
		},
		"mcp-gameboy": {
			"command": "node",
			"args": ["/path/to/mcp-gameboy/dist/index.js"],
			"disabled": false,
			"autoApprove": []
		},
		"datagov": {
			"command": "datagov-mcp-server",
			"args": [],
			"env": {}
		},
		"youtube-music-server": {
			"command": "/path/to/youtube-music-server/build/index.js"
		},
		"yfmcp": {
			"command": "uvx",
			"args": ["yfmcp@latest"]
		},
		"coda": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "API_KEY", "-e", "DOC_ID", "reaperberri/coda-mcp:latest"],
			"env": {
				"API_KEY": "...",
				"DOC_ID": "..."
			}
		},
		"moodle-mcp-server": {
			"command": "C:\\path\\to\\node.exe",
			"args": ["C:\\path\\to\\moodle-mcp-server\\build\\index.js"],
			"env": {
				"MOODLE_API_URL": "https://your-moodle.com/webservice/rest/server.php",
				"MOODLE_API_TOKEN": "your_moodle_api_token",
				"MOODLE_COURSE_ID": "your_course_id"
			},
			"disabled": false,
			"autoApprove": []
		},
		"imagegen-go": {
			"command": "/path/to/imagegen-go/bin/imagegen-go",
			"env": {
				"OPENAI_API_KEY": "your-api-key",
				"DEFAULT_DOWNLOAD_PATH": "/path/to/downloads"
			}
		},
		"mcp-wordcounter": {
			"command": "npx",
			"args": ["-y", "mcp-wordcounter"],
			"alwaysAllow": ["analyze_text"]
		},
		"querypie": {
			"command": "docker",
			"type": "stdio",
			"args": ["run", "--rm", "-e", "QUERYPIE_API_KEY=${QUERYPIE_API_KEY}", "-it", "ghcr.io/querypie/querypie-mcp-server", "https://your_querypie_url"],
			"env": {
				"QUERYPIE_API_KEY": "your_token"
			}
		},
		"Notion": {
			"command": "npx",
			"args": ["@ramidecodes/mcp-server-notion@latest", "-y", "--api-key=your-notion-integration-key"]
		},
		"rami-levy": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-rami-levy"],
			"env": {
				"RAMI_LEVY_API_KEY": "<YOUR_API_KEY>",
				"ECOM_TOKEN": "<YOUR_ECOM_TOKEN>",
				"COOKIE": "<YOUR_COOKIE>"
			}
		},
		"zendesk": {
			"command": "uv",
			"args": ["--directory", "/path/to/zendesk-mcp-server", "run", "zendesk"]
		},
		"WolframAlphaServer": {
			"command": "python3",
			"args": ["/path/to/src/core/server.py"]
		},
		"riza-server": {
			"command": "npx",
			"args": ["@riza-io/riza-mcp"],
			"env": {
				"RIZA_API_KEY": "your-api-key"
			}
		},
		"rss-crawler": {
			"command": "/path/to/bun",
			"args": ["run", "/path/to/mcp-rss-crawler/apps/mcp-server/src/mcp-cli.ts"],
			"cwd": "/path/to/mcp-rss-crawler",
			"env": {
				"PORT": "5556",
				"DB_DIR": "/path/to/mcp-rss-crawler",
				"FIRECRAWL_API_KEY": "fc-<YOUR_FIRECRAWL_API_KEY>"
			}
		},
		"agent-twitter-client-mcp": {
			"command": "npx",
			"args": ["-y", "agent-twitter-client-mcp"],
			"env": {
				"AUTH_METHOD": "cookies",
				"TWITTER_COOKIES": "[\"auth_token=YOUR_AUTH_TOKEN; Domain=.twitter.com\", \"ct0=YOUR_CT0_VALUE; Domain=.twitter.com\", \"twid=u%3DYOUR_USER_ID; Domain=.twitter.com\"]"
			}
		},
		"mcp-ankiconnect": {
			"command": "uv",
			"args": ["run", "--with", "mcp-ankiconnect", "mcp-ankiconnect"]
		},
		"bybit": {
			"command": "node",
			"args": ["/path/to/bybit-mcp/build/index.js"],
			"env": {
				"BYBIT_API_KEY": "your-api-key",
				"BYBIT_API_SECRET": "your-api-secret",
				"BYBIT_USE_TESTNET": "false"
			}
		},
		"windows": {
			"command": "uv",
			"args": ["--directory", "C:\\Users\\{name}\\Documents\\mcp-windows", "run", "mcp-windows"]
		},
		"mcp-perplexity-search": {
			"command": "wsl.exe",
			"args": ["bash", "-c", "source ~/.nvm/nvm.sh && PERPLEXITY_API_KEY=your-perplexity-api-key /home/username/.nvm/versions/node/v20.12.1/bin/npx mcp-perplexity-search"]
		},
		"UML-MCP-Server": {
			"command": "uv",
			"args": ["--directory", "/Users/yourpath/UML-MCP-Server", "run", "uml_mcp_server.py"],
			"output_dir": "/Users/yourpath/uml-output"
		},
		"cedardiff": {
			"command": "/path/to/cedardiff/build/index.js"
		},
		"geeknews-mcp-server": {
			"command": "npx",
			"args": ["-y", "@smithery/cli@latest", "run", "@the0807/geeknews-mcp-server", "--key", "smithery\uc5d0\uc11c \ubc1c\uae09 \ubc1b\uc740 \ud0a4"]
		},
		"together-image-gen": {
			"command": "npx",
			"args": ["together-mcp@latest -y"],
			"env": {
				"TOGETHER_API_KEY": "<API KEY>"
			}
		},
		"sandbox": {
			"command": "uv",
			"args": ["--directory", "/absolute/path/to/sandbox_server", "run", "sandbox_server.py"],
			"env": {
				"PYTHONPATH": "/absolute/path/to/sandbox_server"
			}
		},
		"codesavant": {
			"command": "python",
			"args": ["path/to/codesavant.py"]
		},
		"uiflowchartcreator": {
			"command": "node",
			"args": ["path/to/uiflowchartcreator/build/index.js"],
			"env": {}
		},
		"terminal-mcp": {
			"command": "node",
			"args": ["/path/to/terminal-mcp-server/build/index.js"],
			"env": {}
		},
		"terminal-mcp-sse": {
			"url": "http://localhost:8080/sse",
			"headers": {}
		},
		"ipfs": {
			"command": "npx",
			"args": ["-y", "mcp-ipfs"],
			"env": {
				"W3_LOGIN_EMAIL": "your-email@example.com"
			}
		},
		"mcp-ipfs": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-v", "/path/to/your/project:/path/to/your/project", "-e", "W3_LOGIN_EMAIL", "alexbakers/mcp-ipfs"],
			"env": {
				"W3_LOGIN_EMAIL": "your-email@example.com"
			}
		},
		"dbx": {
			"command": "node",
			"args": ["/path/to/dbx-mcp-server/build/index.js"]
		},
		"ai-expert-workflow": {
			"command": "node",
			"args": ["dist/index.js"],
			"cwd": "${workspaceFolder}",
			"env": {
				"OPENROUTER_API_KEY": "${env:OPENROUTER_API_KEY}",
				"OPENROUTER_MODEL": "tngtech/deepseek-r1t-chimera:free",
				"MAX_TOKENS": 4000,
				"TEMPERATURE": 0.7,
				"MCP_TIMEOUT": "120000",
				"DEBUG": "mcp"
			}
		},
		"taskmaster-ai": {
			"command": "npx",
			"args": ["-y", "task-master-ai"],
			"env": {
				"OPENROUTER_API_KEY": "${env:OPENROUTER_API_KEY}",
				"OPENROUTER_MODEL": "openai/gpt-4-turbo",
				"MAX_TOKENS": 8000,
				"TEMPERATURE": 0.7,
				"DEFAULT_SUBTASKS": 5,
				"DEFAULT_PRIORITY": "medium"
			}
		},
		"whimsical": {
			"command": "node",
			"args": ["/path/to/this/repo/whimsical-mcp-server/dist/index.js"]
		},
		"deltatask": {
			"command": "uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/DeltaTask", "run", "server.py"]
		},
		"code-sandbox": {
			"command": "uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/PROJECT_DIRECTORY", "run", "main.py"]
		},
		"code-context-mcp": {
			"command": "/path/to/your/node",
			"args": ["/path/to/code-context-mcp/dist/index.js"]
		},
		"graphql": {
			"command": "node",
			"args": ["/absolute/path/to/dist/graphql-mcp-server.js"],
			"env": {
				"GRAPHQL_API_ENDPOINT": "https://your-graphql-api.com/graphql",
				"GRAPHQL_API_KEY": "your-api-key-if-needed",
				"WHITELISTED_QUERIES": "[\"countries\",\"continent\",\"languages\"]"
			}
		},
		"ntfy": {
			"command": "node",
			"args": ["/path/to/ntfy-mcp-server/dist/index.js"],
			"env": {
				"NTFY_BASE_URL": "https://ntfy.sh",
				"NTFY_DEFAULT_TOPIC": "your_default_topic",
				"LOG_LEVEL": "info",
				"NODE_ENV": "production"
			}
		},
		"toolkit": {
			"command": "node",
			"args": ["node_modules/@cyanheads/toolkit-mcp-server/build/index.js"],
			"env": {
				"NODE_ENV": "production"
			}
		},
		"polygon": {
			"command": "node",
			"args": ["/path/to/polygon-mcp/build/index.js"],
			"env": {
				"SEED_PHRASE": "your twelve word seed phrase here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"dndzgz": {
			"command": "node",
			"args": ["/Users/danilat/workspace/mcp-dndzgz/index.js"],
			"env": {
				"GOOGLE_MAPS_API_KEY": "your-api-key"
			}
		},
		"project-handoffs": {
			"command": "/opt/homebrew/bin/node",
			"args": ["/path/to/project-handoffs/build/index.js"],
			"alwaysAllow": []
		},
		"deepl": {
			"command": "npx",
			"args": ["-y", "/path/to/deepl-mcp-server"],
			"env": {
				"DEEPL_API_KEY": "your-api-key-here"
			}
		},
		"hackernews": {
			"command": "npx",
			"args": ["-y", "@devabdultech/hn-mcp-server"]
		},
		"pdf2md": {
			"command": "uv",
			"args": ["--directory", "/path/to/mcp-pdf2md", "run", "pdf2md", "--output-dir", "/path/to/output"],
			"env": {
				"MINERU_API_KEY": "your_api_key_here"
			}
		},
		"gemini-image": {
			"command": "/bin/bash",
			"args": ["-c", "/path/to/your/gemini-mcp-wrapper.sh"],
			"env": {
				"GEMINI_API_KEY": "YOUR_GEMINI_API_KEY_HERE",
				"DEBUG": "true"
			}
		},
		"mcp_osv": {
			"command": "/usr/local/bin/mcp-osv",
			"args": []
		},
		"calendar": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-v", "mcp-calendar:/calendar-server", "-e", "CALENDAR_CREDENTIALS_PATH=/calendar-server/credentials.json", "mcp/calendar"]
		},
		"image-placeholder": {
			"command": "uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/PROJECT", "run", "main.py"]
		},
		"memory-cache": {
			"command": "node",
			"args": ["/path/to/ib-mcp-cache-server/build/index.js"]
		},
		"serpapi": {
			"command": "python",
			"args": ["path/to/server.py"]
		},
		"dynamodb": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "AWS_ACCESS_KEY_ID", "-e", "AWS_SECRET_ACCESS_KEY", "-e", "AWS_REGION", "-e", "AWS_SESSION_TOKEN", "mcp/dynamodb-mcp-server"],
			"env": {
				"AWS_ACCESS_KEY_ID": "your_access_key",
				"AWS_SECRET_ACCESS_KEY": "your_secret_key",
				"AWS_REGION": "your_region",
				"AWS_SESSION_TOKEN": "your_session_token"
			}
		},
		"smartlead": {
			"command": "npx",
			"args": ["smartlead-mcp-server", "start"],
			"env": {
				"SMARTLEAD_API_KEY": "your_api_key_here"
			}
		},
		"mcp-chess": {
			"command": "/path/to/mcp-chess-binary"
		},
		"Google Toolbox": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "py-mcp-naver-search"]
		},
		"mcpSandbox": {
			"command": "npx",
			"args": ["-y", "supergateway", "--sse", "http://115.190.87.78/sse?api_key=<API_KEY>"]
		},
		"jenkins-mcp": {
			"command": "uvx",
			"args": ["jenkins-mcp"],
			"env": {
				"JENKINS_URL": "https://your-jenkins-server/",
				"JENKINS_USERNAME": "your-username",
				"JENKINS_PASSWORD": "your-password",
				"JENKINS_USE_API_TOKEN": "false"
			}
		},
		"Jupiter-MCP": {
			"command": "node",
			"args": ["path/to/jupiter-mcp/server/index.js"],
			"env": {
				"SOLANA_RPC_URL": "solana rpc url you can access",
				"PRIVATE_KEY": "your private key"
			}
		},
		"nearby-search": {
			"command": "uv",
			"args": ["--directory", "path/to/nearby-search-mcp", "run", "main.py"],
			"env": {
				"GOOGLE_API_KEY": "your google api key"
			}
		},
		"supos": {
			"command": "node",
			"args": ["<local project path>//dist//index.js"],
			"env": {
				"SUPOS_API_KEY": "<API_KEY>",
				"SUPOS_API_URL": "<API_URL>",
				"SUPOS_MQTT_URL": "<MQTT_URL>"
			}
		},
		"strava": {
			"command": "java",
			"args": ["-jar", "your/path/strava-mcp-server/build/libs/strava-mcp-server-1.0.0-all.jar"]
		},
		"claude-prompts-mcp": {
			"command": "node",
			"args": ["E:\\path\\to\\claude-prompts-mcp\\server\\dist\\index.js"],
			"env": {
				"MCP_PROMPTS_CONFIG_PATH": "E:\\path\\to\\claude-prompts-mcp\\server\\promptsConfig.json"
			}
		},
		"RealTime": {
			"command": "time-mcp-server",
			"args": ["-l", "Asia/Shanghai"]
		},
		"archy": {
			"command": "node",
			"args": ["/path/to/archy/build/index.js"],
			"env": {
				"GITHUB_TOKEN": "your-github-token"
			}
		},
		"tfnsw-realtime-alerts": {
			"command": "npx",
			"args": ["-y", "tfnsw-realtime-alerts-mcp-server"],
			"env": {
				"NSW_TRANSPORT_API_KEY": "your_api_key_here"
			}
		},
		"mattermost": {
			"command": "node",
			"args": ["/path/to/mattermost-mcp/build/index.js"]
		},
		"fiscal-data": {
			"command": "npx",
			"args": ["fiscal-data-mcp"]
		},
		"firstcycling": {
			"command": "uv",
			"args": ["--directory", "/path/to/server/directory", "run", "firstcycling.py"]
		},
		"s3": {
			"command": "your-absolute-path-to-node",
			"args": ["your-absolute-path-to-aws-s3-mcp/dist/index.js"],
			"env": {
				"AWS_REGION": "your-aws-region",
				"S3_BUCKETS": "your-s3-buckets",
				"S3_MAX_BUCKETS": "your-max-buckets",
				"AWS_ACCESS_KEY_ID": "your-access-key",
				"AWS_SECRET_ACCESS_KEY": "your-secret-key"
			}
		},
		"claudekeep-mcp": {
			"command": "npx",
			"args": ["-y", "claudekeep-mcp"],
			"env": {
				"CLAUDEKEEP_TOKEN": "<YOUR_TOKEN>"
			}
		},
		"typesense": {
			"command": "npx",
			"args": ["-y", "typesense-mcp-server", "--host", "your-typesense-host", "--port", "8108", "--protocol", "http", "--api-key", "your-api-key"]
		},
		"zerodha": {
			"command": "<path-to-zerodha-mcp-binary>",
			"env": {
				"ZERODHA_API_KEY": "<api_key>",
				"ZERODHA_API_SECRET": "<api_secret>"
			}
		},
		"ssh-rails-runner": {
			"command": "npx",
			"args": ["mcp-server-ssh-rails-runner"],
			"env": {
				"SSH_HOST": "your.remote.host",
				"SSH_USER": "your_ssh_user",
				"SSH_PRIVATE_KEY_PATH": "your_SSH_PRIVATE_KEY_PATH",
				"RAILS_WORKING_DIR": "/path/to/rails/app/root",
				"PROJECT_NAME_AS_CONTEXT": "Name that shows up in tool descriptions to help the LLM describe what kind of Rails project we're working with.",
				"CODE_SNIPPET_FILE_DIRECTORY": "/path/to/store/code/snippets/locally"
			}
		},
		"think": {
			"command": "/full/path/to/python",
			"args": ["/full/path/to/main.py"]
		},
		"mcp-server-tembo": {
			"command": "node",
			"env": {
				"TEMBO_API_KEY": "your_tembo_api_key"
			},
			"args": ["/absolute/path/to/cloned/repo/mcp-server-tembo/dist/index.js"]
		},
		"local-machine": {
			"command": "/Users/<YOUR_USER_NAME>/.bun/bin/bun",
			"args": ["/Users/<YOUR_USER_NAME>/apple-notes-mcp/index.ts"]
		},
		"notes-server": {
			"command": "python",
			"args": ["main.py"],
			"env": {
				"PYTHONIOENCODING": "utf-8"
			}
		},
		"optionsflow": {
			"command": "python",
			"args": ["path/to/optionsflow.py"]
		},
		"dify-retriever-mcp": {
			"command": "dify-retriever-mcp",
			"args": [],
			"env": {
				"DIFY_DATASET_API_KEY": "dataset-iDBz1qVkmI2dU6KnirLCxO9K",
				"DIFY_ENDPOINT": "http://127.0.0.1/v1",
				"DIFY_DATASET_ID": "b667a65b-f40f-4dd0-8b34-8406dc8be96e",
				"DIFY_DATASET_NAME": "\u8fd9\u91cc\u5199\u77e5\u8bc6\u5e93\u540d\u5b57"
			},
			"descriptions": "***\u77e5\u8bc6\u5e93\u68c0\u7d22"
		},
		"coolify": {
			"command": "cmd",
			"args": ["/c", "npx", "-y", "coolify-mcp-server"],
			"env": {
				"COOLIFY_BASE_URL": "your-coolify-url",
				"COOLIFY_TOKEN": "your-api-token"
			},
			"disabled": false,
			"autoApprove": []
		},
		"my-mcp-server": {
			"command": "npx",
			"args": ["tsx", "/PATH/TO/YOUR_PROJECT/src/index.ts"],
			"env": {
				"YOUR_ENV_VAR": "value"
			}
		},
		"micromanage": {
			"command": "node",
			"args": ["[CLONE_DESTINATION_PATH]/sequentialdeveloping/dist/index.js"]
		},
		"personal-assistant": {
			"command": "/path/to/python",
			"args": ["/absolute/path/to/mcp-pa-ai-agent/mcp_server.py"]
		},
		"VideoCapture ": {
			"command": "uv",
			"args": ["run", "--with", "mcp[cli]", "--with", "numpy", "--with", "opencv-python", "mcp", "run", "/ABSOLUTE_PATH/videocapture_mcp.py"]
		},
		"computer-control-mcp": {
			"command": "uvx",
			"args": ["computer-control-mcp@latest"]
		},
		"mcp-aiven": {
			"command": "uv",
			"args": ["--directory", "$REPOSITORY_DIRECTORY", "run", "--with-editable", "$REPOSITORY_DIRECTORY", "--python", "3.13", "mcp-aiven"],
			"env": {
				"AIVEN_BASE_URL": "https://api.aiven.io",
				"AIVEN_TOKEN": "$AIVEN_TOKEN"
			}
		},
		"replicate-flux": {
			"command": "node",
			"args": ["C:\\Users\\YourUsername\\path\\to\\mcp-replicate-flux\\index.js"]
		},
		"couchbase": {
			"command": "node",
			"args": ["path/to/MCP-Server-Couchbase/dist/index.js"],
			"env": {
				"COUCHBASE_URL": "<COUCHBASE CONNECTION STRING>",
				"COUCHBASE_BUCKET": "<BUCKET NAME>",
				"COUCHBASE_USERNAME": "<COUCHBASE USERNAME>",
				"COUCHBASE_PASSWORD": "<COUCHBASE PASSWORD>"
			}
		},
		"google-tasks": {
			"command": "node",
			"args": ["/path/to/google-tasks-mcp/build/index.js"],
			"env": {
				"GOOGLE_CLIENT_ID": "your_client_id_here",
				"GOOGLE_CLIENT_SECRET": "your_client_secret_here",
				"GOOGLE_REDIRECT_URI": "http://localhost:3000/oauth2callback"
			}
		},
		"canvas": {
			"command": "python",
			"args": ["ABSOLUTE_PATH_TO/src/canvas-student/run_server.py"],
			"env": {
				"CANVAS_API_TOKEN": "your_canvas_api_token",
				"CANVAS_BASE_URL": "https://your-institution.instructure.com"
			}
		},
		"maven-deps-server": {
			"command": "npx",
			"args": ["mcp-maven-deps", "--host=your-server-ip", "--port=3000"]
		},
		"gerrit-review-mcp": {
			"command": "/path/to/your/workspace/gerrit-code-review-mcp/.venv/bin/python",
			"args": ["/path/to/your/workspace/gerrit-code-review-mcp/server.py", "--transport", "stdio"],
			"cwd": "/path/to/your/workspace/gerrit-code-review-mcp",
			"env": {
				"PYTHONPATH": "/path/to/your/workspace/gerrit-code-review-mcp",
				"VIRTUAL_ENV": "/path/to/your/workspace/gerrit-code-review-mcp/.venv",
				"PATH": "/path/to/your/workspace/gerrit-code-review-mcp/.venv/bin:/usr/local/bin:/usr/bin:/bin"
			},
			"stdio": true
		},
		"image-analysis": {
			"command": "node",
			"args": ["/path/to/image-mcp-server/dist/index.js"],
			"env": {
				"OPENAI_API_KEY": "your_openai_api_key"
			}
		},
		"dexpaprika": {
			"command": "npx",
			"args": ["dexpaprika-mcp"]
		},
		"morphik-local": {
			"command": "npx",
			"args": ["-y", "morphik-mcp"]
		},
		"morphik-cloud": {
			"command": "npx",
			"args": ["-y", "morphik-mcp", "--uri=https://api.morphik.ai"]
		},
		"morphik-with-files": {
			"command": "npx",
			"args": ["-y", "morphik-mcp", "--allowed-dir=~/Documents,~/Downloads"]
		},
		"deep-research": {
			"command": "node",
			"args": ["/absolute/path/to/your/deep-research-mcp/dist/index.js"],
			"env": {
				"FIRECRAWL_API_KEY": "your-firecrawler-api-key",
				"OPENAI_API_KEY": "your-openai-api-key"
			}
		},
		"clickhouse": {
			"url": "http://localhost:8080/sse",
			"env": {
				"API_KEY": ""
			}
		},
		"joplin": {
			"command": "/PATH/TO/UV/uv",
			"args": ["--directory", "/PATH/TO/YOUR/PROJECT/joplin_mcp", "run", "src/mcp/joplin_mcp.py"]
		},
		"rdf_explorer": {
			"command": "C:\\path\\to\\venv\\Scripts\\python.exe",
			"args": ["C:\\path\\to\\server.py", "--sparql-endpoint", "https://example.com/sparql"]
		},
		"baidu-search": {
			"command": "node",
			"args": ["/path/to/baidu-search-mcp/build/index.js"],
			"env": {
				"BAIDU_API_KEY": "your_api_key_here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"data-gouv": {
			"url": "http://localhost:3001/sse"
		},
		"dalle-mcp": {
			"command": "node",
			"args": ["/path/to/dalle-mcp-server/build/index.js"],
			"env": {
				"OPENAI_API_KEY": "your-api-key-here",
				"SAVE_DIR": "/path/to/save/directory"
			},
			"disabled": false,
			"autoApprove": []
		},
		"tft-mcp": {
			"command": "npx",
			"args": ["mcp-server-tft", "--apiKey", "<YOUR_RIOT_API_KEY>", "--gameName", "<YOUR_GAME_NAME>", "--tagLine", "<YOUR_TAG_LINE>"]
		},
		"git-commit-aider": {
			"command": "node",
			"args": ["/path/to/git-commit-aider/build/index.js"]
		},
		"mcp-browser-automation": {
			"command": "node",
			"args": ["/path/to/mcp-browser-automation/dist/index.js"]
		},
		"markmap": {
			"type": "stdio",
			"command": "npx",
			"args": ["-y", "@jinzcdev/markmap-mcp-server", "--output", "/path/to/output/directory"]
		},
		"ptcg-mcp": {
			"command": "node",
			"args": ["ABSOLUTE_PATH_HERE/dist/index.js"]
		},
		"pbixray": {
			"command": "wsl.exe",
			"args": ["bash", "-c", "source ~/dev/pbixray-mcp/venv/bin/activate && python ~/dev/pbixray-mcp/src/pbixray_server.py --max-rows 100 --page-size 50 --disallow get_power_query"],
			"env": {}
		},
		"untappddotnet": {
			"command": "npx",
			"args": ["mcp-remote", "http://localhost:7071/runtime/webhooks/mcp/sse"]
		},
		"accessibility-scanner": {
			"command": "npx",
			"args": ["-y", "mcp-accessibility-scanner"]
		},
		"My API Spec (npx)": {
			"command": "npx",
			"args": ["-y", "mcp-openapi-schema-explorer@latest", "<path-or-url-to-spec>", "--output-format", "yaml"],
			"env": {}
		},
		"My API Spec (Docker Remote)": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "kadykov/mcp-openapi-schema-explorer:latest", "<remote-url-to-spec>"],
			"env": {}
		},
		"My API Spec (Docker Local)": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "-v", "/full/host/path/to/spec.yaml:/spec/api.yaml", "kadykov/mcp-openapi-schema-explorer:latest", "/spec/api.yaml", "--output-format", "yaml"],
			"env": {}
		},
		"My API Spec (Global)": {
			"command": "mcp-openapi-schema-explorer",
			"args": ["<path-or-url-to-spec>", "--output-format", "yaml"],
			"env": {}
		},
		"My API Spec (Local Dev)": {
			"command": "node",
			"args": ["/full/path/to/cloned/mcp-openapi-schema-explorer/dist/src/index.js", "<path-or-url-to-spec>", "--output-format", "yaml"],
			"env": {}
		},
		"kaggle": {
			"command": "kaggle-mcp"
		},
		"productboard": {
			"command": "npx",
			"args": ["-y", "productboard-mcp"],
			"env": {
				"PRODUCTBOARD_ACCESS_TOKEN": "<YOUR_TOKEN>"
			}
		},
		"vrchat-mcp-osc": {
			"command": "npx",
			"args": ["vrchat-mcp-osc"]
		},
		"strapi-mcp": {
			"command": "/path/to/strapi-mcp/build/index.js",
			"env": {
				"STRAPI_URL": "http://localhost:1337",
				"STRAPI_API_TOKEN": "your-api-token-here",
				"STRAPI_DEV_MODE": "false"
			}
		},
		"mercadolibre-mcp": {
			"command": "node",
			"args": ["/path/to/mercadolibre-mcp/dist/index.js"],
			"env": {
				"CLIENT_ID": "<YOUR_CLIENT_ID>",
				"CLIENT_SECRET": "<YOUR_CLIENT_SECRET>",
				"SITE_ID": "<YOUR_SITE_ID>"
			}
		},
		"onyx-search": {
			"command": "node",
			"args": ["/path/to/onyx-mcp-server/build/index.js"],
			"env": {
				"ONYX_API_TOKEN": "your-api-token-here",
				"ONYX_API_URL": "http://localhost:8080/api"
			},
			"disabled": false,
			"alwaysAllow": []
		},
		"video-recognition": {
			"command": "node",
			"args": ["/path/to/mcp-video-recognition/dist/index.js"],
			"disabled": false,
			"autoApprove": []
		},
		"imessage": {
			"command": "node",
			"args": ["/path/to/imessage-server/build/server.js"]
		},
		"nuclei-server": {
			"command": "/path/to/nuclei-server/build/index.js"
		},
		"aws-service-reference": {
			"command": "python",
			"args": ["/ABSOLUTE/PATH/TO/aws_service_reference.py"]
		},
		"Nash": {
			"command": "/Users/john-nash/code/nash-mcp/.venv/bin/mcp",
			"args": ["run", "/Users/john-nash/code/nash-mcp/src/nash_mcp/server.py"]
		},
		"revit": {
			"command": "python",
			"args": ["C:/path/to/revit_mcp_server.py"]
		},
		"n8n-asistans": {
			"command": "uv",
			"args": ["--directory", "/n8n-assistant", "run", "main.py"],
			"env": {
				"SERPER_API_KEY": "*********"
			}
		},
		"paypal": {
			"command": "node",
			"args": ["path/to/paypal-server/build/index.js"],
			"env": {
				"PAYPAL_CLIENT_ID": "your_client_id",
				"PAYPAL_CLIENT_SECRET": "your_client_secret"
			},
			"disabled": false,
			"autoApprove": []
		},
		"pokedex": {
			"command": "path/to/poke-mcp/build/index.js"
		},
		"erpnext": {
			"command": "node",
			"args": ["/path/to/erpnext-server/build/index.js"],
			"env": {
				"ERPNEXT_URL": "http://your-erpnext-instance.com",
				"ERPNEXT_API_KEY": "your-api-key",
				"ERPNEXT_API_SECRET": "your-api-secret"
			}
		},
		"revit-mcp-server": {
			"command": "D:/path/to/revit-mcp-server/build/index.js"
		},
		"agentforce": {
			"command": "python",
			"args": ["/path/to/your/agentforce_mcp_server.py"]
		},
		"scraperis_scraper": {
			"command": "scraperis-mcp",
			"args": [],
			"env": {
				"SCRAPERIS_API_KEY": "your-api-key-here",
				"DEBUG": "*"
			}
		},
		"notion-texonom": {
			"command": "node",
			"args": ["/path/to/mcp/build/index.js"],
			"env": {
				"ROOT_PAGE": "$SOME_UUID"
			}
		},
		"git-v2": {
			"command": "node",
			"args": ["path/to/git-mcp-v2/build/index.js"],
			"env": {
				"GIT_DEFAULT_PATH": "/path/to/default/git/directory",
				"GITHUB_PERSONAL_ACCESS_TOKEN": "your-github-pat"
			}
		},
		"mcpet": {
			"command": "node",
			"args": ["/path/to/mcpet/build/index.js"],
			"env": {
				"PET_DATA_DIR": "/path/to/writable/directory"
			}
		},
		"slidespeak": {
			"command": "/path/to/.local/bin/uv",
			"args": ["--directory", "/path/to/slidespeak-mcp", "run", "slidespeak.py"],
			"env": {
				"SLIDESPEAK_API_KEY": "API-KEY-HERE"
			}
		},
		"togetherai-image": {
			"command": "node",
			"args": ["/path/to/togetherai-image-server/build/index.js"],
			"env": {
				"TOGETHER_API_KEY": "your-api-key-here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"outlook-mcp": {
			"command": "/Users/YOURUSERNAME/.bun/bin/bun",
			"args": ["run", "/path/to/claude-outlook-mcp/index.ts"]
		},
		"supabase-nextjs-server": {
			"command": "/path/to/supabase-nextjs-server/build/index.js"
		},
		"smartsheet": {
			"command": "/Users/[username]/anaconda3/envs/cline_mcp_env/bin/node",
			"args": ["/path/to/smartsheet-server/build/index.js"],
			"env": {
				"PYTHON_PATH": "/Users/[username]/anaconda3/envs/cline_mcp_env/bin/python3",
				"SMARTSHEET_API_KEY": "your-api-key",
				"AZURE_OPENAI_API_KEY": "your-azure-openai-key",
				"AZURE_OPENAI_API_BASE": "your-azure-openai-endpoint",
				"AZURE_OPENAI_API_VERSION": "your-api-version",
				"AZURE_OPENAI_DEPLOYMENT": "your-deployment-name"
			},
			"disabled": false,
			"autoApprove": ["get_column_map", "smartsheet_write", "smartsheet_update", "smartsheet_delete", "smartsheet_search", "smartsheet_add_column", "smartsheet_delete_column", "smartsheet_rename_column", "smartsheet_bulk_update", "start_batch_analysis", "get_job_status", "cancel_batch_analysis"]
		},
		"Vectara": {
			"command": "uv",
			"args": ["tool", "run", "vectara-mcp"]
		},
		"apple-books-mcp": {
			"command": "uv",
			"args": ["--directory", "/path/to/apple-books-mcp/", "run", "apple_books_mcp", "-v"]
		},
		"mcp-server-webscraping-ai": {
			"command": "npx",
			"args": ["-y", "webscraping-ai-mcp"],
			"env": {
				"WEBSCRAPING_AI_API_KEY": "YOUR_API_KEY_HERE",
				"WEBSCRAPING_AI_CONCURRENCY_LIMIT": "5"
			}
		},
		"nexus-bridge": {
			"url": "http://localhost:3000/mcp",
			"disabled": false,
			"alwaysAllow": ["get_system_info", "read_file", "write_file", "create_directory", "list_directory", "get_project_status"]
		},
		"reader": {
			"command": "uv",
			"args": ["--directory", "/absolute/path/to/your/reader/server", "run", "main.py"],
			"env": {
				"ACCESS_TOKEN": "your_readwise_access_token"
			}
		},
		"ethereum-tools": {
			"command": "node",
			"args": ["YOUR_ABSOLUTE_PATH_TO/main.js"],
			"env": {
				"ETH_RPC_URL": "https://eth.llamarpc.com",
				"MORALIS_API_KEY": "your_moralis_api_key",
				"ETHERSCAN_API_KEY": "your_etherscan_api_key",
				"CODEX_API_KEY": "your_codex_api_key",
				"RAPIDAPI_KEY": "your_rapidapi_key"
			}
		},
		"mcp-bazel": {
			"command": "/path/to/your/go/bin/mcp-bazel"
		},
		"Adfin": {
			"command": "<home_path>/.local/bin/uv",
			"args": ["--directory", "<absolute_path_to_adfin_mcp_folder>", "run", "main_adfin_mcp.py"],
			"env": {
				"ADFIN_EMAIL": "<email>",
				"ADFIN_PASSWORD": "<password>"
			}
		},
		"iceberg": {
			"command": "uv",
			"args": ["--directory", "PATH_TO_/mcp-iceberg-service", "run", "mcp-server-iceberg"],
			"env": {
				"ICEBERG_CATALOG_URI": "http://localhost:8181",
				"ICEBERG_WAREHOUSE": "YOUR ICEBERG WAREHOUSE NAME",
				"S3_ENDPOINT": "OPTIONAL IF USING S3",
				"AWS_ACCESS_KEY_ID": "YOUR S3 ACCESS KEY",
				"AWS_SECRET_ACCESS_KEY": "YOUR S3 SECRET KEY"
			}
		},
		"unreal": {
			"command": "C:/path/to/your/project/Plugins/UnrealMCP/MCP/run_unreal_mcp.bat",
			"args": []
		},
		"enabled": true,
		"stock-market-server": {
			"command": "/path/to/stock-market-server/build/index.js"
		},
		"ai-meta-mcp": {
			"command": "npx",
			"args": ["-y", "ai-meta-mcp-server"],
			"env": {
				"ALLOW_JS_EXECUTION": "true",
				"ALLOW_PYTHON_EXECUTION": "false",
				"ALLOW_SHELL_EXECUTION": "false"
			}
		},
		"ftp-server": {
			"command": "node",
			"args": ["C:\\path\\to\\mcp-server-ftp\\build\\index.js"],
			"env": {
				"FTP_HOST": "ftp.example.com",
				"FTP_PORT": "21",
				"FTP_USER": "your-username",
				"FTP_PASSWORD": "your-password",
				"FTP_SECURE": "false"
			}
		},
		"fastly": {
			"command": "node",
			"args": ["path/to/fastly-mcp.mjs"],
			"env": {
				"FASTLY_API_KEY": "your_fastly_api_key"
			}
		},
		"chatgpt": {
			"command": "python3",
			"args": ["server.py", "--oneshot"],
			"env": {
				"OPENAI_API_KEY": "<YOUR_OPENAI_API_KEY>"
			}
		},
		"mcp-flux-schnell": {
			"command": "node",
			"args": ["/path/to/mcp-flux-schnell/build/index.js"],
			"env": {
				"FLUX_API_URL": "your flux api url",
				"FLUX_API_TOKEN": "your flux api token",
				"WORKING_DIR": "your working directory"
			}
		},
		"jsoncanvas": {
			"command": "uv",
			"args": ["--directory", "/path/to/jsoncanvas", "run", "mcp-server-jsoncanvas"],
			"env": {
				"OUTPUT_PATH": "./output"
			}
		},
		"mcp-exploitdb-server": {
			"command": "node",
			"args": ["/path/to/exploitdb-mcp-server/build/index.js"]
		},
		"terminal": {
			"command": "npx",
			"args": ["iterm_mcp_server"]
		},
		"openstack-mcp-server": {
			"command": "java",
			"args": ["-jar", "<path_to_your_jar>/openstack-mcp-server-0.0.1.jar", "--port", "8080", "--host", "localhost"]
		},
		"secops-mcp": {
			"command": "/path/to/your/uv",
			"args": ["--directory", "/path/to/your/mcp-secops-v3", "run", "secops_mcp.py"],
			"env": {
				"CHRONICLE_PROJECT_ID": "your-google-cloud-project-id",
				"CHRONICLE_CUSTOMER_ID": "your-chronicle-customer-id",
				"CHRONICLE_REGION": "us"
			}
		},
		"TwoTruthsAndATwist": {
			"command": "ttaat",
			"args": ["serve"]
		},
		"intercom": {
			"command": "node",
			"args": ["/path/to/mcp-intercom/dist/index.js"],
			"env": {
				"INTERCOM_API_KEY": "your_api_key_here"
			}
		},
		"web-search": {
			"command": "node",
			"args": ["/path/to/web-search/build/index.js"]
		},
		"mcp-web-search": {
			"command": "node",
			"args": ["/path/to/your/mcp-web-search-tool/build/index.js"]
		},
		"prompt-server": {
			"command": "node",
			"args": ["/path/to/prompt-server/src/index.js"],
			"transport": "stdio"
		},
		"nortal_coding_standards": {
			"command": "uv",
			"args": ["run", "--with", "mcp[cli]", "mcp", "run", "/absolute/path/to/coding-standards-mcp/server.py"]
		},
		"dubco": {
			"command": "npx",
			"args": ["-y", "dubco-mcp-server"],
			"env": {
				"DUBCO_API_KEY": "your_api_key_here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"Ant Design Components": {
			"command": "npx",
			"args": ["-y", "mcp-antd-components"]
		},
		"ida": {
			"command": "/path/to/uv",
			"args": ["--directory", "path/to/headless-ida-mcp-server", "run", "headless_ida_mcp_server"]
		},
		"metabase-mcp-server": {
			"command": "npx",
			"args": ["-y", "@smithery/cli@latest", "run", "@hyeongjun-dev/metabase-mcp-server", "--config", "{\"metabaseUrl\":\"https://your-metabase-instance.com\",\"metabaseApiKey\":\"\",\"metabasePassword\":\"your_password\",\"metabaseUserEmail\":\"your_email@example.com\"}"]
		},
		"analytics_service": {
			"command": "uv",
			"args": ["--directory", "/path/to/analytics_service", "run", "analytics-service"],
			"env": {
				"UMAMI_API_URL": "https://example.com",
				"UMAMI_USERNAME": "yourUmamiUsername",
				"UMAMI_PASSWORD": "yourUmamiPassword",
				"UMAMI_TEAM_ID": "yourUmamiTeamId"
			}
		},
		"ens": {
			"command": "node",
			"args": ["/path/to/your/server.js"],
			"env": {
				"PROVIDER_URL": "https://your-provider-url.com,https://your-backup-provider.com"
			}
		},
		"KubeSphere": {
			"args": ["stdio", "--ksconfig", "<ksconfig file absolute path>", "--ks-apiserver", "<KubeSphere Address>"],
			"command": "ks-mcp-server"
		},
		"divide-and-conquer": {
			"command": "node",
			"args": ["/path/to/divide-and-conquer-mcp-server/build/index.js"],
			"disabled": false
		},
		"pgsql-mcp-server": {
			"command": "/path/to/sql-mcp-server",
			"args": [],
			"env": {
				"DB_HOST": "localhost",
				"DB_PORT": "5432",
				"DB_NAME": "postgres",
				"DB_USER": "your_username",
				"DB_PASSWORD": "your_password",
				"DB_SSLMODE": "disable"
			},
			"disabled": false,
			"autoApprove": []
		},
		"denokv": {
			"command": "deno",
			"args": ["--unstable-kv", "jsr:@divy/mcp-deno-kv"]
		},
		"mcp-metricool": {
			"command": "uvx",
			"args": ["mcp-metricool"],
			"env": {
				"METRICOOL_USER_TOKEN": "<METRICOOL_USER_TOKEN>",
				"METRICOOL_USER_ID": "<METRICOOL_USER_ID>"
			}
		},
		"amplitude-analytics": {
			"command": "npx",
			"args": ["-y", "amplitude-mcp-server", "--api-key", "YOUR_AMPLITUDE_API_KEY"]
		},
		"minecraft-remote": {
			"command": "node",
			"args": ["/absolute/path/to/mcp-minecraft-remote/build/index.js"]
		},
		"everart-forge": {
			"command": "node",
			"args": ["/absolute/path/to/everart-forge-mcp/build/index.js"],
			"env": {
				"EVERART_API_KEY": "your_api_key_here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"mcp-installer": {
			"command": "cmd.exe",
			"args": ["/c", "npx", "stdio-mcp-server"]
		},
		"mcp-server-restart": {
			"command": "uvx",
			"args": ["mcp-server-restart"]
		},
		"Gitee": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "GITEE_PERSONAL_ACCESS_TOKEN", "normalcoder/gitee-mcp-server"],
			"env": {
				"GITEE_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
			}
		},
		"open-docs-mcp": {
			"command": "npx",
			"args": ["-y", "open-docs-mcp", "--docsDir", "/path/to/docs"]
		},
		"llmling": {
			"command": "uvx",
			"args": ["mcp-server-llmling", "start", "path/to/your/config.yml"],
			"env": {}
		},
		"mindbridge": {
			"command": "npx",
			"args": ["-y", "@pinkpixel/mindbridge"],
			"env": {
				"OPENAI_API_KEY": "OPENAI_API_KEY_HERE",
				"ANTHROPIC_API_KEY": "ANTHROPIC_API_KEY_HERE",
				"GOOGLE_API_KEY": "GOOGLE_API_KEY_HERE",
				"DEEPSEEK_API_KEY": "DEEPSEEK_API_KEY_HERE",
				"OPENROUTER_API_KEY": "OPENROUTER_API_KEY_HERE"
			},
			"provider_config": {
				"openai": {
					"default_model": "gpt-4o"
				},
				"anthropic": {
					"default_model": "claude-3-5-sonnet-20241022"
				},
				"google": {
					"default_model": "gemini-2.0-flash"
				},
				"deepseek": {
					"default_model": "deepseek-chat"
				},
				"openrouter": {
					"default_model": "openai/gpt-4o"
				},
				"ollama": {
					"base_url": "http://localhost:11434",
					"default_model": "llama3"
				},
				"openai_compatible": {
					"api_key": "API_KEY_HERE_OR_REMOVE_IF_NOT_NEEDED",
					"base_url": "FULL_API_URL_HERE",
					"available_models": ["MODEL1", "MODEL2"],
					"default_model": "MODEL1"
				}
			},
			"default_params": {
				"temperature": 0.7,
				"reasoning_effort": "medium"
			},
			"alwaysAllow": ["getSecondOpinion", "listProviders", "listReasoningModels"]
		},
		"sqlite_mcp_server": {
			"command": "python",
			"args": ["-u", "/absolute/path/to/sqlite_mcp_server.py"]
		},
		"doc-tools-mcp": {
			"command": "node",
			"args": ["/path/to/your/doc-tools-mcp/dist/mcp-server.js"]
		},
		"putio": {
			"command": "uvx",
			"args": ["putio-mcp-server"],
			"env": {
				"PUTIO_TOKEN": "<your-putio-api-token>"
			}
		},
		"gemini-image-generator": {
			"command": "uv",
			"args": ["--directory", "/absolute/path/to/gemini-image-generator", "run", "server.py"],
			"env": {
				"GEMINI_API_KEY": "GEMINI_API_KEY",
				"OUTPUT_IMAGE_PATH": "OUTPUT_IMAGE_PATH"
			}
		},
		"intercom-mcp": {
			"command": "intercom-mcp",
			"args": [],
			"env": {
				"INTERCOM_ACCESS_TOKEN": "your_intercom_api_token"
			}
		},
		"todos": {
			"command": "uvx",
			"args": ["mcp-openapi", "--openapi-url=http://localhost:8000/openapi.json", "stdio"]
		},
		"root-signals": {
			"url": "http://localhost:9090/sse"
		},
		"prd-creator": {
			"command": "npx",
			"args": ["-y", "prd-creator-mcp"]
		},
		"prd-creator-mcp": {
			"command": "npx",
			"args": ["-y", "prd-creator-mcp"]
		},
		"data-extractor": {
			"command": "npx",
			"args": ["-y", "mcp-data-extractor"],
			"env": {
				"DISABLE_SOURCE_REPLACEMENT": "true"
			},
			"disabled": false,
			"autoApprove": ["extract_data", "extract_svg"]
		},
		"tailorkit-mcp": {
			"command": "node",
			"args": ["path/to/your/dist/index.js"],
			"env": {
				"HOST": "https://your-api-host.com",
				"ACCESS_TOKEN": "your-access-token"
			}
		},
		"mcp-sns-server": {
			"command": "/path/to/mcp-sns-server/build/index.js"
		},
		"docs-rs-mcp": {
			"command": "/absolute/path/to/docs-rs-mcp/build/index.js"
		},
		"Dynamics365": {
			"command": "node",
			"args": ["<Path to your MCP server build file ex: rootfolder/build/index.js>"],
			"env": {
				"CLIENT_ID": "<D365 Client Id>",
				"CLIENT_SECRET": "<D365 Client Secret>",
				"TENANT_ID": "<D365 Tenant ID>",
				"D365_URL": "Dynamics 365 url"
			}
		},
		"openrouter": {
			"command": "smithery",
			"args": ["run", "stabgan/openrouter-mcp-multimodal"],
			"env": {
				"OPENROUTER_API_KEY": "your-api-key-here",
				"DEFAULT_MODEL": "qwen/qwen2.5-vl-32b-instruct:free"
			}
		},
		"github-kanban": {
			"command": "github-kanban-mcp-server"
		},
		"pdf2png": {
			"command": "uv",
			"args": ["--directory", "/absolute/path/to/mcp-Pdf2png", "run", "pdf2png"]
		},
		"weather-mcp": {
			"command": "py",
			"args": ["-3.13", "C:\\Path\\To\\Your\\Weather-MCP-ClaudeDesktop\\main.py"]
		},
		"docs-fetch": {
			"command": "node",
			"args": ["/path/to/docs-fetch-mcp/build/index.js"],
			"env": {
				"MCP_TRANSPORT": "pipe"
			}
		},
		"mcp-server-openmetadata": {
			"command": "uv",
			"args": ["--directory", "/path/to/mcp-server-openmetadata", "run", "mcp-server-openmetadata"],
			"env": {
				"OPENMETADATA_HOST": "https://your-openmetadata-host",
				"OPENMETADATA_USERNAME": "your-username",
				"OPENMETADATA_PASSWORD": "your-password"
			}
		},
		"mcp-docs-provider": {
			"command": "npx",
			"args": ["-y", "mcp-docs-provider", "/path/to/your/documentation.md"]
		},
		"twilio": {
			"command": "npx",
			"args": ["-y", "@yiyang.1i/sms-mcp-server"],
			"env": {
				"ACCOUNT_SID": "your_account_sid",
				"AUTH_TOKEN": "your_auth_token",
				"FROM_NUMBER": "your_twilio_number"
			}
		},
		"cosense-mcp-server": {
			"command": "node",
			"args": ["/path/to/cosense-mcp-server/build/index.js"],
			"env": {
				"COSENSE_PROJECT_NAME": "your_project_name",
				"COSENSE_SID": "your_sid"
			}
		},
		"get-subjects": {
			"command": "node",
			"args": ["C:\\Users\\sifue\\workspace\\zen-syllabus-mcp\\build\\index.js"]
		},
		"webdev": {
			"command": "npx",
			"args": ["webdev-mcp"]
		},
		"code-indexer": {
			"command": "python",
			"args": ["-m", "server.app"],
			"cwd": "\u5b89\u88c5\u76ee\u5f55\u8def\u5f84",
			"env": {},
			"disabled": false,
			"alwaysAllow": []
		},
		"qb-time-tools": {
			"command": "python",
			"args": ["./qb-time-mcp-server/main.py"],
			"env": {
				"QB_TIME_ACCESS_TOKEN": "your_quickbooks_time_access_token_here"
			}
		},
		"code-context-provider-mcp": {
			"command": "npx",
			"args": ["-y", "code-context-provider-mcp@latest"]
		},
		"retellai-mcp-server": {
			"command": "npx",
			"args": ["-y", "@abhaybabbar/retellai-mcp-server"],
			"env": {
				"RETELL_API_KEY": "<your_retellai_token>"
			}
		},
		"sonic_pi_mcp": {
			"name": "Sonic Pi MCP",
			"command": "bunx",
			"args": ["sonic-pi-mcp"],
			"transport": {
				"type": "stdio"
			}
		},
		"solana-docs-server": {
			"command": "/path/to/solana-docs-server/build/index.js"
		},
		"github-projects": {
			"command": "uv",
			"args": ["--directory", "/path/to/github-projects-mcp", "run", "mcp-github-projects"],
			"env": {
				"GITHUB_TOKEN": "your_pat_here"
			}
		},
		"discourse": {
			"command": "npx",
			"args": ["-y", "@ashdev/discourse-mcp-server"],
			"env": {
				"DISCOURSE_API_URL": "https://try.discourse.org",
				"DISCOURSE_API_KEY": "1234",
				"DISCOURSE_API_USERNAME": "ash"
			}
		},
		"opendota": {
			"command": "wsl.exe",
			"args": ["--", "bash", "-c", "cd ~/opendota-mcp-server && source .venv/bin/activate && python src/opendota_server/server.py"]
		},
		"manifold": {
			"command": "node",
			"args": ["/path/to/manifold-mcp-server/build/index.js"],
			"env": {
				"MANIFOLD_API_KEY": "your_api_key_here"
			}
		},
		"clojars-deps-server": {
			"command": "node",
			"args": ["/path/to/clojars-deps-server/build/index.js"]
		},
		"air-mcp": {
			"command": "npx",
			"args": ["-y", "@binalyze/air-mcp"],
			"env": {
				"AIR_HOST": "your-api-host.com",
				"AIR_API_TOKEN": "your-api-token"
			}
		},
		"fastdomaincheck": {
			"command": "uvx",
			"args": ["fastdomaincheck-mcp-server"]
		},
		"bitrefill": {
			"command": "npx",
			"args": ["-y", "bitrefill-mcp-server"],
			"env": {
				"BITREFILL_API_SECRET": "your_api_key_here",
				"BITREFILL_API_ID": "your_api_id_here"
			}
		},
		"github.com/bitrefill/bitrefill-mcp-server": {
			"command": "npx",
			"args": ["-y", "bitrefill-mcp-server"],
			"disabled": false,
			"autoApprove": ["search", "detail", "categories"],
			"env": {
				"BITREFILL_API_ID": "your_api_id_here",
				"BITREFILL_API_SECRET": "your_api_key_here"
			}
		},
		"mysqldb-mcp-server": {
			"command": "uvx",
			"args": ["mysqldb-mcp-server"],
			"env": {
				"MYSQL_HOST": "localhost",
				"MYSQL_USER": "root",
				"MYSQL_PASSWORD": "password",
				"MYSQL_DATABASE": "[optional]",
				"MYSQL_READONLY": "true"
			}
		},
		"perplexity-search": {
			"command": "/path/to/perplexity-search-mcp",
			"env": {
				"PERPLEXITY_API_KEY": "your-api-key-here"
			}
		},
		"volume-wall-detector-mcp": {
			"command": "npx",
			"args": ["-y", "volume-wall-detector-mcp@latest"],
			"env": {
				"TIMEZONE": "GMT+7",
				"API_BASE_URL": "your-api-url-here",
				"MONGO_HOST": "localhost",
				"MONGO_PORT": "27017",
				"MONGO_DATABASE": "volume_wall_detector",
				"MONGO_USER": "admin",
				"MONGO_PASSWORD": "password",
				"MONGO_AUTH_SOURCE": "admin",
				"MONGO_AUTH_MECHANISM": "SCRAM-SHA-1",
				"PAGE_SIZE": "50",
				"TRADES_TO_FETCH": "10000",
				"DAYS_TO_FETCH": "1",
				"TRANSPORT_TYPE": "stdio",
				"PORT": "8080"
			}
		},
		"Whoop": {
			"command": "python",
			"args": ["/path/to/whoop/src/whoop_server.py"],
			"cwd": "/path/to/whoop",
			"env": {
				"WHOOP_EMAIL": "your.email@example.com",
				"WHOOP_PASSWORD": "your_password"
			}
		},
		"codepipeline": {
			"command": "npx",
			"args": ["-y", "path/to/mcp-codepipeline-server/dist/index.js"],
			"env": {
				"AWS_REGION": "us-east-1",
				"AWS_ACCESS_KEY_ID": "your_access_key_id",
				"AWS_SECRET_ACCESS_KEY": "your_secret_access_key"
			}
		},
		"coco": {
			"command": "npx",
			"args": ["mcp-coco"]
		},
		"flutter-tools": {
			"command": "node",
			"args": ["/path/to/flutter-tools/build/index.js"],
			"env": {}
		},
		"cloudinary": {
			"command": "node",
			"args": ["c:/path/to/cloudinary-mcp-server/dist/index.js"],
			"env": {
				"CLOUDINARY_CLOUD_NAME": "your_cloud_name",
				"CLOUDINARY_API_KEY": "your_api_key",
				"CLOUDINARY_API_SECRET": "your_api_secret"
			}
		},
		"headline-vibes": {
			"command": "node",
			"args": ["/path/to/headline-vibes/build/index.mjs"],
			"env": {
				"NEWS_API_KEY": "your-api-key-here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"js-sandbox": {
			"command": "/path/to/js-sandbox/build/index.js"
		},
		"gentoro": {
			"command": "npx",
			"args": ["-y", "@gentoro/mcp-nodejs-server"],
			"env": {
				"GENTORO_API_KEY": "<your api key>",
				"GENTORO_BRIDGE_UID": "<your bridge uid>",
				"GENTORO_BASE_URL": "<url where gentoro is hosted>"
			}
		},
		"windows_hardening_agent": {
			"command": "python",
			"args": ["C:\\Path\\to\\hardening_server.py"]
		},
		"python-code-explorer": {
			"command": "python",
			"args": ["/path/to/python-mcp-new/server.py"],
			"env": {
				"TOKEN_LIMIT": "8000"
			}
		},
		"backup": {
			"command": "node",
			"args": ["./dist/index.js"],
			"env": {
				"BACKUP_DIR": "./.code_backups",
				"EMERGENCY_BACKUP_DIR": "./.code_emergency_backups",
				"MAX_VERSIONS": "20"
			}
		},
		"hypernym": {
			"type": "stdio",
			"command": "cd /path/to/hypernym-mcp-server && npm run start:stdio",
			"description": "Hypernym semantic analysis and compression tool",
			"tools": ["analyze_text", "semantic_compression"]
		},
		"hirebase": {
			"command": "uvx",
			"args": ["hirebase-mcp"],
			"env": {
				"HIREBASE_API_KEY": ""
			}
		},
		"lemonade-stand": {
			"command": "npx",
			"args": ["/path/to/Lemonade-Stand-MCP-Server/server.js"]
		},
		"docs-rag": {
			"command": "npx",
			"args": ["-y", "@kazuph/mcp-docs-rag"],
			"env": {
				"DOCS_PATH": "/Users/username/docs",
				"GEMINI_API_KEY": "your-api-key-here"
			}
		},
		"graphdb": {
			"command": "node",
			"args": ["/path/to/mcp-server-graphdb/dist/index.js"],
			"env": {
				"GRAPHDB_ENDPOINT": "http://localhost:7200",
				"GRAPHDB_REPOSITORY": "myRepository",
				"GRAPHDB_USERNAME": "username",
				"GRAPHDB_PASSWORD": "password"
			}
		},
		"gaodeweather": {
			"name": "gaodeweather",
			"command": "uvx",
			"args": ["mcp-gaodeweather-server"],
			"env": {
				"GAODE_KEY": "your apikey"
			}
		},
		"kibela": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "KIBELA_TEAM", "-e", "KIBELA_TOKEN", "mcp-kibela-server"],
			"env": {
				"KIBELA_TEAM": "YOUR_TEAM_NAME",
				"KIBELA_TOKEN": "YOUR_TOKEN"
			}
		},
		"opcua-mcp": {
			"command": "python",
			"args": ["path/to/opcua_mcp/main.py"],
			"env": {
				"OPCUA_SERVER_URL": "your-opc-ua-server-url"
			}
		},
		"yahoo-finance": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "IMAGE"]
		},
		"papersearch": {
			"command": "/path/to/uv",
			"args": ["--directory", "/path/to/papersearch", "run", "papersearch"]
		},
		"mcp-server-github-repo": {
			"command": "/path/to/mcp-server-github-repo/build/index.js"
		},
		"emergency-medicare-planner": {
			"command": "node",
			"args": ["path/to/dist/index.js"],
			"env": {
				"GOOGLE_MAPS_API_KEY": "your_google_maps_api_key"
			}
		},
		"mcp-substack": {
			"command": "/opt/homebrew/bin/node",
			"args": ["/path/to/mcp-substack/lib/index.mjs"],
			"methods": {
				"download_substack": {
					"description": "Download and parse content from a Substack post"
				}
			}
		},
		"rfc-server": {
			"command": "npx",
			"args": ["@mjpitz/mcp-rfc"],
			"disabled": false,
			"autoApprove": []
		},
		"juliadoc": {
			"command": "npx",
			"args": ["-y", "@jonathanfischer97/server-juliadoc"],
			"env": {
				"JULIA_PROJECT": "/path/to/your/julia/project"
			}
		},
		"nodit": {
			"command": "npx",
			"args": ["@noditlabs/nodit-mcp-server@latest"],
			"env": {
				"NODIT_API_KEY": "****"
			}
		},
		"ddg-search": {
			"command": "ddg-search-mcp"
		},
		"opengov": {
			"command": "node",
			"args": ["/path/to/your/opengov-mcp-server/dist/index.js"],
			"env": {
				"DATA_PORTAL_URL": "https://data.cityofchicago.org"
			}
		},
		"opgg-esports": {
			"command": "npx",
			"args": ["-y", "@opgg/esports-mcp"]
		},
		"opgg-mcp": {
			"command": "cmd",
			"args": ["/c", "npx", "mcp-remote", "https://mcp-api.op.gg/mcp/sse"]
		},
		"autodocument": {
			"command": "node",
			"args": ["/path/to/autodocument/build/index.js"],
			"env": {
				"OPENROUTER_API_KEY": "your-api-key-here"
			},
			"disabled": false,
			"alwaysAllow": []
		},
		"tailscale": {
			"command": "tailscale-mcp-server"
		},
		"port": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "PORT_CLIENT_ID", "-e", "PORT_CLIENT_SECRET", "-e", "PORT_REGION", "-e", "PORT_LOG_LEVEL", "ivan/test-port-mcp-no-prompt"],
			"env": {
				"PORT_CLIENT_ID": "<PORT_CLIENT_ID>",
				"PORT_CLIENT_SECRET": "<PORT_CLIENT_SECRET>",
				"PORT_REGION": "<PORT_REGION>",
				"PORT_LOG_LEVEL": "<PORT_LOG_LEVEL>"
			}
		},
		"dicedb-mcp": {
			"command": "/path/to/dicedb-mcp/dist/dicedb-mcp"
		},
		"a11y": {
			"command": "npx",
			"args": ["a11y-mcp"],
			"disabled": false,
			"autoApprove": []
		},
		"k6": {
			"command": "/path/to/bin/uv",
			"args": ["--directory", "/path/to/k6-mcp-server", "run", "k6_server.py"]
		},
		"image-downloader": {
			"command": "node",
			"args": ["/path/to/mcp-image-downloader/build/index.js"]
		},
		"youtube-watchlater": {
			"command": "node",
			"args": ["/path/to/youtube-watchlater/build/index.js"],
			"env": {
				"OAUTH_CLIENT_ID": "your_client_id",
				"OAUTH_CLIENT_SECRET": "your_client_secret",
				"OAUTH_REFRESH_TOKEN": "your_refresh_token"
			}
		},
		"genaiscript-mcp": {
			"type": "stdio",
			"command": "npx",
			"args": ["genaiscript", "mcp", "--remote", "https://github.com/rajyraman/genaiscript-pac-az-mcp/", "--remote-branch", "main", "--groups", "mcp", "--startup", "mcp_resources"],
			"env": {
				"DEBUG": "*"
			}
		},
		"solana": {
			"command": "PATH-TO/sol-chad-mcp/target/release/examples/sol_chad_mcp.exe",
			"args": []
		},
		"kontxt-server": {
			"serverType": "stdio",
			"command": "python",
			"args": ["/absolute/path/to/kontxt_server.py", "--repo-path", "/absolute/path/to/your/codebase", "--transport", "stdio"],
			"env": {
				"GEMINI_API_KEY": "your-api-key-here"
			}
		},
		"txtai-assistant": {
			"command": "path/to/txtai-assistant-mcp/scripts/start.sh",
			"env": {}
		},
		"sailfish": {
			"command": "node",
			"args": ["/path/to/SubgraphMCP/build/index.js"],
			"env": {
				"RPC_URL": "https://your-edu-rpc-url.com"
			}
		},
		"crypto-trader": {
			"command": "py",
			"args": ["-3.13", "C:\\Path\\To\\Your\\Crypto-Trader-MCP-ClaudeDesktop\\main.py"]
		},
		"sourcesage": {
			"command": "sourcesage",
			"args": []
		},
		"unomi-server": {
			"command": "npx",
			"args": ["@inoyu/mcp-unomi-server"],
			"env": {
				"UNOMI_BASE_URL": "http://your-unomi-server:8181",
				"UNOMI_USERNAME": "your-username",
				"UNOMI_PASSWORD": "your-password",
				"UNOMI_PROFILE_ID": "your-profile-id",
				"UNOMI_KEY": "your-unomi-key",
				"UNOMI_EMAIL": "your-email@example.com",
				"UNOMI_SOURCE_ID": "claude-desktop"
			}
		},
		"filesystem-mcp": {
			"command": "bunx",
			"args": ["@sylphlab/filesystem-mcp"],
			"name": "Filesystem (bunx)"
		},
		"jinaai-search": {
			"command": "wsl.exe",
			"args": ["bash", "-c", "JINAAI_API_KEY=your-jinaai-api-key npx mcp-jinaai-search"]
		},
		"mcp-turso-cloud": {
			"command": "wsl.exe",
			"args": ["bash", "-c", "TURSO_API_TOKEN=your-token TURSO_ORGANIZATION=your-org node /path/to/mcp-turso-cloud/dist/index.js"]
		},
		"spheron": {
			"command": "node",
			"args": ["/absolute/path/to/spheron-mcp-plugin/mcp-server/build/index.js"],
			"env": {
				"SPHERON_PRIVATE_KEY": "your-spheron-private-key",
				"SPHERON_NETWORK": "testnet",
				"PROVIDER_PROXY_URL": "https://provider-proxy.sphn.xyz",
				"YAML_API_URL": "http://149.56.15.95:8080/generate"
			},
			"disabled": false,
			"autoApprove": []
		},
		"paradex": {
			"command": "uvx",
			"args": ["--with-editable", ".", "mcp-paradex"],
			"env": {
				"PARADEX_ENVIRONMENT": "testnet",
				"PARADEX_ACCOUNT_PRIVATE_KEY": "your_private_key"
			}
		},
		"twitter-mcp-server": {
			"command": "/path/to/twitter-mcp-server/build/index.js"
		},
		"notionApi": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "-e", "OPENAPI_MCP_HEADERS", "taewoong1378/notion-readonly-mcp-server"],
			"env": {
				"OPENAPI_MCP_HEADERS": "{\"Authorization\":\"Bearer ntn_****\",\"Notion-Version\":\"2022-06-28\"}"
			}
		},
		"contextmanager": {
			"command": "npx",
			"args": ["-y", "github:tejpalvirk/contextmanager"],
			"options": {
				"port": 3000,
				"domains": ["developer", "project", "student"]
			}
		},
		"quantitativeresearch": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "mcp/quantitativeresearch"]
		},
		"tox-testing": {
			"command": "node",
			"args": ["/path/to/tox-testing/build/index.js"],
			"env": {
				"TOX_APP_DIR": "/path/to/your/python/project",
				"TOX_TIMEOUT": "600"
			}
		},
		"substrate-mcp-rs": {
			"command": "$PROJECT_ROOT_ABSOLUTE_PATH/target/release/substrate-mcp-rs",
			"args": []
		},
		"nativewind-transformer": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-nativewind"]
		},
		"twitch-mcp-tomcools": {
			"command": "jbang",
			"args": ["--quiet", "-Dtwitch.channel=YOUR_CHANNEL_NAME", "-Dtwitch.auth=YOUR_API_KEY", "be.tomcools:twitch-mcp:1.0.0-SNAPSHOT:runner"]
		},
		"mcp-variance-log": {
			"command": "uv",
			"args": ["--directory", "PATH_TO_REPO/mcp-variance-log", "run", "mcp-variance-log"]
		},
		"Union MCP": {
			"command": "uv",
			"args": ["run", "--with", "mcp[cli]", "--with-editable", "/Users/username/union-mcp", "mcp", "run", "/Users/username/union-mcp/examples/server.py"]
		},
		"variflight": {
			"command": "npx",
			"args": ["-y", "@variflight-ai/variflight-mcp"],
			"env": {
				"VARIFLIGHT_API_KEY": "your_api_key_here"
			}
		},
		"pipecd": {
			"command": "/Users/sawada/go/bin/mcp-server-pipecd",
			"args": [],
			"env": {
				"PIPECD_HOST": "demo.pipecd.dev:443",
				"PIPECD_API_KEY_FILE": "/Users/sawada/.config/mcp-server-pipecd/api_key",
				"PIPECD_INSECURE": "false"
			}
		},
		"cerebra-legal": {
			"command": "node",
			"args": ["/path/to/mcp-cerebra-legal-server/build/index.js"],
			"disabled": false,
			"alwaysAllow": []
		},
		"pprof-analyzer-docker": {
			"command": "docker run -i --rm pprof-analyzer-mcp"
		},
		"pprof-analyzer": {
			"command": "pprof-analyzer-mcp"
		},
		"Together AI Image Server": {
			"command": "/path/to/together-ai-image-server/build/index.js"
		},
		"seq": {
			"command": "node",
			"args": ["/Users/ahmadreza/source/ahmad2x4/mcp-server-seq/build/seq-server.js"],
			"env": {
				"SEQ_BASE_URL": "your-seq-url",
				"SEQ_API_KEY": "your-api-key"
			}
		},
		"windows-cmd": {
			"command": "node",
			"args": ["/path/to/dist/index.js"]
		},
		"adspirer": {
			"command": "adspirer-mcp",
			"args": ["start"],
			"env": {
				"API_KEY": "your_api_key_here"
			}
		},
		"MCTSServer": {
			"command": "uv",
			"args": ["run", "--directory", "/home/ty/Repositories/ai_workspace/mcts-mcp-server/src/mcts_mcp_server", "server.py"],
			"env": {
				"PYTHONPATH": "/home/ty/Repositories/ai_workspace/mcts-mcp-server"
			}
		},
		"4o-image": {
			"command": "npx",
			"args": ["-y", "4oimage-mcp"],
			"env": {
				"API_KEY": "YOUR_API_KEY_HERE"
			}
		},
		"news": {
			"command": "path_to_your_npx",
			"args": ["news-mcp-server"],
			"env": {
				"NEWS_API_KEY": "API_KEY_FROM_NEWS_DATA",
				"NEWS_BASE_URL": "https://newsdata.io"
			}
		},
		"cutter": {
			"command": "python",
			"args": ["C:\\ABSOLUTE_PATH_TO\\bridge_mcp_cutter.py"]
		},
		"browser-use": {
			"command": "browser-use-mcp",
			"args": ["--model", "claude-3-opus-20240229"]
		},
		"b12": {
			"command": "npx",
			"args": ["-y", "@b12/website-generator-mcp-server"]
		},
		"node-omnibus": {
			"command": "node",
			"args": ["path/to/node-omnibus-server/dist/index.js"]
		},
		"browse-together": {
			"command": "/path/to/deno",
			"args": ["run", "--allow-read", "--allow-net", "--allow-env", "--allow-sys", "/path/to/browse-together-mcp/mcp.ts"],
			"env": {
				"PORT": "8888"
			}
		},
		"iris": {
			"command": "uvx",
			"args": ["mcp-server-iris"],
			"env": {
				"IRIS_HOSTNAME": "localhost",
				"IRIS_PORT": "1972",
				"IRIS_NAMESPACE": "USER",
				"IRIS_USERNAME": "_SYSTEM",
				"IRIS_PASSWORD": "SYS"
			}
		},
		"imf": {
			"command": "uvx",
			"args": ["imf-data-mcp"]
		},
		"spring-ai-chrome-mcp-server": {
			"command": "/Users/baetaehyeon/Library/Java/JavaVirtualMachines/corretto-21.0.5-1/Contents/Home/bin/java",
			"args": ["-Dspring.ai.mcp.server.stdio=true", "-jar", "/Users/baetaehyeon/dev/chrome-mcp-server/build/libs/chrome-mcp-server-0.0.1.jar"]
		},
		"flux-schnell": {
			"command": "node",
			"args": ["/path/to/flux-schnell-mcp/build/index.js"],
			"env": {
				"REPLICATE_API_TOKEN": "your-replicate-api-token"
			},
			"disabled": false,
			"alwaysAllow": []
		},
		"gpt-image-1": {
			"command": "npx",
			"args": ["-y", "@cloudwerxlab/gpt-image-1-mcp"],
			"env": {
				"OPENAI_API_KEY": "sk-your-openai-api-key",
				"GPT_IMAGE_OUTPUT_DIR": "/home/username/Pictures/ai-generated-images"
			}
		},
		"search-stock-news-mcp": {
			"command": "npx",
			"args": ["-y", "search-stock-news-mcp@latest"],
			"env": {
				"TAVILY_API_KEY": "your-api-key-here"
			}
		},
		"expert": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/expert-server/build/index.js"],
			"env": {
				"ANTHROPIC_API_KEY": "your_api_key_here"
			}
		},
		"scryfall": {
			"command": "npx",
			"args": ["scryfall-mcp-server"]
		},
		"filesystem-server": {
			"command": "node",
			"args": ["/path/to/filesystem-server/build/index.js", "/path/to/allowed/dir1", "/path/to/allowed/dir2"],
			"disabled": false,
			"autoApprove": []
		},
		"arxiv-search-mcp": {
			"command": "/path/to/dir/arxiv-search-mcp/bin/arxiv-search-mcp"
		},
		"deepwriter": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/deepwriter-mcp/build/index.js"],
			"env": {
				"DEEPWRITER_API_KEY": "your_api_key_here"
			}
		},
		"scrapi": {
			"command": "npx",
			"args": ["-y", "@deventerprisesoftware/scrapi-mcp"],
			"env": {
				"SCRAPI_API_KEY": "<YOUR_API_KEY>"
			}
		},
		"xcode-mcp": {
			"command": "npx",
			"args": ["@devyhan/xcode-mcp", "-y"]
		},
		"cockroachdb": {
			"command": "node",
			"args": ["/path/to/cockroachdb-mcp-server/dist/server.js", "postgres://user:password@host:port/database", "your_auth_token"]
		},
		"crdb": {
			"command": "node",
			"args": ["/path/to/cockroachdb-mcp-server/dist/server.js", "postgres://root@127.0.0.1:26257/testdb", "your_auth_token"]
		},
		"bybit-server-docker": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "--init", "-e", "ACCESS_KEY={ACCESS_KEY}", "-e", "SECRET_KEY={SECRET_KEY}", "dlwjdtn535/mcp-bybit-server:latest"]
		},
		"mcp-undetected-chromedriver": {
			"command": "npx",
			"args": ["-y", "@smithery/cli@latest", "run", "@dragons96/mcp-undetected-chromedriver", "--config", "{}"]
		},
		"patchright": {
			"command": "node",
			"args": ["path/to/patchright-lite-mcp-server/dist/index.js"]
		},
		"f2c-mcp": {
			"command": "cmd",
			"args": ["/c", "npx", "-y", "@f2c/mcp"],
			"env": {
				"personalToken": ""
			}
		},
		"prefect": {
			"command": "uvx",
			"args": ["prefect-mcp-server"],
			"env": {}
		},
		"imagegenerator": {
			"command": "pnpx",
			"args": ["-y", "tsx", "/path/to/mcp-imagegen/src/index.ts"],
			"env": {
				"PROVIDER": "replicate",
				"REPLICATE_API_TOKEN": "your-replicate-api-token"
			}
		},
		"mcp4gql": {
			"command": "npx",
			"args": ["-y", "mcp4gql"],
			"env": {
				"GRAPHQL_ENDPOINT": "YOUR_GRAPHQL_ENDPOINT_URL",
				"AUTH_TOKEN": "YOUR_OPTIONAL_AUTH_TOKEN"
			}
		},
		"tpapi": {
			"command": "/path/to/java",
			"args": ["-jar", "/path/to/project/build/libs/tpapi-mcp-server-0.0.1-SNAPSHOT.jar"]
		},
		"latex-mathml-server": {
			"isActive": true,
			"command": "node",
			"args": ["path_to_your_server/index.js"]
		},
		"hydramcp": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "--name", "hydramcp", "hydramcp"]
		},
		"jenkins-server": {
			"command": "node",
			"args": ["/path/to/jenkins-server-mcp/build/index.js"],
			"env": {
				"JENKINS_URL": "https://your-jenkins-server.com",
				"JENKINS_USER": "your-username",
				"JENKINS_TOKEN": "your-api-token"
			}
		},
		"rollbar-mcp": {
			"command": "YOUR_NODE_PATH",
			"args": ["YOUR_PROJECT_PATH/mcp-rollbar-server/dist/src/index.js"],
			"env": {
				"ROLLBAR_PROJECT_TOKEN": "YOUR_PROJECT_ACCESS_TOKEN",
				"ROLLBAR_ACCOUNT_TOKEN": "YOUR_ACCOUNT_ACCESS_TOKEN",
				"ROLLBAR_PROJECT_ID": "YOUR_PROJECT_ID",
				"ROLLBAR_PROJECT_NAME": "YOUR_PROJECT_NAME"
			}
		},
		"payman": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/payman-mcp-server/build/payman-server.js"]
		},
		"hubble-tool": {
			"command": "npx",
			"args": ["-y", "hubble-mcp-tool"],
			"env": {
				"HUBBLE_API_KEY": "your_api_key"
			}
		},
		"onenote": {
			"command": "python",
			"args": ["-m", "onenote_mcp"]
		},
		"emojikey": {
			"command": "npx",
			"args": ["@identimoji/mcp-server-emojikey"],
			"env": {
				"EMOJIKEYIO_API_KEY": "your-api-key-from-emojikey.io",
				"MODEL_ID": "Claude-3-5-Sonnet-20241022"
			}
		},
		"image-extractor": {
			"command": "mcp-image-extractor",
			"disabled": false
		},
		"portfolio-manager": {
			"command": "/path/to/portfolio-manager-mcp/venv/bin/python",
			"args": ["/path/to/portfolio-manager-mcp/main.py"],
			"env": {
				"PYTHONPATH": "/path/to/portfolio-manager-mcp",
				"ALPHA_VANTAGE_API_KEY": "your_key_here",
				"NEWS_API_KEY": "your_key_here"
			}
		},
		"statusObserver": {
			"command": "node",
			"args": ["ABSOLUTE_PATH_TO_DIRECTORY/mcp-status-observer/build/index.js"]
		},
		"otherMcp1": {
			"command": "...",
			"args": ["..."]
		},
		"otherMcp2": {
			"command": "...",
			"args": ["..."]
		},
		"youtube-music-mcp": {
			"command": "npx",
			"args": ["-y", "@instructa/mcp-youtube-music"],
			"env": {
				"YOUTUBE_API_KEY": "<INSERT_API_KEY_HERE>"
			}
		},
		"shared-knowledge-base": {
			"command": "node",
			"args": ["/path/to/shared-knowledge-mcp/dist/index.js"],
			"env": {
				"KNOWLEDGE_BASE_PATH": "/path/to/your/docs",
				"OPENAI_API_KEY": "your-openai-api-key",
				"SIMILARITY_THRESHOLD": "0.7",
				"CHUNK_SIZE": "1000",
				"CHUNK_OVERLAP": "200",
				"VECTOR_STORE_TYPE": "weaviate",
				"VECTOR_STORE_CONFIG": "{\"url\":\"http://localhost:8080\",\"className\":\"Document\",\"textKey\":\"content\"}"
			},
			"disabled": false,
			"autoApprove": []
		},
		"mcp-cli-exec": {
			"command": "C:\\Users\\jim\\AppData\\Roaming\\nvm\\v22.1.0\\node.exe",
			"args": ["C:\\Users\\jim\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npx-cli.js", "-y", "mcp-cli-exec"]
		},
		"tlon-mcp": {
			"command": "/bin/sh",
			"args": ["-c", "cd /path/to/server && node index.js"]
		},
		"clanki": {
			"command": "node",
			"args": ["/absolute/path/to/clanki/build/index.js"]
		},
		"osrs": {
			"command": "node",
			"args": ["/path/to/mcp-osrs/dist/index.js"]
		},
		"documents": {
			"command": "/path/to/mcp-document-reader",
			"args": []
		},
		"jina-ai": {
			"command": "node",
			"args": ["/path/to/jina-ai-mcp/build/index.js"],
			"env": {
				"JINA_API_KEY": "your_api_key_here"
			}
		},
		"RedNote MCP": {
			"command": "npx",
			"args": ["rednote-mcp", "--stdio"]
		},
		"doordash": {
			"command": "node",
			"args": ["<thePathToYour>/build/index.js"],
			"env": [{
				"DOORDASH_API_KEY": "<REPLACE>"
			}]
		},
		"Biomart": {
			"command": "uv",
			"args": ["run", "--with", "mcp[cli]", "--with", "pybiomart", "mcp", "run", "/your/path/to/biomart-mcp.py"]
		},
		"figma-to-code": {
			"command": "node",
			"args": ["PATH_TO_REPO/build/index.js"],
			"env": {
				"FIGMA_TOKEN": "your_figma_token",
				"FIGMA_FILE": "your_figma_file_id",
				"PROJECT_DIR": "your_project_directory"
			}
		},
		"playwright-lighthouse": {
			"command": "node",
			"args": ["/path-to/playwright-lighthouse-mcp/build/index.js"]
		},
		"bus_service": {
			"command": "path/to/uv.exe",
			"args": ["--directory", "path/to/kmb_bus", "run", "kmb_mcp.py"],
			"background": true
		},
		"shell": {
			"command": "npx",
			"args": ["-y", "@kevinwatt/shell-mcp"]
		},
		"image-tools": {
			"command": "npx",
			"args": ["image-tools-mcp"],
			"env": {
				"TINIFY_API_KEY": "<YOUR_TINIFY_API_KEY>",
				"FIGMA_API_TOKEN": "<YOUR_FIGMA_API_TOKEN>"
			}
		},
		"arangodb-account": {
			"command": "npx",
			"args": ["-y", "arango-mcp-server", "http://localhost:8529", "root", "root"]
		},
		"markdown-to-html": {
			"command": "node",
			"args": ["/path/to/markdown-to-html/build/index.js"]
		},
		"starknet-mcp-server": {
			"command": "npx",
			"args": ["@mcpdotdirect/starknet-mcp-server"]
		},
		"starknet-mcp-http": {
			"command": "npx",
			"args": ["@mcpdotdirect/starknet-mcp-server", "http"]
		},
		"starknet-mcp-sse": {
			"url": "http://localhost:3000/sse"
		},
		"mixpanel-analytics": {
			"command": "npx",
			"args": ["-y", "mixpanel-mcp-server", "--token", "YOUR_MIXPANEL_TOKEN"]
		},
		"ollama-MCP-server": {
			"command": "python",
			"args": ["-m", "ollama_mcp_server"],
			"env": [{
				"model": "llama3:latest"
			}]
		},
		"nftgoapi": {
			"command": "npx",
			"args": ["-y", "@nftgo/mcp-nftgo-api", "NFTGO-API-KEY"]
		},
		"idb": {
			"command": "npx",
			"args": ["-y", "@noahlozevski/idb"]
		},
		"nostr-code-snippet-mcp": {
			"command": "node",
			"args": ["/Users/<path to>/nostr-code-snippet-mcp/dist/index.js"],
			"env": {
				"NSEC": "<some nsec>",
				"RELAYS": "wss://relay.damus.io,wss://relay.snort.social"
			}
		},
		"norman-mcp-server": {
			"command": "<path_to_your_python>/python",
			"args": ["-m", "norman_mcp"],
			"env": {
				"NORMAN_EMAIL": "your-email@example.com",
				"NORMAN_PASSWORD": "your-password",
				"NORMAN_ENVIRONMENT": "production"
			}
		},
		"novacv": {
			"command": "npx",
			"args": ["mcp-server-novacv"],
			"env": {
				"NOVACV_API_KEY": "your_api_key"
			}
		},
		"nia-codebase": {
			"command": "npx",
			"args": ["-y", "nia-codebase-mcp@1.0.1", "--api-key=YOUR_NIA_API_KEY"]
		},
		"zipic": {
			"command": "zipic-mcp-server"
		},
		"nina_advanced_mcp_api": {
			"command": "uv",
			"args": ["run", "--with", "fastmcp,fastapi,uvicorn,pydantic,aiohttp,requests,python-dotenv", "fastmcp", "run", "path/nina_advanced_mcp.py"],
			"env": {
				"NINA_HOST": "NINA_IP",
				"NINA_PORT": "1888",
				"LOG_LEVEL": "INFO",
				"IMAGE_SAVE_DIR": "~/Desktop/NINA_Images"
			}
		},
		"pinata": {
			"command": "npx",
			"args": ["pinata-mcp", "/path/to/allowed/directory"],
			"env": {
				"PINATA_JWT": "<YOUR_JWT>",
				"GATEWAY_URL": "example.mypinata.cloud"
			}
		},
		"playwright-sse-mcp-server-local": {
			"url": "http://172.17.0.1:<PORT>/sse"
		},
		"alpha-vantage": {
			"command": "node",
			"args": ["path/to/alpha-vantage-server/build/index.js"],
			"env": {
				"ALPHA_VANTAGE_API_KEY": "your-api-key-here"
			},
			"disabled": false,
			"alwaysAllow": []
		},
		"x-twitter-mcp": {
			"command": "uv",
			"args": ["--directory", "/path/to/x-twitter-mcp-server", "run", "x-twitter-mcp-server"],
			"env": {
				"PYTHONUNBUFFERED": "1"
			}
		},
		"files-db-mcp": {
			"command": "python",
			"args": ["/path/to/src/claude_mcp_server.py", "--host", "localhost", "--port", "6333"]
		},
		"mcp-tabnews": {
			"command": "npm",
			"args": ["exec", "--", "@smithery/cli@latest", "run", "@renant/mcp-tabnews"]
		},
		"mcp-qase": {
			"command": "/path/to/mcp-qase/build/index.js",
			"env": {
				"QASE_API_TOKEN": "<YOUR_TOKEN>"
			}
		},
		"feishuproj": {
			"command": "uvx",
			"args": ["mcp-feishu-proj@latest", "--transport", "stdio"],
			"env": {
				"FS_PROJ_PROJECT_KEY": "your_project_key",
				"FS_PROJ_USER_KEY": "your_user_key",
				"FS_PROJ_PLUGIN_ID": "your_plugin_id",
				"FS_PROJ_PLUGIN_SECRET": "your_plugin_secret"
			}
		},
		"github-repo-mcp": {
			"command": "wsl",
			"args": ["bash", "-c", "'/home/[username]/.nvm/versions/node/v20.18.0/bin/npx github-repo-mcp'"],
			"enabled": true
		},
		"mcp-qqmusic-test-server": {
			"command": "uv",
			"args": ["--directory", "{put your local dir here}/mcp-qqmusic-test-server", "run", "main.py"]
		},
		"hefeng-weather": {
			"command": "npx",
			"args": ["hefeng-mcp-weather@latest", "--apiKey=${API_KEY}"]
		},
		"simplelocalize": {
			"command": "uv",
			"args": ["run", "--project", "/path/to/mcp-simplelocalize/", "/path/to/mcp-simplelocalize/main.py"],
			"env": {
				"SIMPLELOCALIZE_API_KEY": "your-api-key-here"
			}
		},
		"testrail": {
			"command": "uvx",
			"args": ["testrail-mcp"],
			"env": {
				"TESTRAIL_URL": "https://your-instance.testrail.io",
				"TESTRAIL_USERNAME": "your-email@example.com",
				"TESTRAIL_API_KEY": "your-api-key"
			}
		},
		"modal-mcp-server": {
			"command": "uv",
			"args": ["--project", "/path/to/modal-mcp-server", "run", "/path/to/modal-mcp-server/src/modal_mcp/server.py"]
		},
		"mcp-atlassian": {
			"command": "uv",
			"args": ["--directory", "/path/to/your/mcp-atlassian", "run", "mcp-atlassian", "--confluence-url=https://your-domain.atlassian.net/wiki", "--confluence-username=your.email@domain.com", "--confluence-token=your_api_token", "--jira-url=https://your-domain.atlassian.net", "--jira-username=your.email@domain.com", "--jira-token=your_api_token"]
		},
		"tongyi-wanxiang": {
			"command": "npx",
			"args": ["-y", "tongyi-wanx-mcp-server@latest"],
			"env": {
				"DASHSCOPE_API_KEY": "<\u4f60\u7684\u901a\u4e49\u4e07\u76f8 API \u5bc6\u94a5>"
			}
		},
		"k8s-interactive": {
			"command": "/path/to/k8s-interactive/build/index.js"
		},
		"nba_mcp_server": {
			"command": "/path/to/your/python",
			"args": ["/path/to/nba_server.py"]
		},
		"desktop-automation": {
			"command": "npx",
			"args": ["-y", "mcp-desktop-automation"]
		},
		"unifuncs": {
			"command": "npx",
			"args": ["-y", "@unifuncs/ufn-mcp-server"],
			"env": {
				"UNIFUNCS_API_KEY": "sk-**********"
			}
		},
		"moneybird": {
			"command": "npx",
			"args": ["-y", "moneybird-mcp-server"],
			"env": {
				"MONEYBIRD_API_TOKEN": "your_api_token_here",
				"MONEYBIRD_ADMINISTRATION_ID": "your_administration_id_here"
			}
		},
		"deepseek-server": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "DEEPSEEK_API_KEY", "mcp_server_deepseek"],
			"env": {
				"DEEPSEEK_API_KEY": "your_api_key_here"
			}
		},
		"k8s-mcp": {
			"command": "uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/PARENT/FOLDER/k8s-mcp", "run", "server.py"]
		},
		"dingding": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "DINGDING_APP_KEY=\u4f60\u7684AppKey", "-e", "DINGDING_APP_SECRET=\u4f60\u7684AppSecret", "ghcr.io/\u4f60\u7684\u7528\u6237\u540d/dingding-mcp:latest"]
		},
		"oceanbase": {
			"command": "uv",
			"args": ["--directory", "path/to/oceanbase_mcp_server", "run", "oceanbase_mcp_server"],
			"env": {
				"OB_HOST": "localhost",
				"OB_PORT": "2881",
				"OB_USER": "your_username",
				"OB_PASSWORD": "your_password",
				"OB_DATABASE": "your_database"
			}
		},
		"oracle-mcp-server": {
			"url": "http://{server-ip}:{server-port}/sse",
			"enabled": true
		},
		"shortcut": {
			"command": "python",
			"args": ["-m", "src.server"],
			"env": {
				"SHORTCUT_API_TOKEN": "your_token_here"
			}
		},
		"zeropath-mcp-server": {
			"command": "uv",
			"args": ["run", "--project", "<absolute cloned directory path>/zeropath-mcp-server", "<absolute cloned directory path>/zeropath-mcp-server/main.py"]
		},
		"markdown2pdf": {
			"command": "node",
			"args": ["path/to/markdown2pdf-mcp/build/index.js"],
			"env": {
				"M2P_OUTPUT_DIR": "/path/to/output/directory"
			}
		},
		"MalwareAnalysisMCP": {
			"command": "node",
			"args": ["/path/to/MalwareAnalysisMCP/mcp-debug-proxy.js"]
		},
		"resource-hub-server": {
			"command": "npx @adamwattis/resource-hub-server"
		},
		"mcp-google-suite": {
			"command": "python",
			"args": ["-m", "mcp_google_suite"],
			"env": {
				"GOOGLE_APPLICATION_CREDENTIALS": "~/.google/server-creds.json",
				"GOOGLE_OAUTH_CREDENTIALS": "~/.google/oauth.keys.json"
			}
		},
		"spurs-blog": {
			"command": "uv",
			"args": ["--directory", "/REPLACE/WITH/FULL/PATH/TO/spurs-blog-mcp-server/", "run", "pounding_the_rock.py"]
		},
		"metal": {
			"command": "node",
			"args": ["/path/to/metal-mcp/build/index.js"]
		},
		"file-organizer": {
			"url": "http://localhost:3001",
			"port": 3001,
			"enabled": true,
			"description": "File organization MCP server"
		},
		"hh-jira-mcp-server": {
			"command": "uv",
			"args": ["--directory", "<path_to_project>/hh-jira-mcp-server", "run", "hh-jira-mcp-server"],
			"env": {
				"HH_JIRA_MCP_USER": "v.pupkin",
				"HH_JIRA_MCP_TEAM": "some-team",
				"HH_JIRA_MCP_SEARCH_FILTER": "status in (\"Development: In progress\")"
			}
		},
		"mantrachain-mcp": {
			"command": "node",
			"args": ["your_path/mantrachain-mcp/build/index.js"],
			"env": {
				"MNEMONIC": "YOUR_MNEMONIC"
			}
		},
		"mantrachain-mcp-sse": {
			"url": "http://localhost:3000/sse",
			"transportType": "sse"
		},
		"stdio-mcp-server": {
			"command": "npx",
			"args": ["stdio-mcp-server"]
		},
		"outlook-meetings-scheduler": {
			"command": "npx",
			"args": ["-y", "outlook-meetings-scheduler"],
			"env": {
				"CLIENT_ID": "<YOUR_CLIENT_ID>",
				"CLIENT_SECRET": "<YOUR_CLIENT_SECRET>",
				"TENANT_ID": "<YOUR_TENANT_ID>",
				"USER_EMAIL": "<YOUR_EMAIL>"
			}
		},
		"tavily-search-server": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "TAVILY_API_KEY", "-v", "/Users/<username>/<FULL_PATH...>/tavily-search-mcp-server:/app", "tavily-search-mcp-server"],
			"env": {
				"TAVILY_API_KEY": "your_api_key_here"
			}
		},
		"fastmcp-sonarqube-metrics": {
			"command": "uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/PARENT/FOLDER/fastmcp-sonarqube-metrics", "run", "server.py"]
		},
		"mcp-wait": {
			"command": "npx",
			"args": ["-y", "@automation-ai-labs/mcp-wait"],
			"env": {
				"TRANSPORT_TYPE": "stdio"
			}
		},
		"msbuild": {
			"command": "<your repo root>\\msbuild.mcp\\bin\\Debug\\net9.0\\msbuild.mcp.exe"
		},
		"slowtime": {
			"command": "node",
			"args": ["/path/to/slowtime-mcp-server/build/index.js"]
		},
		"mcp-maker": {
			"command": "node",
			"args": ["/absolute/path/to/mcp-maker/build/index.js"]
		},
		"mcprouter": {
			"command": "/path/to/mcprouter/build/index.js"
		},
		"shaka-packager": {
			"command": "/Users/username/.local/bin/uv",
			"args": ["run", "--with", "mcp[cli]", "/Users/username/Development/shaka-packager-mcp/shaka_packager_mcp.py"],
			"env": {
				"VIDEO_PATH": "/Users/username/Videos",
				"SHAKA_PACKAGER_PATH": "/Users/username/.shaka/packager"
			}
		},
		"orion-vision-mcp": {
			"command": "npx",
			"args": ["-y", "orion-vision-mcp@latest"],
			"env": {
				"AZURE_FORM_RECOGNIZER_ENDPOINT": "your-endpoint-here",
				"AZURE_FORM_RECOGNIZER_KEY": "your-key-here"
			}
		},
		"hermes-search-mcp": {
			"command": "npx",
			"args": ["-y", "hermes-search-mcp@latest"],
			"env": {
				"AZURE_SEARCH_ENDPOINT": "your-search-endpoint",
				"AZURE_SEARCH_API_KEY": "your-api-key",
				"AZURE_SEARCH_INDEX_NAME": "your-index-name"
			}
		},
		"brex-server": {
			"command": "node",
			"args": ["/path/to/brex-mcp-server/build/index.js"],
			"env": {
				"BREX_API_KEY": "your_brex_api_key_here",
				"BREX_API_URL": "https://platform.brexapis.com",
				"PORT": "3000",
				"NODE_ENV": "development",
				"RATE_LIMIT_REQUESTS": "1000",
				"RATE_LIMIT_WINDOW_MS": "60000",
				"LOG_LEVEL": "info"
			}
		},
		"shodan": {
			"command": "node",
			"args": ["/path/to/shodan-mcp-server/build/index.js"],
			"env": {
				"SHODAN_API_KEY": "your-api-key-here"
			}
		},
		"jupyter-earth": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "SERVER_URL", "-e", "TOKEN", "-e", "NOTEBOOK_PATH", "datalayer/jupyter-earth-mcp-server:latest"],
			"env": {
				"SERVER_URL": "http://host.docker.internal:8888",
				"TOKEN": "MY_TOKEN",
				"NOTEBOOK_PATH": "notebook.ipynb"
			}
		},
		"snowflake-docker": {
			"command": "docker",
			"args": ["run", "-i", "snowflake-mcp"],
			"env": {
				"SNOWFLAKE_USER": "your_username",
				"SNOWFLAKE_ACCOUNT": "your_account",
				"SNOWFLAKE_DATABASE": "your_database",
				"SNOWFLAKE_WAREHOUSE": "your_warehouse",
				"SNOWFLAKE_PASSWORD": "your_password"
			}
		},
		"onos": {
			"command": "uv",
			"args": ["--directory", "parent_of_servers_repo/servers/src/onos-mcp-server", "run", "server.py"],
			"env": {
				"ONOS_API_BASE": "http://localhost:8181/onos/v1",
				"ONOS_USERNAME": "onos",
				"ONOS_PASSWORD": "rocks"
			}
		},
		"mcp-cryptowallet-evm": {
			"command": "node",
			"args": ["/path/to/your/mcp-cryptowallet-evm/build/index.js"]
		},
		"parquet-mcp-server": {
			"command": "uv",
			"args": ["--directory", "/home/${USER}/workspace/parquet_mcp_server/src/parquet_mcp_server", "run", "main.py"]
		},
		"macos-notification-mcp": {
			"command": "uvx",
			"args": ["macos-notification-mcp"]
		},
		"mcp-chrome-integration": {
			"command": "uv",
			"args": ["run", "--directory", "/usr/local/bin/mcp-chrome-integration/src", "mcp-server"],
			"env": {
				"WEBSOCKET_PORT": "8012"
			}
		},
		"dummy-user-server": {
			"command": "java",
			"args": ["-Dspring.ai.mcp.server.stdio=true", "-Dspring.main.web-application-type=none", "-Dlogging.pattern.console=", "-jar", "path/to/mcp-spring-java-0.0.1-SNAPSHOT.jar"]
		},
		"dust-mcp": {
			"command": "npm",
			"args": ["run", "start:server"],
			"env": {
				"DUST_API_KEY": "${YOUR_API_KEY}",
				"DUST_WORKSPACE_ID": "${YOUR_WORKSPACE_ID}",
				"DUST_AGENT_ID": "${YOUR_AGENT_ID}"
			},
			"host": "127.0.0.1",
			"port": 5001,
			"timeout": 30000
		},
		"dust-agent": {
			"command": "npm",
			"args": ["run", "start:server"],
			"cwd": "path/to/mcp-dust-server",
			"host": "127.0.0.1",
			"port": 5001,
			"timeout": 30000,
			"env": {
				"DUST_API_KEY": "${YOUR_API_KEY}",
				"DUST_WORKSPACE_ID": "${YOUR_WORKSPACE_ID}",
				"DUST_AGENT_ID": "${YOUR_AGENT_ID}"
			}
		},
		"mcpterm": {
			"command": "mcpterm",
			"args": []
		},
		"perplexity-tool": {
			"command": "node",
			"args": ["/full/path/to/perplexity-tool/server.js"]
		},
		"cisa-m365": {
			"command": "node",
			"args": ["path/to/cisa-m365/build/index.js"],
			"env": {
				"TENANT_ID": "your-tenant-id",
				"CLIENT_ID": "your-client-id",
				"CLIENT_SECRET": "your-client-secret"
			}
		},
		"omgflux-mcp": {
			"command": "node",
			"args": ["/path/to/omgflux-mcp-server/build/index.js"],
			"env": {
				"OHMYGPT_API_KEY": "your-api-key-here"
			}
		},
		"base": {
			"command": "npx",
			"args": ["-y", "base-network-mcp-server"],
			"env": {
				"BASE_PROVIDER_URL": "https://api.developer.coinbase.com/rpc/v1/base/YOUR_API_KEY",
				"WALLET_PRIVATE_KEY": "your_private_key_here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"video-generator": {
			"command": "node",
			"args": ["your_install_path/fal-mcp-server/build/index.js"],
			"env": {
				"FAL_KEY": "your_fal_key_here"
			}
		},
		"image": {
			"command": "uv",
			"args": ["--directory", "/path/to/mcp-image", "run", "mcp_image.py"]
		},
		"Authenticator App MCP": {
			"command": "cmd",
			"args": ["/c", "npx", "-y", "authenticator-mcp", "--access-token=YOUR-KEY"]
		},
		"mcp-easy-copy": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/mcp_easy_copy/build/index.js"]
		},
		"serper": {
			"command": "python3",
			"args": ["serper-mcp-server"],
			"env": {
				"SERPER_API_KEY": "<Your Serper API key>"
			}
		},
		"mcp-server-ghibli-video": {
			"command": "npx",
			"args": ["-y", "@openmcprouter/mcp-server-ghibli-video"],
			"env": {
				"Ghibli_API_URL": "https://www.gpt4oimg.com"
			}
		},
		"gitlab-mcp-code-review": {
			"command": "/path/to/your/gitlab-mcp-code-review/.venv/bin/python",
			"args": ["/path/to/your/gitlab-mcp-code-review/server.py", "--transport", "stdio"],
			"cwd": "/path/to/your/gitlab-mcp-code-review",
			"env": {
				"PYTHONPATH": "/path/to/your/gitlab-mcp-code-review",
				"VIRTUAL_ENV": "/path/to/your/gitlab-mcp-code-review/.venv",
				"PATH": "/path/to/your/gitlab-mcp-code-review/.venv/bin:/usr/local/bin:/usr/bin:/bin"
			},
			"stdio": true
		},
		"hive": {
			"command": "npx",
			"args": ["-y", "@gluneau/hive-mcp-server"],
			"env": {
				"HIVE_USERNAME": "your-hive-username",
				"HIVE_POSTING_KEY": "your-hive-posting-private-key",
				"HIVE_ACTIVE_KEY": "your-hive-active-private-key",
				"HIVE_MEMO_KEY": "your-hive-memo-private-key"
			}
		},
		"audio-interface": {
			"command": "/path/to/your/.venv/bin/python",
			"args": ["/path/to/your/audio_server.py"],
			"env": {
				"PYTHONPATH": "/path/to/your/audio-mcp-server"
			}
		},
		"clockify-time-entries": {
			"command": "ts-node",
			"args": ["ABSOLUTE_PATH/src/index.ts"],
			"env": {
				"CLOCKIFY_API_URL": "https://api.clockify.me/api/v1",
				"CLOCKIFY_API_TOKEN": "YOUR_CLOCKIFY_API_TOKEN_HERE"
			}
		},
		"eventbrite": {
			"command": "npx",
			"args": ["-y", "@ibraheem4/eventbrite-mcp"],
			"env": {
				"EVENTBRITE_API_KEY": "your-eventbrite-api-key"
			},
			"disabled": false,
			"autoApprove": []
		},
		"aws-cli": {
			"command": "node",
			"args": ["/path/to/aws-cli-mcp-server/dist/index.js"]
		},
		"medrxiv": {
			"command": "bash",
			"args": ["-c", "source /home/YOUR/PATH/mcp-server-medRxiv/.venv/bin/activate && python /home/YOUR/PATH/mcp-server-medRxiv/medrxiv_server.py"],
			"env": {},
			"disabled": false,
			"autoApprove": []
		},
		"endpoint": "http://127.0.0.1:8000/sse",
		"mcp-fredapi": {
			"command": "uv",
			"args": ["--directory", "/path/to/mcp-fredapi", "run", "--with", "mcp", "--with", "httpx", "mcp", "run", "server.py"]
		},
		"defectdojo": {
			"command": "defectdojo-mcp",
			"args": [],
			"env": {
				"DEFECTDOJO_API_TOKEN": "YOUR_API_TOKEN_HERE",
				"DEFECTDOJO_API_BASE": "https://your-defectdojo-instance.com"
			}
		},
		"CWM-API-Gateway-MCP": {
			"command": "python3",
			"args": ["/path/to/CWM-API-Gateway-MCP/api_gateway_server.py"],
			"env": {
				"CONNECTWISE_API_URL": "https://na.myconnectwise.net/v4_6_release/apis/3.0",
				"CONNECTWISE_COMPANY_ID": "your_company_id",
				"CONNECTWISE_PUBLIC_KEY": "your_public_key",
				"CONNECTWISE_PRIVATE_KEY": "your_private_key",
				"CONNECTWISE_AUTH_PREFIX": "yourprefix+"
			}
		},
		"rootdata": {
			"command": "/path/to/uv",
			"args": ["--directory", "/absolute/path/to/rootdata-mcp-server", "run", "server.py"]
		},
		"qanon_mcp": {
			"command": "uv",
			"args": ["tool", "run", "qanon_mcp"]
		},
		"unraid": {
			"command": "/path/to/python",
			"args": ["/path/to/unraid-mcp/run_server.py"],
			"env": {
				"UNRAID_API_URL": "http://your-unraid-server:port/graphql",
				"UNRAID_API_KEY": "your-api-key",
				"LOG_LEVEL": "INFO",
				"CLAUDE_MCP_SERVER": "true"
			},
			"disabled": false,
			"autoApprove": []
		},
		"netskope-mcp": {
			"command": "node",
			"args": ["dist/cli.js"],
			"cwd": "/path/to/netskope-mcp",
			"env": {
				"NETSKOPE_BASE_URL": "https://your-tenant.goskope.com",
				"NETSKOPE_API_KEY": "your-token"
			}
		},
		"lichess": {
			"command": "lichess-mcp",
			"env": {
				"LICHESS_TOKEN": "your-lichess-api-token"
			}
		},
		"@kazuph/mcp-devin": {
			"command": "/path/to/@kazuph/mcp-devin/build/index.js"
		},
		"book-fetcher": {
			"command": "uv",
			"args": ["--directory", "<PATH_TO_PARENT_DIR>/libgen-mcp", "run", "main.py"]
		},
		"crypto_mcp": {
			"command": "cmd",
			"args": ["/c", "npx", "-y", "@smithery/cli@latest", "run", "@telegramtool/crypto_mcp", "--config", "{}"]
		},
		"CO2 sensor": {
			"command": "node",
			"args": ["...mcp-server-for-sensor-device/index.js"],
			"env": {}
		},
		"PancakeSwap-PoolSpy": {
			"command": "uv",
			"args": ["--directory", "path/to/pancakeswap-poolspy-mcp", "run", "main.py"],
			"env": {
				"THEGRAPH_API_KEY": "your api key from The Graph"
			}
		},
		"@kunihiros/patsnap-mcp": {
			"command": "npx",
			"args": ["@kunihiros/patsnap-mcp"],
			"env": {
				"PATSNAP_CLIENT_ID": "your_patsnap_client_id_here",
				"PATSNAP_CLIENT_SECRET": "your_patsnap_client_secret_here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"mcp-client-configuration": {
			"command": "npx",
			"args": ["-y", "@landicefu/mcp-client-configuration-server"],
			"env": {},
			"disabled": false,
			"alwaysAllow": []
		},
		"webdav": {
			"command": "node",
			"args": ["<path to repository>/dist/index.js"],
			"env": {
				"WEBDAV_ROOT_URL": "<WEBDAV_ROOT_URL>",
				"WEBDAV_ROOT_PATH": "<WEBDAV_ROOT_PATH>",
				"WEBDAV_USERNAME": "<WEBDAV_USERNAME>",
				"WEBDAV_PASSWORD": "<WEBDAV_PASSWORD>",
				"WEBDAV_AUTH_ENABLED": "true|false"
			}
		},
		"mcp-stellar-xdr-json": {
			"command": "npx",
			"args": ["deno", "run", "--allow-read", "https://github.com/leighmcculloch/mcp-stellar-xdr-json/raw/refs/heads/main/mcp-stellar-xdr-json.ts"]
		},
		"lifi": {
			"command": "lifi-mcp",
			"args": ["--keystore", "your-keystore", "--password", "your-password"]
		},
		"gis-mcp": {
			"command": "/path/to/gis-mcp/.venv/bin/python",
			"args": ["-m", "gis_mcp"]
		},
		"farcaster": {
			"command": "node",
			"args": ["/absolute/path/to/farcaster-mcp/build/index.js"]
		},
		"mcp-nvd": {
			"command": "/path/to/uvx",
			"args": ["mcp-nvd"],
			"env": {
				"NVD_API_KEY": "your-api-key"
			}
		},
		"caiyun-weather": {
			"command": "node",
			"args": ["\u5b8c\u6574\u8def\u5f84/caiyun-weather-mcp/dist/index.js"],
			"env": {
				"CAIYUN_API_KEY": "\u60a8\u7684\u5f69\u4e91\u5929\u6c14API\u5bc6\u94a5",
				"AMAP_API_KEY": "\u60a8\u7684\u9ad8\u5fb7\u5730\u56feAPI\u5bc6\u94a5\uff08\u53ef\u9009\uff09"
			},
			"disabled": false,
			"autoApprove": []
		},
		"mysql-navigator": {
			"command": "mcp-db",
			"args": ["--config", "/absolute/path/to/your/.env"]
		},
		"wuying_mcp_server": {
			"url": "https://agentbay.wuying.aliyun.com/sse?APIKEY=YOUR_API_KEY&EXTERNALID=user001"
		},
		"azure-revisor": {
			"url": "http://localhost:3000/sse"
		},
		"zulip": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "ZULIP_EMAIL", "-e", "ZULIP_API_KEY", "-e", "ZULIP_URL", "mcp/zulip"],
			"env": {
				"ZULIP_EMAIL": "your-bot@example.zulipchat.com",
				"ZULIP_API_KEY": "your-bot-api-key",
				"ZULIP_URL": "https://example.zulipchat.com"
			}
		},
		"reviewwebsite": {
			"type": "http",
			"url": "http://localhost:8080/mcp"
		},
		"firecrawl": {
			"command": "mcp-server-firecrawl",
			"env": {
				"FIRECRAWL_API_KEY": "your-api-key"
			}
		},
		"aliyun": {
			"command": "node",
			"args": ["/path/to/aliyun-mcp-server/build/index.js"],
			"env": {
				"ALIYUN_ACCESS_KEY_ID": "your-access-key-id",
				"ALIYUN_ACCESS_KEY_SECRET": "your-access-key-secret",
				"SLS_ENDPOINT": "cn-hangzhou.log.aliyuncs.com"
			},
			"disabled": false,
			"autoApprove": []
		},
		"prompt": {
			"command": "user-prompt-mcp"
		},
		"npm-sentinel-mcp": {
			"command": "npx",
			"args": ["-y", "@nekzus/mcp-server"]
		},
		"npmAnalyzer": {
			"transport": "stdio",
			"command": "npx",
			"args": ["-y", "@nekzus/mcp-server"]
		},
		"pippa-memory": {
			"command": "python",
			"args": ["-m", "mcp_pippa_memory"],
			"env": {
				"OPENAI_API_KEY": "your_openai_api_key_here"
			}
		},
		"version": 1,
		"release-notes": {
			"command": "node",
			"args": ["/path/to/release-notes-server/build/index.js"],
			"env": {
				"GITHUB_TOKEN": "your-github-token"
			}
		},
		"apple-reminders": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-apple-reminders"]
		},
		"mcp-android": {
			"type": "stdio",
			"command": "bash",
			"args": ["-c", "cd /path/to/mcp-adb && source .venv/bin/activate && python -m server"]
		},
		"api-market": {
			"command": "npx",
			"args": ["-y", "@noveum-ai/mcp-server", "--headers", "x-magicapi-key:<your-api-key>"]
		},
		"@novitalabs/novita-mcp-server": {
			"command": "npx",
			"args": ["-y", "@novitalabs/novita-mcp-server"],
			"env": {
				"NOVITA_API_KEY": "your_api_key_here"
			}
		},
		"soccer_server": {
			"command": "/path/to/your/python",
			"args": ["/path/to/soccer_server.py"],
			"env": {
				"RAPID_API_KEY_FOOTBALL": "your_api_key_here"
			}
		},
		"ODBC": {
			"command": "/path/to/.nvm/versions/node/v21.1.0/bin/node",
			"args": ["/path/to/mcp-odbc-server/node_modules/.bin/tsx", "/path/to/mcp-odbc-server/src/main.ts"],
			"env": {
				"ODBCINI": "/Library/ODBC/odbc.ini",
				"NODE_VERSION": "v21.1.0",
				"PATH": "/path/to/.nvm/versions/node/v21.1.0/bin:${PATH}"
			},
			"disabled": false,
			"autoApprove": []
		},
		"aws-ow-s3-mcp": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-aws-ow-s3-mcp"],
			"env": {
				"BUCKET_NAME": "<YOUR_BUCKET_NAME>",
				"REGION": "<AWS_REGION>",
				"AWS_ACCESS_KEY_ID": "<YOUR_ACCESS_KEY>",
				"AWS_SECRET_ACCESS_KEY": "<YOUR_SECRET_KEY>"
			}
		},
		"mcp-server": {
			"command": "npx",
			"args": ["-y", "@oraichain/mcp-server@0.0.21"],
			"env": {
				"RPC_URL": "https://rpc.orai.io"
			}
		},
		"osv-mcp": {
			"command": "uv",
			"args": ["--directory", "path-to/OSV-MCP", "run", "osv-server"],
			"env": {}
		},
		"newsnow": {
			"command": "npx",
			"args": ["-y", "newsnow-mcp-server"],
			"env": {
				"BASE_URL": "https://newsnow.busiyi.world"
			}
		},
		"allabolag": {
			"command": "node",
			"args": ["/Users/alvinjohansson/code/personal/allabolag-mcp/dist/index.js"]
		},
		"project-hub": {
			"command": "node",
			"args": ["path/to/project-hub-mcp-server/dist/index.js"],
			"env": {
				"NODE_ENV": "development",
				"DEFAULT_PRIVATE": "true",
				"DEFAULT_OWNER": "your-github-username",
				"GITHUB_TOKEN": "your-github-token",
				"GIT_PATH": "C:\\Program Files\\Git\\bin\\git.exe"
			},
			"alwaysAllow": ["list_projects", "find_project", "get_pending_changes", "get_local_commit_history", "list_local_branches"]
		},
		"pi-api": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "API_URL=http://localhost:8224/pi/api/v2", "-e", "PI_API_KEY=XXXXXXXX", "mingzilla/pi-api-mcp-server"],
			"disabled": false,
			"autoApprove": ["keep-session-alive", "check-connection", "authenticate", "list-categories", "get-category", "list-charts", "get-chart", "export-chart", "get-filterable-attributes", "export-chart"]
		},
		"fireflies": {
			"command": "npx",
			"args": ["-y", "@props-labs/mcp/fireflies"],
			"env": {
				"FIREFLIES_API_KEY": "<YOUR_API_KEY>"
			}
		},
		"GemForge": {
			"command": "node",
			"args": ["./dist/index.js"],
			"env": {
				"GEMINI_API_KEY": "your_api_key_here"
			}
		},
		"mcp-git-repo-browser": {
			"command": "node",
			"args": ["/path/to/mcp-git-repo-browser/src/index.js"]
		},
		"arkham": {
			"command": "ssh",
			"args": ["user@your-host", "cd /path/to/crypto_mcp && /path/to/uv run arkham_server.py"]
		},
		"coingecko": {
			"command": "ssh",
			"args": ["user@your-host", "cd /path/to/crypto_mcp && /path/to/uv run cg_server.py"]
		},
		"defillama": {
			"command": "ssh",
			"args": ["user@your-host", "cd /path/to/crypto_mcp && /path/to/uv run defillama_server.py"]
		},
		"codex": {
			"command": "ssh",
			"args": ["user@your-host", "cd /path/to/crypto_mcp && /path/to/uv run codex_server.py"]
		},
		"elfa": {
			"command": "ssh",
			"args": ["user@your-host", "cd /path/to/crypto_mcp && /path/to/uv run elfa_server.py"]
		},
		"svm-mcp": {
			"command": "bun",
			"args": ["/path/to/svm-mcp/build/index.js"]
		},
		"couchdb-mcp-server": {
			"command": "/path/to/couchdb-mcp-server/build/index.js",
			"env": {
				"COUCHDB_URL": "http://username:password@localhost:5984"
			}
		},
		"phrases": {
			"command": "node",
			"args": ["/RUTA_ABSOLUTA_A/phrases/build/index.js"]
		},
		"rss3": {
			"command": "npx",
			"args": ["mcp-server-rss3"]
		},
		"medadapt": {
			"command": "/path/to/python",
			"args": ["/path/to/medadapt-content-server/content_server.py"],
			"env": {
				"DB_PATH": "/path/to/medadapt-content-server/medadapt_content.db"
			}
		},
		"wireshark": {
			"command": "python",
			"args": ["/path/to/wireshark-mcp/mcp_server.py", "--stdio"]
		},
		"tesla-mcp-server": {
			"command": "/absolute/path/to/tesla-mcp/run-mcp.js"
		},
		"aer-mcp": {
			"command": "uv",
			"args": ["--directory", "/path/to/the/repo/", "run", "aer_mcp.py"]
		},
		"mcp2tcp": {
			"command": "uvx",
			"args": ["mcp2tcp"]
		},
		"social-media-mcp": {
			"command": "node",
			"args": ["path/to/social-media-mcp/build/index.js"],
			"env": {
				"TWITTER_API_KEY": "your_api_key",
				"TWITTER_API_SECRET": "your_api_secret",
				"TWITTER_BEARER_TOKEN": "your_bearer_token",
				"TWITTER_ACCESS_TOKEN": "your_access_token",
				"TWITTER_ACCESS_SECRET": "your_access_secret",
				"TWITTER_OAUTH_CLIENT": "your_oauth_client",
				"TWITTER_CLIENT_SECRET": "your_client_secret",
				"MASTODON_CLIENT_SECRET": "your_client_secret",
				"MASTODON_CLIENT_KEY": "your_client_key",
				"MASTODON_ACCESS_TOKEN": "your_access_token",
				"LINKEDIN_CLIENT_ID": "your_client_id",
				"LINKEDIN_CLIENT_SECRET": "your_client_secret",
				"LINKEDIN_ACCESS_TOKEN": "your_access_token",
				"ANTHROPIC_API_KEY": "your_anthropic_key",
				"OPENAI_API_KEY": "your_openai_key",
				"BRAVE_API_KEY": "your_brave_key"
			},
			"disabled": false,
			"autoApprove": []
		},
		"mcp-duckduckgo-search": {
			"command": "wsl.exe",
			"args": ["bash", "-c", "source ~/.nvm/nvm.sh && SERPAPI_KEY=your-serpapi-api-key /home/username/.nvm/versions/node/v20.12.1/bin/npx mcp-duckduckgo-search"]
		},
		"jinaai-grounding": {
			"command": "wsl.exe",
			"args": ["bash", "-c", "JINAAI_API_KEY=your-jinaai-api-key npx mcp-jinaai-grounding"]
		},
		"DraCor API v1": {
			"command": "uv",
			"args": ["run", "--with", "mcp[cli]", "--with", "requests", "--with", "pydantic", "--with", "python-multipart", "mcp", "run", "/path/to/dracor-mcp/dracor_mcp_fastmcp.py"],
			"env": {
				"DRACOR_API_BASE_URL": "https://dracor.org/api/v1"
			}
		},
		"go-debugger": {
			"command": "mcp-go-debugger",
			"args": []
		},
		"source-sage": {
			"command": "node",
			"args": ["C:/path/to/source-sage/build/index.js"]
		},
		"brave-deep-research": {
			"command": "npx",
			"args": ["@suthio/brave-deep-research-mcp"],
			"env": {
				"BRAVE_API_KEY": "your_brave_api_key_here",
				"PUPPETEER_HEADLESS": "true"
			}
		},
		"uniprot": {
			"command": "uv",
			"args": ["--directory", "path/to/uniprot-mcp-server", "run", "uniprot-mcp-server"]
		},
		"sysoperator": {
			"command": "node",
			"args": ["/absolute/path/to/mcp-sysoperator/build/index.js"],
			"env": {}
		},
		"project": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "mcp/project"]
		},
		"qualitativeresearch": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "mcp/qualitativeresearch"]
		},
		"MCP-Toolhouse": {
			"command": "uv",
			"args": ["run", "mcp-toolhouse"],
			"env": {
				"TOOLHOUSE_API_KEY": "th-******************_*****_******************",
				"TOOLHOUSE_BUNDLE": "toolhouse-bundle-name",
				"PYTHONUTF8": "1"
			}
		},
		"TVRecommender": {
			"command": "env",
			"args": ["TMDB_API_KEY=your_api_key_here", "npx", "tv-recommender-mcp-server"]
		},
		"azure-resource": {
			"command": "uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/PARENT/FOLDER", "run", "-m", "azure_resource_mcp_server"],
			"env": {
				"AZURE_TENANT_ID": "your-tenant-id",
				"AZURE_CLIENT_ID": "your-client-id",
				"AZURE_CLIENT_SECRET": "your-client-secret",
				"AZURE_SUBSCRIPTION_ID": "your-subscription-id"
			}
		},
		"kibana-mcp-server": {
			"command": "node",
			"args": ["/path/to/mcp-server-kibana/dist/index.js"],
			"env": {
				"KIBANA_URL": "http://your-kibana-server:5601",
				"KIBANA_USERNAME": "your-username",
				"KIBANA_PASSWORD": "your-password",
				"NODE_TLS_REJECT_UNAUTHORIZED": "0"
			}
		},
		"open-deep-research": {
			"command": "npx",
			"args": ["-y", "open-deep-research"],
			"env": {
				"BRAVE_API_KEY": "your_api_key_here"
			}
		},
		"youtube-summarizer": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "youtube-summarizer-mcp"]
		},
		"mcp-rand": {
			"command": "node",
			"args": ["path/to/mcp-rand/build/index.js"],
			"disabled": false,
			"alwaysAllow": []
		},
		"github.com/kuvanov-2/mcp-server-jira": {
			"command": "/path/to/mcp-server-jira/start-server.sh",
			"env": {
				"JIRA_HOST": "https://your-domain.atlassian.net",
				"JIRA_EMAIL": "your-email@example.com",
				"JIRA_API_TOKEN": "op://YOUR_VAULT_NAME/YOUR_ITEM_NAME/info/access token"
			},
			"disabled": false,
			"autoApprove": []
		},
		"uuid": {
			"command": "mcp-uuid"
		},
		"imdb_server": {
			"command": "/path/to/your/python",
			"args": ["/path/to/imdb_server.py"],
			"env": {
				"RAPID_API_KEY_IMDB": "your_api_key_here"
			}
		},
		"cs2server": {
			"url": "http://localhost:8080/cs2server/sse"
		},
		"pluggedin": {
			"command": "npx",
			"args": ["-y", "@pluggedin/mcp-proxy@latest"],
			"env": {
				"PLUGGEDIN_API_KEY": "YOUR_API_KEY"
			}
		},
		"scrape-service": {
			"command": "/absolute/path/to/claude-scraper-mcp/.venv/bin/python",
			"args": ["/absolute/path/to/claude-scraper-mcp/scrape_mcp_server.py"]
		},
		"dotnet-types-explorer": {
			"command": "/path/to/DotNetMetadataMcpServer",
			"args": ["--homeEnvVariable", "/home/user"],
			"disabled": false,
			"alwaysAllow": [],
			"timeout": 300
		},
		"github_mcp": {
			"command": "/opt/miniconda3/bin/python",
			"args": ["--directory", "/Users/username/github/github_graphql_api_mcp/", "run", "github_graphql_api_mcp_server.py"]
		},
		"weatherxm-pro": {
			"command": "npx",
			"args": ["-y", "path to mcp"],
			"env": {
				"WEATHERXMPRO_API_KEY": "your-api-key"
			}
		},
		"runway-luma-server": {
			"command": "node",
			"args": ["/full/path/to/runwayml-mcp-server/build/server-index.js"],
			"env": {
				"RUNWAYML_API_SECRET": "your_runwayml_api_secret_here",
				"LUMAAI_API_KEY": "your_luma_api_key_here",
				"OPENROUTER_API_KEY": "your_openrouter_api_key_here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"neodb": {
			"command": "uv",
			"args": ["--directory", "<PATH_TO_PROJECT_DIR>", "run", "<PATH_TO_SCRIPT>", "<API_BASE> e.g. https://neodb.social", "<ACCESS_TOKEN>"]
		},
		"scrapbox-mcp": {
			"command": "/path/to/scrapbox-mcp/build/index.js"
		},
		"warpcast": {
			"command": "node",
			"args": ["/absolute/path/to/mcp-warpcast-server/build/index.js"],
			"env": {
				"WARPCAST_FID": "your_fid_here",
				"WARPCAST_PRIVATE_KEY": "your_private_key_here",
				"WARPCAST_PUBLIC_KEY": "your_public_key_here"
			}
		},
		"pixabay-mcp": {
			"command": "/path/to/pixabay-mcp/build/index.js",
			"env": {
				"PIXABAY_API_KEY": "your_api_key_here"
			}
		},
		"sui-tools": {
			"command": "node",
			"args": ["<absolute-path-to-your-project>/build/index.js"]
		},
		"x-tools": {
			"command": "node",
			"args": ["YOUR_ABSOLUTE_PATH_TO/main.js"],
			"env": {
				"RAPIDAPI_KEY": "your_rapidapi_key"
			}
		},
		"oss-mcp": {
			"command": "npx",
			"args": ["oss-mcp", "--oss-config='{\"default\":{\"region\":\"oss-cn-shenzhen\",\"accessKeyId\":\"YOUR_KEY\",\"accessKeySecret\":\"YOUR_SECRET\",\"bucket\":\"YOUR_BUCKET\",\"endpoint\":\"oss-cn-shenzhen.aliyuncs.com\"}, \"test\":{\"region\":\"oss-cn-shenzhen\",\"accessKeyId\":\"YOUR_KEY\",\"accessKeySecret\":\"YOUR_SECRET\",\"bucket\":\"YOUR_BUCKET\",\"endpoint\":\"oss-cn-shenzhen.aliyuncs.com\"}}'", "--stdio"]
		},
		"ClamAV Server": {
			"url": "http://[SERVER_IP]:8000/sse"
		},
		"tagesschau": {
			"command": "/path/to/tagesschau",
			"args": [],
			"env": {}
		},
		"ankr-mcp": {
			"command": "npx",
			"args": ["@akki91/ankr-mcp"],
			"env": {
				"ANKR_API_TOKEN": "your_api_token_here"
			}
		},
		"lightning-tools": {
			"command": "npx",
			"args": ["-y", "@getalby/lightning-tools-mcp-server"],
			"env": {}
		},
		"illumio-mcp-docker": {
			"command": "docker",
			"args": ["run", "-i", "--init", "--rm", "-v", "/Users/YOUR_USERNAME/tmp:/var/log/illumio-mcp", "-e", "DOCKER_CONTAINER=true", "-e", "PYTHONWARNINGS=ignore", "--env-file", "/Users/YOUR_USERNAME/.illumio-mcp.env", "illumio-mcp:latest"]
		},
		"gnews_search": {
			"command": "uv",
			"args": ["--directory", "%USERPROFILE%/Documents/GitHub/mcp-gnews", "run", "python", "main.py"]
		},
		"nodemcu": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/YOUR/PROJECT/mcp_server_sdk.js"]
		},
		"tavily-search": {
			"command": "uv",
			"args": ["--directory", "/path/to/mcp-tavily-search/mcp_tavily_search", "run", "server.py"],
			"env": {
				"TAVILY_API_KEY": "YOUR-API-KEY"
			}
		},
		"mcp-arcknowledge": {
			"command": "cmd /c uv",
			"args": ["--directory", "C:/Users/Acer/OneDrive/GitHub/YourDrive", "run", "main.py"],
			"env": {
				"DOCUMENT_SOURCES_PATH": "C:/Users/Acer/OneDrive/GitHub/YourDrive/testcustomother.json"
			}
		},
		"instantly": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-instantly"],
			"env": {
				"INSTANTLY_API_KEY": "<YOUR_API_KEY>"
			}
		},
		"clj-kondo": {
			"command": "node",
			"args": ["build/index.js"],
			"disabled": false,
			"autoApprove": []
		},
		"usgs-quakes": {
			"command": "node",
			"args": ["/Full/Route/to/Folder/usgs-quakes/build/index.js"]
		},
		"youtube-translate": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "YOUTUBE_TRANSLATE_API_KEY", "youtube-translate-mcp"],
			"env": {
				"YOUTUBE_TRANSLATE_API_KEY": "YOUR_API_KEY"
			}
		},
		"browsercat": {
			"command": "npx",
			"args": ["-y", "@browsercatco/mcp-server"],
			"env": {
				"BROWSERCAT_API_KEY": "your-api-key-here"
			}
		},
		"mlflow": {
			"command": "node",
			"args": ["<absolute-path-to-this-repository>/dist/index.js"],
			"env": {
				"MLFLOW_TRACKING_URI": "http://localhost:5000"
			}
		},
		"calcom-calendar": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-calcom-calendar"],
			"env": {
				"CALCOM_API_KEY": "YOUR_API_KEY_HERE"
			}
		},
		"ynab-mcp-server": {
			"command": "npx",
			"args": ["ynab-mcp-server"]
		},
		"tku-mcp": {
			"command": "uv",
			"args": ["--directory", "ABSOLUTE PATH TO FOLDER", "run", "server.py"]
		},
		"search_intent": {
			"command": "npx",
			"args": ["-y", "@search-intent/mcp"],
			"env": {
				"SEARCH_INTENT_API_KEY": "xxx"
			}
		},
		"pentest-tools": {
			"command": "cmd",
			"args": ["/c", "cd /d \\path\\to\\pentest-tools && docker-compose run --rm pentest-tools python3 pentest-tools-mcp-server.py"]
		},
		"cheerlights": {
			"command": "python",
			"args": ["path/to/server.py"]
		},
		"os-ngd-api": {
			"command": "/Users/username/.local/bin/uv",
			"args": ["--directory", "src/", "run", "server.py"],
			"env": {
				"OS_API_KEY": "your_api_key_here"
			}
		},
		"@greyhack-mcp-server": {
			"command": "npx",
			"args": ["-y", "@smithery/cli@latest", "run", "@chromewillow/greyhack-mcp-server", "--config", "{\"GITHUB_TOKEN\":\"your-github-token-here\"}"]
		},
		"chromia-mcp": {
			"command": "node",
			"args": ["/PATH_TO_FOLDER/chromia-mcp/build/index.js"]
		},
		"flux-img": {
			"command": "node",
			"args": ["/path/to/flux-img-mcp/build/index.js"],
			"env": {
				"REPLICATE_API_TOKEN": "your-replicate-api-token"
			},
			"disabled": false,
			"alwaysAllow": []
		},
		"climate-triage": {
			"command": "npx",
			"args": ["-y", "git+https://github.com/Codeshark-NET/climate-triage-mcp.git"]
		},
		"cortellis": {
			"command": "npx",
			"args": ["-y", "@uh-joan/cortellis-mcp-server"],
			"env": {
				"CORTELLIS_USERNAME": "your_username",
				"CORTELLIS_PASSWORD": "your_password"
			}
		},
		"cosmwasm-mcp": {
			"command": "PATH-TO/rust-sdk/target/release/examples/cw-orch-mcp",
			"args": [],
			"env": {
				"TEST_MNEMONIC": "<24 word mnemonic>",
				"RUST_LOG": "info"
			}
		},
		"teamtailor": {
			"command": "npx",
			"args": ["-y", "@crunchloop/mcp-teamtailor"],
			"env": {
				"TEAMTAILOR_URL": "https://api.teamtailor.com/v1",
				"TEAMTAILOR_API_KEY": "XXXX"
			}
		},
		"stock-market": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-stock-market/build/index.js"]
		},
		"decent-sampler-drums": {
			"command": "npx",
			"args": ["-y", "@dandeliongold/mcp-decent-sampler-drums"],
			"env": {}
		},
		"cw-graph": {
			"command": "node",
			"args": ["PATH_TO_YOUR_PROJECT/dist/index.js"],
			"env": {
				"NODE_URL": "http://localhost:26657",
				"WALLET_MNEMONIC": "your wallet mnemonic phrase",
				"CONTRACT_ADDRESS": "your contract address",
				"DENOM": "stake",
				"BENCH32_PREFIX": "cyber"
			}
		},
		"myDatabuttonApp": {
			"command": "uvx",
			"args": ["databutton-app-mcp@latest"],
			"env": {
				"DATABUTTON_API_KEY": "YOUR-DATABUTTON-APP-KEY"
			}
		},
		"pox": {
			"command": "uv",
			"args": ["--directory", "parent_of_servers_repo/servers/src/mcp_server_pox", "run", "server.py"],
			"env": {
				"POX_SERVER_URL": "http://localhost:8000"
			}
		},
		"amplify-data-api": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/aws-amplify-data-mcp/build/index.js", "--amplify-outputs", "/ABSOLUTE/PATH/TO/YOUR/amplify_outputs.json"],
			"env": {
				"AMPLIFY_USERNAME": "your-admin-username",
				"AMPLIFY_PASSWORD": "your-admin-password"
			}
		},
		"claudeus-plane-mcp": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "--network=host", "--mount", "type=bind,src=/absolute/path/to/your/plane-instances.json,dst=/app/plane-instances.json", "--mount", "type=bind,src=/absolute/path/to/your/.env,dst=/app/.env", "mcp/plane", "--config", "/app/plane-instances.json"]
		},
		"dev": {
			"command": "mcp-dev-server",
			"args": []
		},
		"ide": {
			"command": "npx",
			"args": ["-y", "mcp-proxy-sidecar"],
			"env": {
				"WS_PORT": "27042",
				"IDE_PORT": "63342",
				"HOST": "127.0.0.1",
				"LOG_ENABLED": "true"
			}
		},
		"add": {
			"command": "node",
			"args": ["/Users/dreamfactory/Documents/df-mcp/build/index.js"],
			"env": {
				"DREAMFACTORY_URL": "https://example.dreamfactory.com/api/v2/<service-name>",
				"DREAMFACTORY_API_KEY": ""
			}
		},
		"eol": {
			"command": "npx",
			"args": ["/path/to/eol-mcp-server/build/index.js"]
		},
		"huntress": {
			"command": "node",
			"args": ["path/to/huntress-server/build/index.js"],
			"env": {
				"HUNTRESS_API_KEY": "your_api_key_here",
				"HUNTRESS_API_SECRET": "your_api_secret_here"
			}
		},
		"up-mcp": {
			"command": "/ABSOLUTE/PATH/TO/uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/up-mcp", "run", "up_mcp.py"],
			"env": {
				"UP_TOKEN": "up:yeah:your-token-here"
			}
		},
		"arc": {
			"command": "python",
			"args": ["-m", "arc", "--debug"]
		},
		"discord-relay": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/MCP Relay/build/index.js"],
			"env": {
				"DISCORD_TOKEN": "your_bot_token_here",
				"DISCORD_CHANNEL_ID": "your_channel_id_here"
			}
		},
		"EnkryptAI-MCP": {
			"command": "uv",
			"args": ["--directory", "PATH/TO/enkryptai-mcp-server", "run", "src/mcp_server.py"],
			"env": {
				"ENKRYPTAI_API_KEY": "YOUR ENKRYPTAI API KEY"
			}
		},
		"connectwise": {
			"command": "npx",
			"args": ["-y", "connectwise-mcp-server"],
			"env": {
				"CW_COMPANY_ID": "your_company_id",
				"CW_PUBLIC_KEY": "your_public_key",
				"CW_PRIVATE_KEY": "your_private_key",
				"CW_URL": "api-na.myconnectwise.net"
			},
			"options": {
				"autoStart": true,
				"logLevel": "info"
			}
		},
		"spring-ai": {
			"command": "java",
			"args": ["-Dspring.ai.mcp.server.transport=STDIO", "-Dspring.ai.mcp.server.stdio=true", "-Dspring.main.bannerMode=off", "-Dlogging.pattern.console=", "-jar", "PATH_TO_PROJECT\\build\\libs\\exi-mcp-1.0-SNAPSHOT.jar", "--my_steam_id=YOUR_STEAM_ID", "--my_steam_key=YOUR_STEAM_API_KEY"]
		},
		"class": {
			"command": "node",
			"args": ["PATH_TO_YOUR_DIRECTORY\\index.js"]
		},
		"Gemini Data Analysis": {
			"command": "node",
			"args": ["path/to/gemini-data-analysis-email-generator/dist/index.js"],
			"cwd": "path/to/gemini-data-analysis-email-generator",
			"env": {
				"GEMINI_API_KEY": "your_api_key_here",
				"NODEMAILER_EMAIL": "your.email@gmail.com",
				"NODEMAILER_PASSWORD": "your_app_password_here"
			}
		},
		"steam-review-mcp": {
			"command": "npx",
			"args": ["steam-review-mcp"]
		},
		"folderr": {
			"command": "node",
			"args": ["/path/to/folderr-server/build/index.js"]
		},
		"food-data-central": {
			"command": "npx",
			"args": ["tsx", "/path/to/food-data-central-mcp-server/src/index.ts"],
			"env": {
				"PATH": "/opt/homebrew/bin",
				"USDA_API_KEY": "<INSERT KEY HERE>"
			}
		},
		"horoscope": {
			"command": "node",
			"args": ["/path/to/horoscope-serve/build/index.js"]
		},
		"switchbot": {
			"command": "node",
			"args": ["path/to/switchbot-mcp/build/index.js"],
			"env": {
				"SWITCHBOT_TOKEN": "your_token",
				"SWITCHBOT_SECRET": "your_secret"
			}
		},
		"bigquery-analysis-server": {
			"command": "/path/to/bigquery-analysis-server/build/index.js"
		},
		"substack": {
			"command": "uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/substack-mcp", "run", "substack_mcp.py"]
		},
		"transistor": {
			"command": "node",
			"args": ["path/to/Transistor-MCP/build/index.js"],
			"env": {
				"TRANSISTOR_API_KEY": "your-api-key-here"
			}
		},
		"sqlexpress": {
			"command": "uv",
			"args": ["--directory", "PATH\\TO\\PROJECT\\mcp-sqlexpress", "run", "mcp-server-sqlexpress", "--server", "server\\instance", "--auth", "windows", "--trusted-connection", "yes", "--trust-server-certificate", "yes", "--allowed-databases", "database1,database2"]
		},
		"audio-player": {
			"command": "/path/to/your/venv/bin/python",
			"args": ["/path/to/your/audio-player-mcp/src/audio_player_mcp/player.py"],
			"env": {
				"AUDIO_PLAYER_DIR": "/path/to/your/audio/files"
			}
		},
		"security_check_program": {
			"command": "security_check_program",
			"args": ["--mcp"]
		},
		"security_check_file": {
			"command": "security_check_file",
			"args": ["--mcp"]
		},
		"spreadsheet": {
			"command": "node",
			"args": ["<absolute-path-to-project>/build/index.js"],
			"env": {
				"GAS_WEB_APP_URL": "https://script.google.com/macros/s/your-deployment-id/exec",
				"GAS_API_KEY": "your-api-key"
			}
		},
		"google_search": {
			"command": "node",
			"args": ["C:\\absolute\\path\\to\\google-search-mcp\\dist\\index.js"],
			"env": {
				"GOOGLE_API_KEY": "your_api_key_here",
				"GOOGLE_CSE_ID": "your_search_engine_id_here"
			}
		},
		"mathcad": {
			"command": "python",
			"args": ["path/to/mathcad-mcp/standalone.py"],
			"env": {
				"MATHCAD_VISIBLE": "true"
			}
		},
		"clover": {
			"command": "npx",
			"args": ["-y", "@ibraheem4/clover-mcp"],
			"env": {
				"CLOVER_CLIENT_ID": "your-clover-client-id",
				"CLOVER_CLIENT_SECRET": "your-clover-client-secret",
				"CLOVER_BASE_URL": "https://apisandbox.dev.clover.com"
			},
			"disabled": false,
			"autoApprove": ["initiate_oauth_flow", "get_merchant_info", "list_inventory", "list_orders"]
		},
		"redmine-server": {
			"command": "node",
			"args": ["C:\\Users\\yourusername\\path\\to\\Redmine-MCP\\server.js"],
			"disabled": false,
			"autoApprove": []
		},
		"mcp-kakao": {
			"command": "uv",
			"args": ["--directory", "your-project-path/kakao-bot-mcp-server", "run", "mcp-kakao"]
		},
		"mcp-internet-speed-test": {
			"command": "uv",
			"args": ["--directory", "/ABSOLUTE/PATH/TO/mcp-internet-speed-test", "run", "main.py"]
		},
		"eval": {
			"command": "/path/to/mcp-expr-lang/bin/server"
		},
		"JapaneseTextAnalyzer": {
			"command": "cmd",
			"args": ["/c", "npx", "-y", "github:Mistizz/mcp-JapaneseTextAnalyzer"]
		},
		"tidymodels": {
			"command": "node",
			"args": ["/path/to/tidymodels-mcp/js/index.js"],
			"env": {
				"GITHUB_TOKEN": "your-github-token"
			},
			"disabled": false,
			"autoApprove": []
		},
		"clicksend": {
			"command": "node",
			"args": ["/directory/to/build/folder/clicksend-mcp/build/index.js"],
			"env": {
				"CLICKSEND_USERNAME": "example@droove.net",
				"CLICKSEND_API_KEY": "ZZZZZZZZ-YYYY-YYYY-YYYY-XXXXXXXXXXXX"
			}
		},
		"web-crawler": {
			"command": "node",
			"args": ["/path/to/web-crawler/build/index.js"],
			"env": {
				"CRAWL_LINKS": "false",
				"MAX_DEPTH": "3",
				"REQUEST_DELAY": "1000",
				"TIMEOUT": "5000",
				"MAX_CONCURRENT": "5"
			}
		},
		"florence-2": {
			"command": "uvx",
			"args": ["--from", "git+https://github.com/jkawamoto/mcp-florence2", "mcp-florence2"]
		},
		"yarr": {
			"command": "C:\\Program Files\\nodejs\\node.exe",
			"args": ["C:\\path\\to\\yarr\\packages\\server\\dist\\index.js"],
			"cwd": "C:\\path\\to\\yarr",
			"transport": {
				"type": "stdio"
			},
			"env": {
				"NODE_ENV": "production",
				"PROWLARR_URL": "http://localhost:9696",
				"PROWLARR_API_KEY": "your_prowlarr_api_key",
				"SONARR_URL": "http://localhost:8989",
				"SONARR_API_KEY": "your_sonarr_api_key",
				"OVERSEERR_URL": "http://localhost:5055",
				"OVERSEERR_API_KEY": "your_overseerr_api_key",
				"GOTIFY_URL": "http://localhost:8080",
				"GOTIFY_APP_TOKEN": "your_gotify_app_token",
				"GOTIFY_CLIENT_TOKEN": "your_gotify_client_token"
			}
		},
		"kaiafun": {
			"command": "node",
			"args": ["/path/to/dist/kaiafun-mcp-server.js"],
			"env": {
				"PRIVATE_KEY": "0x"
			}
		},
		"mcp-backlog-server": {
			"command": "/path/to/mcp-backlog-server/build/index.js",
			"env": {
				"BACKLOG_API_KEY": "your-api-key",
				"BACKLOG_SPACE_URL": "https://your-space.backlog.com"
			}
		},
		"linear-issues": {
			"command": "npx",
			"args": ["-y", "@keegancsmith/linear-issues-mcp-server"],
			"env": {
				"LINEAR_API_TOKEN": "your_linear_api_token_here"
			}
		},
		"fugle-mcp-server": {
			"command": "npx",
			"args": ["-y", "fugle-mcp-server"],
			"env": {
				"SDK_TYPE": "masterlink|fubon",
				"NATIONAL_ID": "\u60a8\u7684\u8eab\u5206\u8b49\u5b57\u865f",
				"ACCOUNT_PASS": "\u60a8\u7684\u5e33\u6236\u5bc6\u78bc",
				"CERT_PASS": "\u60a8\u7684\u6191\u8b49\u5bc6\u78bc",
				"CERT_PATH": "/path/to/your/cert.p12",
				"ENABLE_ORDER": "false",
				"ACCOUNT": "\u6307\u5b9a\u4f7f\u7528\u5e33\u6236\u865f\u78bc"
			}
		},
		"web_content_search": {
			"command": "npx",
			"args": ["-y", "mcp-web-content-pick"]
		},
		"linode": {
			"command": "linode-mcp",
			"args": ["--api-key", "your_api_key_here"]
		},
		"web-search-duckduckgo": {
			"command": "uv",
			"args": ["--directory", "/path/to/web-search-duckduckgo", "run", "main.py"]
		},
		"azuredevops-bridge": {
			"command": "/full/path/to/mcp-azuredevops-bridge/mcp-azuredevops-bridge",
			"args": [],
			"env": {
				"AZURE_DEVOPS_ORG": "organization",
				"AZDO_PAT": "personal_access_token",
				"AZURE_DEVOPS_PROJECT": "project"
			}
		},
		"token-revoke-mcp": {
			"command": "node",
			"args": ["path/to/token-revoke-mcp/index.js"],
			"env": {
				"MORALIS_API_KEY": "your moralis api key",
				"PRIVATE_KEY": "your wallet private key"
			}
		},
		"Uniswap-PoolSpy": {
			"command": "uv",
			"args": ["--directory", "path/to/uniswap-poolspy-mcp", "run", "main.py"],
			"env": {
				"THEGRAPH_API_KEY": "your api key from The Graph"
			}
		},
		"letzai": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/PARENT/FOLDER/letzai-mcp/build/index.js"],
			"env": {
				"LETZAI_API_KEY": "<Your LetzAI API Key>"
			}
		},
		"lumbretravel-mcp": {
			"command": "node",
			"args": ["/path/to/lumbretravel-mcp/dist/index.js"],
			"env": {
				"CLIENT_ID": "<YOUR_CLIENT_ID>",
				"CLIENT_SECRET": "<YOUR_CLIENT_SECRET>",
				"EMAIL": "<YOUR_EMAIL>",
				"PASSWORD": "<YOUR_PASSWORD>"
			}
		},
		"fathom-analytics": {
			"command": "npx",
			"args": ["-y", "mcp-fathom-analytics"],
			"env": {
				"FATHOM_API_KEY": "your_api_key_here"
			}
		},
		"MalloryAI": {
			"command": "/path/to/uv",
			"args": ["run", "--python", "/path/to/mcp-server/.venv/bin/python", "/path/to/mcp-server/malloryai/mcp/app.py"],
			"env": {
				"MALLORY_API_KEY": "your_api_key_here"
			}
		},
		"verge-news": {
			"command": "node",
			"args": ["/absolute/path/to/verge-news-mcp/build/index.js"]
		},
		"freeagent": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "FREEAGENT_CLIENT_ID", "-e", "FREEAGENT_CLIENT_SECRET", "-e", "FREEAGENT_ACCESS_TOKEN", "-e", "FREEAGENT_REFRESH_TOKEN", "freeagent-mcp"],
			"env": {
				"FREEAGENT_CLIENT_ID": "your_client_id",
				"FREEAGENT_CLIENT_SECRET": "your_client_secret",
				"FREEAGENT_ACCESS_TOKEN": "your_access_token",
				"FREEAGENT_REFRESH_TOKEN": "your_refresh_token"
			},
			"disabled": false,
			"autoApprove": []
		},
		"pbs-api": {
			"command": "node",
			"args": ["path/to/pbs-mcp-standalone/build/index.js"],
			"env": {
				"PBS_API_SUBSCRIPTION_KEY": "your-subscription-key-here"
			}
		},
		"freepik": {
			"command": "node",
			"args": ["path/to/freepik-mcp/build/index.js"],
			"env": {
				"FREEPIK_API_KEY": "your-api-key-here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"permshell": {
			"command": "node",
			"args": ["/path/to/perm-shell-mcp/dist/index.js"]
		},
		"memory_recall": {
			"command": "/path/to/python3",
			"args": ["/path/2/your/cloned/repository/memory_plugin.py"]
		},
		"clickup": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "CLICKUP_API_TOKEN", "-e", "CLICKUP_WORKSPACE_ID", "mcp/clickup"],
			"env": {
				"CLICKUP_API_TOKEN": "your-api-token",
				"CLICKUP_WORKSPACE_ID": "your-workspace-id"
			}
		},
		"Asset Price MCP": {
			"command": "cmd",
			"args": ["/c", "npx", "-y", "asset-price-mcp"]
		},
		"azure-devops": {
			"command": "node",
			"args": ["C:/path/to/azure-devops-mcp/build/index.js"],
			"env": {
				"AZURE_DEVOPS_ORG_URL": "your-org-url",
				"AZURE_DEVOPS_PAT": "your-pat",
				"AZURE_DEVOPS_PROJECT": "your-project",
				"AZURE_DEVOPS_REPOSITORY": "your-repo"
			},
			"disabled": false,
			"autoApprove": []
		},
		"screenshotone": {
			"type": "http",
			"url": "http://localhost:8080/mcp"
		},
		"url-converter": {
			"command": "node",
			"args": ["/absolute/path/to/mcp-url-converter/build/index.js"]
		},
		"typecast-api-mcp-server": {
			"command": "uv",
			"args": ["--directory", "/PATH/TO/YOUR/PROJECT", "run", "typecast-api-mcp-server"],
			"env": {
				"TYPECAST_API_HOST": "https://api.typecast.ai",
				"TYPECAST_API_KEY": "YOUR_API_KEY",
				"TYPECAST_OUTPUT_DIR": "PATH/TO/YOUR/OUTPUT/DIR"
			}
		},
		"github-action-trigger-mcp": {
			"command": "@nextdrive/github-action-trigger-mcp",
			"env": {
				"GITHUB_PERSONAL_ACCESS_TOKEN": "your_github_token_here"
			}
		},
		"code-summarizer": {
			"transport": "sse",
			"url": "http://localhost:24312/sse",
			"headers": {
				"x-api-key": "your_api_key_here"
			}
		},
		"blogger": {
			"command": "npx",
			"args": ["-y", "@mcproadev/blogger-mcp-server"],
			"env": {
				"BLOGGER_API_KEY": "VOTRE_CLE_API_ICI"
			}
		},
		"CVP MCP Server": {
			"command": "uv",
			"args": ["run", "--with", "fastmcp", "fastmcp", "run", "/home/ansible/mcp-cvp-fun/mcp_server_rest.py"]
		},
		"aws-ses-mcp": {
			"command": "node",
			"args": ["ABSOLUTE_PATH_TO_MCP_SERVER/build/index.js"],
			"env": {
				"AWS_ACCESS_KEY_ID": "YOUR_AWS_ACCESS_KEY_ID",
				"AWS_SECRET_ACCESS_KEY": "YOUR_AWS_SECRET_ACCESS_KEY",
				"AWS_REGION": "YOUR_AWS_REGION",
				"SENDER_EMAIL_ADDRESS": "YOUR_SENDER_EMAIL",
				"REPLY_TO_EMAIL_ADDRESSES": "REPLY_TO_EMAILS_COMMA_SEPARATED"
			}
		},
		"opslevel": {
			"command": "opslevel-mcp",
			"env": {
				"OPSLEVEL_API_TOKEN": "XXXXXX"
			}
		},
		"sourcesyncai-mcp": {
			"command": "npx",
			"args": ["-y", "sourcesyncai-mcp"],
			"env": {
				"SOURCESYNC_API_KEY": "your_api_key",
				"SOURCESYNC_NAMESPACE_ID": "your_namespace_id",
				"SOURCESYNC_TENANT_ID": "your_tenant_id"
			}
		},
		"roam-helper": {
			"command": "docker",
			"args": ["run", "--rm", "-p", "3000:3000", "-e", "ROAM_API_TOKEN=your_token", "-e", "ROAM_GRAPH_NAME=your_graph", "roam-mcp"],
			"env": {}
		},
		"prysm-scraper": {
			"command": "npx",
			"args": ["-y", "@pinkpixel/prysm-mcp"],
			"env": {
				"PRYSM_OUTPUT_DIR": "${workspaceFolder}/scrape_results",
				"PRYSM_IMAGE_OUTPUT_DIR": "${workspaceFolder}/scrape_results/images"
			}
		},
		"substack_reader": {
			"command": "uv",
			"args": ["--directory", "/path/to/substack_reader", "run", "substack_reader.py"]
		},
		"phpocalypse-mcp": {
			"command": "npx",
			"args": ["tsx", "/Absolute/Path/To/PHPocalypse-MCP/src/index.ts", "--config", "/Absolute/Path/To/Your/PHP/Based/Project/phpocalypse-mcp.yaml"]
		},
		"cryptocurrency": {
			"command": "npx",
			"args": ["-y", "@raw391/coin-daemon-mcp"],
			"env": {
				"CONFIG_PATH": "C:/CryptoConfig/daemon-config.json"
			}
		},
		"SmartCustomerSupportMCP": {
			"command": "uv",
			"args": ["--directory", "/opt/apps/python_project/SmartCustomerSupportMCP", "run", "mcp-smart-customer-support", "--stdio"],
			"env": {
				"MYSQL_HOST": "192.168.xxx.xxx",
				"MYSQL_PORT": "3306",
				"MYSQL_USER": "root",
				"MYSQL_PASSWORD": "root",
				"MYSQL_DATABASE": "a_llm",
				"MYSQL_ROLE": "admin"
			}
		},
		"openfec": {
			"command": "node",
			"args": ["/absolute/path/to/mcp-openfec/build/server.js"],
			"env": {
				"OPENFEC_API_KEY": "your_api_key_here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"locust": {
			"command": "/Users/naveenkumar/.local/bin/uv",
			"args": ["--directory", "/Users/naveenkumar/Gits/locust-mcp-server", "run", "locust_server.py"]
		},
		"google-contacts-server": {
			"command": "uv",
			"args": ["--directory", "/path/to/mcp-google-contacts-server", "run", "main.py"],
			"disabled": false,
			"autoApprove": []
		},
		"qase": {
			"command": "node",
			"args": ["path/to/qase-mcp-server/build/index.js"],
			"env": {
				"QASE_API_TOKEN": "your-api-token"
			},
			"disabled": false,
			"autoApprove": []
		},
		"4o-mini-search": {
			"command": "npx",
			"args": ["@rebers/4o-mini-search-mcp"],
			"env": {
				"API_KEY": "your-api-key",
				"PROVIDER": "openai"
			}
		},
		"age-manager": {
			"command": "age-mcp-server",
			"args": ["--pg-con-str", "host=your_server.postgres.database.azure.com port=5432 dbname=postgres user=your_username password=your_password", "--allow-write"]
		},
		"btc": {
			"command": "node",
			"args": ["<FULL_PATH_TO_YOUR_PROJECT>/dist/index.js"],
			"env": {
				"COINMARKETCAP_API_KEY": "your-api-key-here"
			}
		},
		"amazon-vpc-lattice": {
			"command": "node",
			"args": ["/path/to/amazon-vpc-lattice-mcp-server/build/index.js"],
			"disabled": false,
			"autoApprove": [],
			"env": {}
		},
		"mindm (MindManager)": {
			"command": "uv",
			"args": ["run", "--with", "mindm>=0.0.4.6", "--with", "mindm-mcp>=0.0.1.50", "--with", "fastmcp", "--with", "markdown-it-py", "-m", "mindm_mcp.server"],
			"env": {
				"VIRTUAL_ENV": "/Users/master/git/mindm-mcp/.venv"
			}
		},
		"runbook": {
			"command": "npx",
			"args": ["-y", "@runbook-docs/mcp-server"],
			"env": {
				"RUNBOOK_BASE_URL": "https://<YOUR_SUBDOMAIN>.runbook.jp",
				"RUNBOOK_API_TOKEN": "your-api-token"
			}
		},
		"flight-planner": {
			"command": "python",
			"args": ["/PATH/TO/flight_planner_server.py"],
			"env": {
				"PYTHONPATH": "/PATH/TO/PROJECT"
			}
		},
		"vilnius_transport": {
			"command": "uv",
			"args": ["--directory", "path/vilnius-transport-mcp-server/src/vilnius_transport_mcp", "run", "transport.py"]
		},
		"AgentCraft": {
			"command": "python",
			"args": ["-m", "agentcraft_mcp.server"],
			"env": {
				"AGENTCRAFT_BEARER_TOKEN": "Your AgentCraft Bearer Token for authorization",
				"ENVIRONMENT": "PRODUCTION"
			}
		},
		"shadow-cljs-mcp": {
			"command": "npx",
			"args": ["shadow-cljs-mcp", "--host", "localhost", "--port", "9630"],
			"disabled": false,
			"autoApprove": [],
			"timeout": 60
		},
		"tmdb-mcp": {
			"command": "node",
			"args": ["/absolute/path/to/your/tmdb-mcp/build/index.js"]
		},
		"mcp-sleep": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "MCP_SLEEP_TIMEOUT", "mcp/sleep"],
			"env": {
				"MCP_SLEEP_TIMEOUT": "<MCP_SLEEP_TIMEOUT>"
			}
		},
		"mcp-sleep_local": {
			"command": "uv",
			"args": ["run", "--directory", "/path/to/your/mcp-sleep", "run", "mcp-sleep"]
		},
		"realtime-crypto": {
			"command": "npx",
			"args": ["realtime-crypto-mcp-server"]
		},
		"sidecar": {
			"command": "npx",
			"args": ["-y", "--package", "markdown-sidecar-mcp", "--", "mcp", "start", "--workingDir", "{REPO_WORKING_DIR}", "--packageName", "{PACKAGE_NAME}", "--registry", "npm"]
		},
		"mcp-embedding-search": {
			"command": "node",
			"args": ["/path/to/mcp-embedding-search/dist/index.js"],
			"env": {
				"TURSO_URL": "your-turso-database-url",
				"TURSO_AUTH_TOKEN": "your-turso-auth-token"
			}
		},
		"feature-discussion": {
			"command": "/path/to/feature-discussion/build/index.js"
		},
		"statsource": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "API_KEY=YOUR_STATSOURCE_API_KEY", "-e", "DB_CONNECTION_STRING=postgresql://your_db_user:your_db_password@your_db_host:5432/your_db_name", "-e", "DB_SOURCE_TYPE=database", "jamie78933/statsource-mcp"],
			"protocolVersion": "2024-11-05"
		},
		"aira": {
			"command": "node",
			"args": ["path/to/aira-mcp-server/build/index.js"]
		},
		"gitlab-kanban-mcp-server": {
			"command": "node",
			"args": ["path/to/gitlab-kanban-mcp-server/build/index.js"],
			"env": {
				"GITLAB_TOKEN": "your_gitlab_token",
				"GITLAB_URL": "your_gitlab_url"
			}
		},
		"svg-converter": {
			"command": "npx",
			"args": ["mcp-svg-converter", "/Users/yourusername/Desktop/svg-output", "/Users/yourusername/Documents/svg-images", "/Users/yourusername/Downloads"]
		},
		"docker-sandbox": {
			"command": "python",
			"args": ["/absolute/path/to/your/main.py"],
			"env": {
				"DOCKER_HOST": "unix:///path/to/your/docker.sock"
			}
		},
		"Bybit": {
			"command": "uv",
			"args": ["--directory", "{your_path}/crypto_exchange_mcp/crypto_exchange_mcp_python", "run", "bybit.py"]
		},
		"cwa": {
			"command": "docker",
			"args": ["exec", "-i", "cwa-mcp-server", "node", "cwa-server.js"]
		},
		"BigQuery": {
			"command": "/path/to/dist/bigquery-mcp-server",
			"args": ["--project-id", "your-project-id", "--location", "asia-northeast1", "--max-results", "1000", "--max-bytes-billed", "500000000000"]
		},
		"usescraper-server": {
			"command": "node",
			"args": ["/path/to/usescraper-server/build/index.js"],
			"env": {
				"USESCRAPER_API_KEY": "your-api-key-here"
			}
		},
		"uuid-provider": {
			"command": "node",
			"args": ["/absolute/path/to/uuid-mcp/build/index.js"]
		},
		"tecton": {
			"command": "uv",
			"args": ["--directory", "<path-to-your-local-clone>", "run", "mcp", "run", "src/tecton_mcp/mcp_server/server.py"]
		},
		"developer": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "mcp/developer"]
		},
		"terrakube": {
			"command": "npx",
			"args": ["-y", "@terrakube/mcp-server"],
			"env": {
				"TERRAKUBE_API_URL": "<YOUR_API_URL>",
				"TERRAKUBE_PAT_TOKEN": "<YOUR_PAT_TOKEN>"
			}
		},
		"MetaTagGenie": {
			"command": "npx",
			"args": ["-y", "metatag-genie"]
		},
		"devops-bridge": {
			"command": "/full/path/to/mcp-server-devops-bridge/mcp-server-devops-bridge",
			"args": [],
			"env": {
				"AZURE_DEVOPS_ORG": "organization",
				"AZDO_PAT": "personal_access_token",
				"AZURE_DEVOPS_PROJECT": "project",
				"SLACK_DEFAULT_CHANNEL": "channel_id",
				"SLACK_BOT_TOKEN": "bot_token",
				"GITHUB_PAT": "personal_access_token",
				"OPENAI_API_KEY": "openaikey",
				"QDRANT_URL": "http://localhost:6333",
				"QDRANT_API_KEY": "yourkey",
				"NEO4J_URL": "yourneo4jinstance",
				"NEO4J_USER": "neo4j",
				"NEO4J_PASSWORD": "neo4jpassword"
			}
		},
		"find-files": {
			"command": "npx",
			"args": ["-y", "find-files-mcp", "/Users/kst/Downloads", "/Users/kst/Desktop", "/Users/kst/Documents"]
		},
		"AWS EC2 Pricing MCP": {
			"command": "python",
			"args": ["/path/to/server.py"]
		},
		"Solana Client": {
			"command": "/Users/tywen/.local/bin/uv",
			"args": ["--directory", "/Users/tywen/Developer/mcp-sol", "run", "--with", "mcp", "mcp", "run", "/Users/tywen/Developer/mcp-sol/src/server.py"]
		},
		"minio_service": {
			"command": "python",
			"args": ["path/to/minio_mcp_server/server.py"]
		},
		"minio-mcp": {
			"command": "python",
			"args": ["path/to/minio-mcp/src/minio_mcp_server/server.py"]
		},
		"verodat-consume": {
			"command": "node",
			"args": ["path/to/verodat-mcp-server/build/src/consume.js"],
			"env": {
				"VERODAT_AI_API_KEY": "your-api-key",
				"VERODAT_API_BASE_URL": "https://verodat.io/api/v3"
			}
		},
		"verodat-design": {
			"command": "node",
			"args": ["path/to/verodat-mcp-server/build/src/design.js"],
			"env": {
				"VERODAT_AI_API_KEY": "your-api-key",
				"VERODAT_API_BASE_URL": "https://verodat.io/api/v3"
			}
		},
		"verodat-manage": {
			"command": "node",
			"args": ["path/to/verodat-mcp-server/build/src/manage.js"],
			"env": {
				"VERODAT_AI_API_KEY": "your-api-key",
				"VERODAT_API_BASE_URL": "https://verodat.io/api/v3"
			}
		},
		"dbmcp": {
			"url": "http://localhost:8080/sse"
		},
		"ollama-server": {
			"command": "python",
			"args": ["-m", "src.mcp_server.server"],
			"env": {
				"PYTHONPATH": "path-to-mcp-server"
			}
		},
		"waldur-mcp-server": {
			"command": "uvx",
			"args": ["waldur-mcp-server"],
			"env": {
				"WALDUR_API_URL": "https://your-waldur-instance",
				"WALDUR_TOKEN": "your-token"
			}
		},
		"wsl-filesystem": {
			"command": "npx",
			"args": ["-y", "mcp-server-wsl-filesystem", "/home/user/documents"]
		},
		"word-mcp-server": {
			"command": "/path/to/word-mcp-server/.venv/bin/python3",
			"args": ["/path/to/word-mcp-server/server.py"]
		},
		"akshare_mcp": {
			"command": "D:\\Users\\Kan\\miniconda3\\envs\\py312\\python.exe",
			"args": ["-m", "akshare_mcp", "--format", "markdown"]
		},
		"ai_think_gate": {
			"command": "npx",
			"args": ["-y", "@trishchuk/osp-marketing-tools-mcp"]
		},
		"multicluster-mcp-server": {
			"command": "npx",
			"args": ["-y", "multicluster-mcp-server@latest"]
		},
		"record-to-apple-notes": {
			"command": "uv",
			"args": ["--directory", "/FULL_PATH_TO/record-to-markdown", "run", "server.py"]
		},
		"jira-insights": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "-e", "JIRA_API_TOKEN", "-e", "JIRA_EMAIL", "-e", "JIRA_HOST", "ghcr.io/aaronsb/jira-insights-mcp:latest"],
			"env": {
				"JIRA_API_TOKEN": "your-api-token",
				"JIRA_EMAIL": "your-email@example.com",
				"JIRA_HOST": "https://your-domain.atlassian.net"
			}
		},
		"system-resource-monitor": {
			"command": "node",
			"args": ["/absolute/path/to/dist/index.js"]
		},
		"gatherings": {
			"command": "node",
			"args": ["/path/to/gatherings-server/build/index.js"],
			"env": {
				"GATHERINGS_DB_PATH": "gatherings.db",
				"GATHERINGS_SCRIPT": "/path/to/gatherings-server/gatherings.py"
			},
			"disabled": false,
			"autoApprove": [],
			"alwaysAllow": ["create_gathering", "add_expense", "calculate_reimbursements", "record_payment", "rename_member", "show_gathering", "list_gatherings", "close_gathering", "delete_gathering", "add_member", "remove_member"],
			"timeout": 300
		},
		"tenki": {
			"command": "uv",
			"args": ["--directory", "/PATH/TO/REPOSITORY/mcp_tenki", "run", "main.py"]
		},
		"adamik-mcp-server": {
			"command": "node",
			"args": ["/Users/YourUsername/GitHub/adamik-mcp-server/build/index.js"]
		},
		"teamretro-mcp-server": {
			"command": "node",
			"args": ["/path/to/teamretro-mcp-server/dist/index.js"],
			"env": {
				"TEAMRETRO_AUTH_TYPE": "apiKey",
				"TEAMRETRO_API_KEY": "your-api-key"
			}
		},
		"supabase": {
			"command": "npx",
			"args": ["tsx", "/path/to/mcp-server.ts"]
		},
		"tavily_extract": {
			"command": "uv",
			"args": ["--directory", "%USERPROFILE%/Documents/GitHub/mcp-tavily-extract", "run", "python", "main.py"]
		},
		"unlock_pdf": {
			"command": "uv",
			"args": ["--directory", "%USERPROFILE%/Documents/GitHub/mcp-unlock-pdf", "run", "python", "main.py"]
		},
		"origin": {
			"command": "source",
			"args": ["venv/bin/activate", "&&", "python3", "-u", "mcp-server.py"],
			"shell": true,
			"env": {
				"PYTHONPATH": ".",
				"PYTHONUNBUFFERED": "1"
			}
		},
		"gh": {
			"command": "node",
			"args": ["absolute\\path\\to\\your\\index.js\\file"],
			"env": {
				"GITHUB_TOKEN": "your-github-personal-access-token"
			}
		},
		"bunnyshell-mcp": {
			"command": "docker",
			"args": ["exec", "-i", "bns-mcp-server", "node", "dist/index.js"],
			"env": {
				"BNS_API_KEY": "YOUR_API_TOKEN_HERE"
			}
		},
		"gcalendar": {
			"command": "YOUR_PYTHON_PATH",
			"args": ["YOUR_PATH/GCalendar/src/mcp_server.py"]
		},
		"cmd-line": {
			"command": "/path/to/venv/bin/cmd-line-mcp",
			"args": ["--config", "/path/to/config.json"],
			"env": {
				"CMD_LINE_MCP_SECURITY_REQUIRE_SESSION_ID": "false",
				"CMD_LINE_MCP_SECURITY_AUTO_APPROVE_DIRECTORIES_IN_DESKTOP_MODE": "true"
			}
		},
		"command-server": {
			"command": "uv",
			"args": ["run", "python", "-m", "mcp_command_server"],
			"env": {
				"ALLOWED_COMMANDS": "ls,pwd,echo"
			}
		},
		"trello-ts": {
			"command": "node",
			"args": ["/path/to/mcp-server-ts-trello/build/index.js"],
			"env": {
				"TRELLO_API_KEY": "your_api_key",
				"TRELLO_TOKEN": "your_token"
			}
		},
		"brianknows": {
			"command": "npx",
			"args": ["mcp-brianknows"],
			"env": {
				"BRIAN_API_KEY": "your-api-key-here"
			}
		},
		"os-info": {
			"command": "path_to_your_npx",
			"args": ["os-info-mcp-server"]
		},
		"database-updater": {
			"command": "/path/to/database-updater/build/index.js"
		},
		"python-docs-server": {
			"command": "/path/to/python-docs-server/build/index.js"
		},
		"nsaf": {
			"command": "nsaf-mcp-server",
			"args": [],
			"env": {},
			"disabled": false,
			"autoApprove": []
		},
		"lta": {
			"command": "npx",
			"args": ["-y", "arjunkmrm/mcp-sg-lta"],
			"env": {
				"LTA_API_KEY": "YOUR-API-KEY"
			}
		},
		"aws-kb-retrieval": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-aws-kb-retrieval"],
			"env": {
				"AWS_ACCESS_KEY_ID": "YOUR_ACCESS_KEY_HERE",
				"AWS_SECRET_ACCESS_KEY": "YOUR_SECRET_ACCESS_KEY_HERE",
				"AWS_SESSION_TOKEN": "YOUR_OPTIONAL_SESSION_ID_FOR_SSO_TEMPORARY_CREDENTIALS_HERE",
				"AWS_REGION": "YOUR_AWS_REGION_HERE",
				"AWS_KB_IDS": "[\"kb-12345\", \"kb-67890\"]"
			}
		},
		"aws-kb": {
			"command": "node",
			"args": ["/path/to/mcp-aws-kb/dist/index.js"],
			"env": {
				"AWS_ACCESS_KEY_ID": "YOUR_ACCESS_KEY_HERE",
				"AWS_SECRET_ACCESS_KEY": "YOUR_SECRET_ACCESS_KEY_HERE",
				"AWS_SESSION_TOKEN": "YOUR_OPTIONAL_SESSION_ID_FOR_SSO_TEMPORARY_CREDENTIALS_HERE",
				"AWS_REGION": "YOUR_AWS_REGION_HERE",
				"AWS_KB_IDS": "[\"kb-12345\", \"kb-67890\"]"
			},
			"disabled": false,
			"autoApprove": ["retrieve_from_aws_kb"],
			"timeout": 120
		},
		"flutterwave": {
			"command": "npx",
			"args": ["-y", "mcp-flutterwave", "--tools=checkout.create", "--secret-key=FLW_SECRET_KEY"]
		},
		"macrostrat": {
			"command": "node",
			"args": ["/Full/Route/to/Folder/macrostrat/build/index.js"]
		},
		"krep": {
			"command": "node",
			"args": ["/path/to/krep-mcp-server/src/index.js"],
			"env": {
				"CLAUDE_MCP": "true",
				"KREP_PATH": "/path/to/krep-native/krep",
				"DEBUG": "true"
			},
			"description": "High-performance string search utility with unified interface",
			"disabled": false,
			"autoApprove": ["krep"]
		},
		"mrp": {
			"command": "node",
			"args": ["/path/to/mrp-calculator/dist/index.js"],
			"env": {}
		},
		"clickhouse-mcp-server": {
			"command": "uvx",
			"args": ["clickhouse-mcp-server"],
			"env": {
				"CLICKHOUSE_HOST": "localhost",
				"CLICKHOUSE_USER": "root",
				"CLICKHOUSE_PASSWORD": "password",
				"CLICKHOUSE_DATABASE": "[optional]",
				"CLICKHOUSE_READONLY": "true"
			}
		},
		"github.com/capecoma/winterm-mcp": {
			"command": "node",
			"args": ["path/to/build/index.js"],
			"disabled": false,
			"autoApprove": []
		},
		"lilith-shell": {
			"command": "/path/to/cloned/Lilith-Shell/venv/bin/python",
			"args": ["/path/to/cloned/Lilith-Shell/src/lilith_shell/executor.py"],
			"env": {
				"PYTHONPATH": "/path/to/cloned/Lilith-Shell/src"
			}
		},
		"github-pr-helper": {
			"command": "node",
			"args": ["/Users/aaron/CascadeProjects/app-github-pr-helper/src/mcp-server.js"],
			"disabled": false,
			"alwaysAllow": []
		},
		"github.com/modelcontextprotocol/servers/tree/main/src/gitlab": {
			"command": "node",
			"args": ["/path/to/custom-gitlab-server/index.js"],
			"env": {
				"GITLAB_PERSONAL_ACCESS_TOKEN": "your-gitlab-token",
				"GITLAB_API_URL": "https://your-gitlab-instance/api/v4"
			}
		},
		"promptz.dev": {
			"command": "node",
			"args": ["/path/to/promptz-mcp/build/index.js"],
			"env": {
				"PROMPTZ_API_URL": "your-api-url-from-promptz.dev",
				"PROMPTZ_API_KEY": "your-api-key-from-promptz.dev"
			},
			"disabled": false,
			"autoApprove": []
		},
		"instantdb-server": {
			"command": "node",
			"args": ["/path/to/instantdb-server/build/index.js"],
			"env": {
				"INSTANT_APP_ID": "your_app_id",
				"INSTANT_APP_ADMIN_TOKEN": "your_admin_token"
			},
			"disabled": false,
			"autoApprove": []
		},
		"mcp-forge": {
			"command": "npx",
			"args": ["-y", "@smithery/cli@latest", "run", "@your-username/mcp-forge", "--config", "{}"]
		},
		"edu-data": {
			"command": "npx",
			"args": ["edu-data-mcp-server"],
			"disabled": false,
			"alwaysAllow": []
		},
		"clickzetta-mcp-server": {
			"command": "/Users/******/anaconda3/bin/uv",
			"args": ["--directory", "/Users/******/Documents/GitHub/mcp-clickzetta-server", "run", "mcp_clickzetta_server"]
		},
		"generateImage": {
			"command": "/Users/zhangxudong/Gits/turinhub/cf-mcp-server/mcp-image-generation/node_modules/.bin/workers-mcp",
			"args": ["run", "generateImage", "https://mcp-image-generation.turinhub.com", "/Users/zhangxudong/Gits/turinhub/cf-mcp-server/mcp-image-generation"],
			"env": {}
		},
		"cloudbrowser": {
			"command": "cmd",
			"args": ["/c", "npx", "-y", "@browsercloud/mcp-server-cloudbrowser"],
			"env": {
				"API_KEY": "<YOUR_BROWSERBASE_API_KEY>"
			},
			"transportType": "stdio"
		},
		"coinbase-commerce": {
			"command": "node",
			"args": ["/path/to/mcp-coinbase-commerce/dist/index.js"],
			"env": {
				"COINBASE_COMMERCE_API_KEY": "your_api_key_here"
			}
		},
		"quickbase": {
			"command": "/path/to/node",
			"args": ["/path/to/Quickbase-MCP-connector/src/quickbase/server.js"],
			"env": {
				"QUICKBASE_REALM_HOST": "your-realm",
				"QUICKBASE_USER_TOKEN": "your-user-token",
				"QUICKBASE_APP_ID": "your-app-id"
			}
		},
		"fillout": {
			"command": "npx",
			"args": ["-y", "@modelcontextprotocol/server-fillout"],
			"env": {
				"FILLOUT_API_KEY": "your-fillout-api-key"
			}
		},
		"git-file-forensics": {
			"command": "/opt/homebrew/bin/node",
			"args": ["/path/to/git-file-forensics/build/index.js"],
			"alwaysAllow": []
		},
		"mcp-server-jupiter": {
			"command": "npx",
			"args": ["@mcp-dockmaster/mcp-server-jupiter"]
		},
		"fiberflow": {
			"command": "npx",
			"args": ["-y", "fiberflow-mcp-gateway", "--sse", "https://fiberflow.fiberflow.io/api/v1/sse/YOUR-FIBERFLOW-MCP-SERVER-SECRET"]
		},
		"cloudflare-backup": {
			"command": "node",
			"args": ["/path/to/cloudflare-github-backup/build/index.js"],
			"env": {
				"CLOUDFLARE_API_TOKEN": "your_cloudflare_api_token",
				"GITHUB_ACCESS_TOKEN": "your_github_access_token",
				"GITHUB_REPO_NAME": "your_github_repo_name"
			}
		},
		"eregulations": {
			"command": "docker",
			"args": ["run", "-i", "--rm", "-e", "EREGULATIONS_API_URL", "ghcr.io/unctad-ai/eregulations-mcp-server:latest"],
			"env": {
				"EREGULATIONS_API_URL": "https://your-eregulations-api.com"
			}
		},
		"twilio_manager_mcp_abs": {
			"command": "uv",
			"args": ["--directory", "/path/to/twilio_manager_mcp", "run", "mcp", "run", "./twilio_manager_mcp.py"],
			"env": {
				"TWILIO_ACCOUNT_SID": "your_account_sid",
				"TWILIO_AUTH_TOKEN": "your_auth_token"
			}
		},
		"twilio_manager_mcp_uvx": {
			"command": "uvx",
			"args": ["twilio-manager-mcp"],
			"env": {
				"TWILIO_ACCOUNT_SID": "your_account_sid",
				"TWILIO_AUTH_TOKEN": "your_auth_token"
			}
		},
		"twilio_manager_mcp_sse": {
			"url": "http://localhost:8000/sse"
		},
		"Untappd": {
			"command": "node",
			"args": ["/Users/adamlusted/projects/untapped-mcp/build/index.js"],
			"env": {
				"UNTAPPED_API_CLIENT_ID": "<YOUR_CLIENT_ID>",
				"UNTAPPED_API_CLIENT_SECRET": "<YOUR_CLIENT_SECRET>"
			}
		},
		"strateegia": {
			"command": "node",
			"args": ["path/to/strateegia-mcp-server/dist/index.js"],
			"env": {
				"STRATEEGIA_API_KEY": "your_api_key_here"
			}
		},
		"flux-image-generator": {
			"command": "mcp-server-flux-image-generator",
			"env": {
				"BFL_API_KEY": "your_api_key_here"
			}
		},
		"hex-mcp": {
			"command": "hex-mcp",
			"args": ["run"]
		},
		"discord-webhook": {
			"command": "npx",
			"args": ["-y", "@genpm/mcp-server-discord-webhook"],
			"env": {
				"DISCORD_WEBHOOK_URL": "your-discord-webhook-url"
			},
			"alwaysAllow": ["send_message"]
		},
		"qdrant": {
			"command": "npx",
			"args": ["-y", "@gergelyszerovay/mcp-server-qdrant-retrive"],
			"env": {
				"QDRANT_API_KEY": "your_api_key_here"
			}
		},
		"aws-cognito-mcp-server": {
			"command": "/path/to/mcp-server-aws-cognito/build/index.js",
			"env": {
				"AWS_COGNITO_USER_POOL_ID": "your-user-pool-id",
				"AWS_COGNITO_USER_POOL_CLIENT_ID": "your-app-client-id"
			}
		},
		"dubco-server": {
			"command": "node",
			"args": ["/path/to/dubco-mcp-server/build/index.js"],
			"env": {
				"DUBCO_API_KEY": "your_api_key_here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"git-commands-mcp": {
			"command": "node",
			"args": ["/path/to/git-commands-mcp/src/index.js"]
		},
		"audius": {
			"command": "npx",
			"args": ["audius-mcp-atris"],
			"env": {
				"AUDIUS_API_KEY": "your_api_key_here",
				"AUDIUS_API_SECRET": "your_api_secret_here"
			}
		},
		"gralio": {
			"url": "https://gralio.ai/mcp/sse"
		},
		"gralio_remote": {
			"command": "npx",
			"args": ["-y", "supergateway", "--sse", "https://gralio.ai/mcp/sse"]
		},
		"resend-mcp": {
			"command": "npx",
			"args": ["-y", "resend-mcp"],
			"env": {
				"RESEND_API_KEY": "YOUR_RESEND_API_KEY_HERE (string, required)",
				"SENDER_EMAIL_ADDRESS": "YOUR_SENDER_EMAIL_ADDRESS_HERE (string, required)",
				"REPLY_TO_EMAIL_ADDRESSES": "YOUR_REPLY_TO_EMAIL_ADDRESSES_HERE (string, optional, comma delimited)"
			}
		},
		"aligo-sms-mcp": {
			"command": "npx",
			"args": ["-y", "github:hongsw/aligo-sms-mcp-server", "mcp-server"]
		},
		"kali-mcp": {
			"command": "docker",
			"args": ["exec", "-i", "kali-mcp-commander-minimal", "npx", "@wonderwhy-er/desktop-commander"],
			"name": "Kali Linux MCP",
			"description": "Access Kali Linux security tools via MCP"
		},
		"wagyu-sports": {
			"command": "python",
			"args": ["/absolute/path/to/wagyu_mcp_hackathon/wagyu_sports/mcp_server/test_server.py", "--test-mode"],
			"env": {
				"ODDS_API_KEY": "your_api_key_here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"wordware": {
			"command": "wordware-mcp"
		},
		"flux-cloudflare-mcp": {
			"command": "npx",
			"args": ["-y", "flux-cloudflare-mcp"],
			"env": {
				"FLUX_API_TOKEN": "YOUR_TOKEN",
				"FLUX_API_URL": "YOUR_API_URL"
			}
		},
		"partytime": {
			"command": "/path/to/your/party_time_mcp",
			"args": []
		},
		"clickfunnels-mcp-framework": {
			"command": "node",
			"args": ["/absolute/path/to/click-funnels-mcp-shared/dist/index.js"],
			"env": {
				"PORT": "3002",
				"CLICKFUNNELS_API_BASE": "https://your-domain.myclickfunnels.com/api/v2",
				"CLICKFUNNELS_WORKSPACE_ID": "123456",
				"CLICKFUNNELS_API_TOKEN": "YOUR_API_TOKEN_HERE",
				"CLICKFUNNELS_WORKSPACE_SUBDOMAIN": "your-subdomain",
				"NODE_ENV": "production",
				"MCP_LOG_LEVEL": "debug",
				"MCP_LOG_TO_CONSOLE": "true",
				"MCP_LOG_TO_FILE": "true",
				"MCP_LOG_DIR": "/absolute/path/to/click-funnels-mcp-shared/logs",
				"NODE_OPTIONS": "--max-old-space-size=256"
			},
			"cwd": "/absolute/path/to/click-funnels-mcp-shared"
		},
		"mcpServerConnections": [{
			"url": "http://localhost:3002/sse"
		}],
		"grareco": {
			"url": "http://localhost:3000/sse",
			"headers": {},
			"timeout": 900
		},
		"workato-tools": {
			"command": "node",
			"args": ["/path/to/your/project/dist/server.js"],
			"env": {
				"WORKATO_API_TOKEN": "your_token_here"
			}
		},
		"solarwinds": {
			"command": "C:\\Users\\[username]\\AppData\\Roaming\\nvm\\[node-version]\\node.exe",
			"args": ["C:\\Users\\[username]\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npx-cli.js", "-y", "mcp-solarwinds"],
			"env": {
				"SOLARWINDS_API_TOKEN": "your-api-token"
			}
		},
		"mcp-gatherer": {
			"command": "php",
			"args": ["C:\\mcp-gatherer\\mcp_server.php"],
			"disabled": false,
			"alwaysAllow": []
		},
		"mcp-tiggerbeetle": {
			"command": "[ABSOLUTE PATH TO]/java/current/bin/java",
			"args": ["-Dspring.ai.mcp.server.stdio=true", "-jar", "[ABSOLUTE PATH TO]/mcp-tiggerbeetle/target/mcp-tiggerbeetle-0.0.1-SNAPSHOT.jar"],
			"autoApprove": ["mcp-tiggerbeetle"]
		},
		"xpath": {
			"command": "node",
			"args": ["/path/to/mcp-xpath/dist/index.js"]
		},
		"json-db-collections": {
			"command": "<base-dir>/mcp-json-db-collection-server/build/index.js"
		},
		"dynamodb-readonly": {
			"command": "npx",
			"args": ["-y", "dynamo-readonly-mcp"],
			"env": {
				"AWS_ACCESS_KEY_ID": "your_access_key",
				"AWS_SECRET_ACCESS_KEY": "your_secret_key",
				"AWS_REGION": "your_region"
			}
		},
		"untappd-server": {
			"command": "/path/to/untappd-server/build/index.js"
		},
		"AivisSpeech-MCP": {
			"command": "node",
			"args": ["/path/to/aivis-speech-mcp/dist/index.js"]
		},
		"performance_review_data": {
			"command": "just",
			"args": ["-f", "/absolute/path/to/mcp-server-performance-review-data/Justfile", "run"]
		},
		"excel-to-pdf-mcp": {
			"command": "npx",
			"args": ["excel-to-pdf-mcp"],
			"name": "Excel to PDF Converter"
		},
		"file-finder-mcp": {
			"args": ["file_finder_server.py"],
			"command": "python",
			"autoApprove": [],
			"disabled": false
		},
		"mcp-templateio": {
			"command": "node",
			"args": ["/absolute/path/to/mcp-templateio/dist/index.js"]
		},
		"repl": {
			"command": "/path/to/python/env/bin/python",
			"args": ["-m", "repl"]
		},
		"dust": {
			"command": "/Users/ma3u/projects/mcp-server-dust/.venv/bin/python",
			"args": ["/Users/ma3u/projects/mcp-server-dust/server.py"],
			"host": "127.0.0.1",
			"port": 5001,
			"timeout": 10000
		},
		"ayd": {
			"command": "C:\\path\\to\\mcp-ayd-server.exe",
			"args": ["http://127.0.0.1:9000"]
		},
		"malaysia-prayer-time": {
			"command": "/absolute/path/to/your/.venv/bin/python",
			"args": ["main.py"],
			"cwd": "/absolute/path/to/mcp-server-malaysia-prayer-time"
		},
		"watsonx-discovery": {
			"command": "wsl.exe",
			"args": ["bash", "-c", "/home/morpheus/.local/bin/uv --directory /home/morpheus/workspace/mcp-discovery run 'server/__main__.py'"]
		},
		"senechal-health": {
			"command": "C:\\path\\to\\venv\\Scripts\\python.exe",
			"args": ["C:\\path\\to\\senechal_mcp_server.py"],
			"env": {
				"SENECHAL_API_KEY": "your_api_key_here"
			}
		},
		"netlify": {
			"command": "node",
			"args": ["path/to/netlify-mcp/build/index.js"],
			"env": {
				"NETLIFY_ACCESS_TOKEN": "your_token_here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"ebird-api": {
			"command": "npx",
			"args": ["ebird-mcp-server", "--api-key", "YOUR_EBIRD_API_KEY"]
		},
		"perspective": {
			"command": "npx",
			"args": ["-y", "@mtane0412/perspective-mcp-server"],
			"env": {
				"PERSPECTIVE_API_KEY": "your-api-key"
			}
		},
		"uno": {
			"command": "node",
			"args": ["/absolute/path/to/uno-mcp/dist/index.js"],
			"disabled": false,
			"autoApprove": []
		},
		"tts-mcp": {
			"command": "npx",
			"args": ["-p", "tts-mcp", "tts-mcp-server", "--voice", "nova", "--model", "gpt-4o-mini-tts"],
			"env": {
				"OPENAI_API_KEY": "your-openai-api-key"
			}
		},
		"nefino": {
			"command": "python",
			"args": ["-m", "mcp_nefino"],
			"env": {
				"NEFINO_USERNAME": "your_username",
				"NEFINO_PASSWORD": "your_password",
				"NEFINO_JWT_SECRET": "your_jwt_secret",
				"NEFINO_BASE_URL": "http://api_endpoint"
			}
		},
		"TodoApplication": {
			"command": "wsl.exe",
			"args": ["-e", "bash", "-c", "cd /\u7d76\u5bfe\u30d1\u30b9/TaskMateAI && /home/\u30e6\u30fc\u30b6\u30fc/.local/bin/uv run TaskMateAI"],
			"env": {},
			"alwaysAllow": ["get_tasks", "get_next_task", "create_task", "update_progress", "complete_task", "add_subtask", "update_subtask", "add_note", "list_agents", "list_projects"],
			"defaultArguments": {
				"agent_id": "agent_123",
				"project_name": ""
			}
		},
		"myip": {
			"command": "uvx",
			"args": ["mcp-myip"]
		},
		"resemble-ai": {
			"command": "python",
			"args": ["-m", "src.cli", "--implementation", "mcp"],
			"env": {
				"RESEMBLE_API_KEY": "your_api_key_here"
			},
			"disabled": false,
			"autoApprove": []
		},
		"eagle": {
			"command": "node",
			"args": ["/path/to/mcp-eagle/build/index.js"]
		},
		"openapi-client-generator": {
			"command": "node",
			"args": ["< PATH TO >/openapi-client-generator/build/index.js"]
		},
		"Agent8": {
			"command": "npx",
			"args": ["--yes", "agent8-mcp-server"]
		},
		"postgres-query": {
			"command": "node",
			"args": ["/Users/darshilrathod/mcp-servers/mcp-postgres-query-server/dist/index.js", "postgresql://user:password@localhost:5432/mydatabase"]
		},
		"PremAI": {
			"command": "npx",
			"args": ["prem-mcp-server", "--stdio"],
			"env": {
				"PREM_API_KEY": "your_api_key_here",
				"PREM_PROJECT_ID": "your_project_id_here"
			}
		},
		"blastengine-mailer": {
			"command": "node",
			"env": {
				"BLASTENGINE_USER_ID": "userid-of-blastengine",
				"BLASTENGINE_API_KEY": "apikey-of-blastengine"
			},
			"args": ["/path/to/blastengine-mailer/server.js"]
		},
		"cdata-connect-cloud": {
			"command": "node",
			"env": {
				"CDATA_CONNECT_CLOUD_CATALOG_NAME": "CData Connect Cloud \u306e Connection Name",
				"CDATA_CONNECT_CLOUD_USER": "CData Connect Cloud \u3078\u63a5\u7d9a\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u540d",
				"CDATA_CONNECT_CLOUD_PAT": "CData Connect Cloud \u3078\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e PAT"
			},
			"args": ["[cdata-connect-cloud-mcp-server\u3092\u914d\u7f6e\u3057\u305f\u30d1\u30b9]/server.js"]
		},
		"deriv-api-mcp": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "deriv-api-mcp"]
		},
		"randomuser": {
			"command": "node",
			"args": ["path/to/randomuserMCP/build/index.js"]
		},
		"trading-simulator-mcp": {
			"command": "npx",
			"args": ["-y", "github:recallnet/trading-simulator-mcp"],
			"env": {
				"TRADING_SIM_API_KEY": "your-api-key",
				"TRADING_SIM_API_URL": "api-url"
			}
		},
		"remote-command": {
			"command": "node",
			"args": ["path/to/remote-command-server/build/index.js"],
			"disabled": false,
			"autoApprove": []
		},
		"portkey-server": {
			"command": "node",
			"args": ["/path/to/portkey-server/build/index.js"],
			"env": {
				"PORTKEY_API_KEY": "your_portkey_api_key_here"
			}
		},
		"airgen-mcp": {
			"url": "{url}/sse"
		},
		"notion-kb": {
			"command": "uv",
			"args": ["run", "--with", "fastmcp", "--with", "python-dotenv", "--with", "requests", "fastmcp", "run", "/absolute/path/to/notion_mcp_server.py"],
			"env": {
				"DIFY_API_BACKEND_KEY": "your-api-key"
			}
		},
		"paypal-au": {
			"command": "python",
			"args": ["-m", "fastmcp", "run", "/path/to/paypal_au_subscription_mcp.py"],
			"env": {
				"PAYPAL_CLIENT_ID": "your_client_id",
				"PAYPAL_CLIENT_SECRET": "your_client_secret",
				"PAYPAL_ENVIRONMENT": "SANDBOX"
			}
		},
		"figma-developer-mcp": {
			"command": "npx",
			"args": ["-y", "figma-developer-mcp", "--stdio"],
			"env": {
				"FIGMA_API_KEY": "<your-figma-api-key>"
			}
		},
		"mcp-server-rubygems": {
			"command": "/path/to/mcp-server-rubygems/build/index.js"
		},
		"image-reader": {
			"command": "/path/to/image-reader/build/index.js"
		},
		"Android source code": {
			"command": "/path/to/uv",
			"args": ["run", "--with", "mcp[cli]", "mcp", "run", "./filesystem_android/main.py"]
		},
		"Agora": {
			"command": "uvx",
			"args": ["agora-mcp"]
		},
		"Fewsats": {
			"command": "env",
			"args": ["FEWSATS_API_KEY=YOUR_FEWSATS_API_KEY", "uvx", "fewsats-mcp"]
		},
		"project-npm": {
			"command": "/path/to/project-npm/build/index.js"
		},
		"entscheidsuche": {
			"command": "node",
			"args": ["/absolute/path/to/entscheidsuche-mcp-server/build/index.js"]
		},
		"sequentialthinking": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "mcp/sequentialthinking"]
		},
		"developer-name": {
			"command": "npx",
			"args": ["-y", "mcp-developer-name"],
			"env": {
				"DEVELOPER_NAME": "Wayne Wei"
			},
			"disabled": false,
			"autoApprove": []
		},
		"youtube-subtitles": {
			"command": "docker",
			"args": ["run", "-i", "mcp/youtube-subtitles"]
		},
		"e_gonghun_mcp": {
			"command": "uv",
			"args": ["--directory", "C:\\Users\\\uc0ac\uc6a9\uc790\uc774\ub984\\projects\\e-gonghun-mcp", "run", "gonghun-mcp"]
		},
		"adb": {
			"command": "npx",
			"args": ["adb-mcp"]
		},
		"harvester": {
			"command": "/path/to/harvester-mcp-server",
			"args": ["--kubeconfig", "/path/to/kubeconfig.yaml", "--log-level", "info"]
		},
		"pubnub": {
			"command": "/Users/stephen/.nvm/versions/node/v22.14.0/bin/node",
			"args": ["/Users/stephen/Projects/mcp-pubnub/index.js"],
			"env": {
				"PUBNUB_SUBSCRIBE_KEY": "demo",
				"PUBNUB_PUBLISH_KEY": "demo"
			}
		},
		"student": {
			"command": "docker",
			"args": ["run", "--rm", "-i", "mcp/student"]
		},
		"apifox": {
			"command": "npx",
			"args": ["-y", "mcp-apifox@latest", "--token=xxxx"]
		},
		"kb": {
			"command": "python",
			"args": ["/path/to/kb_mcp.py"]
		},
		"symbol": {
			"command": "npx",
			"args": ["-y", "tsx", "/path/to/your/mcp/symbol-mcp-server/src/index.ts"]
		},
		"rss-to-md": {
			"command": "node",
			"args": ["rss-to-md-server.js"]
		},
		"aptos-dev": {
			"command": "uv",
			"args": ["--directory", "/path/to/aptos-mcp-server", "run", "aptos_mcp_server.py"]
		},
		"tldv": {
			"command": "node",
			"args": ["/absolute/path/to/tldv-mcp-server/dist/index.js"],
			"env": {
				"TLDV_API_KEY": "your_tldv_api_key"
			}
		},
		"opera-omnia": {
			"command": "node",
			"args": ["path/to/opera-omnia-mcp/build/index.js"],
			"disabled": false,
			"autoApprove": []
		},
		"odbc": {
			"command": "uv",
			"args": ["--directory", "C:\\path\\to\\mcp-odbc", "run", "odbc-mcp-server", "--config", "C:\\path\\to\\mcp-odbc\\config\\your_config.ini"]
		},
		"lanceDB": {
			"command": "node",
			"args": ["/path/to/lancedb-node/dist/index.js", "--db-path", "/path/to/your/lancedb/storage"]
		},
		"mcp-coincap-jj": {
			"command": "cmd.exe",
			"args": ["/c", "C:\\Program Files\\nodejs\\npx.cmd", "C:\\Users\\YOUR-WINDOWS-USERNAME\\repos\\github\\mcp-coincap-jj"],
			"env": {
				"COINCAP_API_KEY": "YOUR_API_KEY_HERE"
			},
			"disabled": false,
			"alwaysAllow": []
		},
		"snapshot": {
			"command": "node",
			"args": ["/ABSOLUTE/PATH/TO/snapshot-server/build/index.js"]
		},
		"claude-tools": {
			"command": "/path/to/conda/envs/mcp-tools/bin/python",
			"args": ["-m", "claude_tools.main"]
		},
		"character-counter": {
			"command": "node",
			"args": ["/RUTA/ABSOLUTA/A/webreactiva-devs/mcp-character-counter/mcp/character-counter.js"]
		},
		"jfk-mcp": {
			"command": "npx",
			"args": ["-y", "jfk-mcp"],
			"env": {
				"ARCHIVES_API_KEY": "your-api-key-here"
			}
		},
		"mcp-cloud-pc": {
			"command": "uv",
			"args": ["run", "--directory", "/ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-cloud-pc", "mcp-cloud-pc.py"],
			"env": {
				"MSGRAPH_TENANT_ID": "<YOUR GRAPH API TENANT ID>",
				"MSGRAPH_CLIENT_ID": "<YOUR GRAPH API CLIENT ID>",
				"MSGRAPH_CLIENT_SECRET": "<YOUR GRAPH API CLIENT SECRET>"
			}
		},
		"better-qdrant": {
			"command": "npx",
			"args": ["better-qdrant-mcp-server"],
			"env": {
				"QDRANT_URL": "http://localhost:6333",
				"QDRANT_API_KEY": "your_api_key_if_needed",
				"DEFAULT_EMBEDDING_SERVICE": "ollama",
				"OPENAI_API_KEY": "your_openai_api_key",
				"OPENAI_ENDPOINT": "https://api.openai.com/v1",
				"OPENROUTER_API_KEY": "your_openrouter_api_key",
				"OPENROUTER_ENDPOINT": "https://api.openrouter.com/v1",
				"OLLAMA_ENDPOINT": "http://localhost:11434",
				"OLLAMA_MODEL": "nomic-embed-text"
			}
		},
		"yt-mcp-server": {
			"command": "npx",
			"args": ["yt-mcp-server"]
		},
		"arithmetic": {
			"command": "node",
			"args": ["/Users/y_nakasaka/Documents/Cline/MCP/arithmetic-server/src/index.js"],
			"disabled": false,
			"autoApprove": []
		},
		"safetyculture": {
			"command": "python",
			"args": ["/path/to/your/project/src/main.py"]
		},
		"evm-signer": {
			"command": "node",
			"args": ["/path/to/mcp-evm-signer/build/index.js"],
			"env": {
				"INFURA_API_KEY": "your_infura_api_key_here",
				"DEFAULT_NETWORK": "sepolia",
				"ENCRYPT_KEYS": "true",
				"KEY_PASSWORD": "your_secure_password_here"
			}
		},
		"kusto": {
			"command": "uv",
			"args": ["--directory", "{{PATH_TO_PROJECT}}\\mcp-server-kusto\\src\\mcp_server_kusto", "run", "mcp-server-kusto", "--cluster", "{{ADX_CLUSTER_URL}}"]
		}
	}
}
